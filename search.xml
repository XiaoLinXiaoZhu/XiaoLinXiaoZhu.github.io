<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>01背包问题</title>
    <url>/2023/12/07/01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>[[___未完成]]</p>
<h2 id="01背包问题详解"><a href="#01背包问题详解" class="headerlink" title="01背包问题详解"></a>01背包问题详解</h2><p>01背包是一种动态规划问题。动态规划的核心就是状态转移方程，本文主要解释01背包状态转移方程的原理。</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>01背包问题可描述为如下问题：<br>有一个容量为V的背包，还有n个物体。现在忽略物体实际几何形状，我们认为只要背包的剩余容量大于等于物体体积，那就可以装进背包里。每个物体都有两个属性，即体积w和价值v。<br>问：如何向背包装物体才能使背包中物体的总价值最大？</p>
<h2 id="为什么不用贪心？"><a href="#为什么不用贪心？" class="headerlink" title="为什么不用贪心？"></a>为什么不用贪心？</h2><p>我在第一次做这个题目时考虑的是贪心算法。所谓贪心问题，就是每一步决策都采取最优解，按照此方案最后结果也是最优解。<br>为什么这个问题不能用贪心呢？<br>举个例子<br>我的背包容量为10，而且有4个物体，它们的体积和价值分别为<br>w1 = 8, v1 = 9<br>w2 = 3, v2 = 3<br>w3 = 4, v3 = 4<br>w4 = 3, v4 = 3<br>贪心是每一步采取最优拿法，即每一次都优先拿价值与体积比值最大的物体<br>c1 = v1/w1 = 1.125（最大）<br>c2 = v2/w2 = 1<br>c3 = v3/w3 = 1<br>c4 = v4/w4 = 1<br>所以优先拿第一个物体，随后背包再也装不下其他物体了，则最大价值为9。<br>但是这个问题的最优解是取物体2，3，4装进背包，最大价值为3+4+3=10！！！<br>所以这个问题不可以用贪心法来处理。</p>
<h2 id="原始的-01背包"><a href="#原始的-01背包" class="headerlink" title="原始的 01背包"></a>原始的 01背包</h2><p>01背包的状态转移方程为<br>`f[i][j] = max(f[i - 1][j], f[i - 1][j - w[i]] + v[j])</p>
<p>i代表对i件物体做决策，有两种方式—放入背包和不放入背包。<br>j表示当前背包剩余的容量。</p>
<p>转移方程的解释：<br>创建一个状态矩阵f，横坐标 i 是物体编号，纵坐标 j 为背包容量。<br>首先将 f 第0行和第0列初始化为0 （代码里面将整个f初始化为0了，其实只初始化第0行和第0列就够了）。这个表示不放物体时最大价值为0 。（物体编号从1开始）<br>接下来依次遍历f的每一行。如下所示。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = V; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (j &gt;= w[i])<span class="comment">//如果背包装得下当前的物体</span></span><br><span class="line">		&#123;</span><br><span class="line">			f[i][j] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][j], f[i - <span class="number">1</span>][j - w[i]] + v[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span><span class="comment">//如果背包装不下当前物体</span></span><br><span class="line">		&#123;</span><br><span class="line">			f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果背包装得下当前的物体，在遍历过程中分别计算第i件物体放入和不放入背包的价值，取其中大的做为当前的最大价值。<br>如果背包装不下当前物体那么第i个物体只有不放入背包一种选择。</p>
<p>不放入背包时:第i次决策后的最大价值和第i-1次决策时候的价值是一样的（还是原来的那些物体，没多没少）。<br>放入背包时:第i次决策后的价值为 第i-1次决策时候的价值 加上 当前物体的价值v[j]。物体放入背包后会使背包容量变为 j ，即没放物体之前背包的容量为j - w[i]。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(N1,N2) N1&gt;N2?N1:N2</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	第一行输入背包容量V和物体的个数n</span></span><br><span class="line"><span class="comment">	接下来有n行，每行包含两个数字，分别为该物体的花费和价值</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	vector&lt;<span class="type">int</span>&gt; w, v;<span class="comment">//w为花费，v为价值</span></span><br><span class="line">	vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; f;<span class="comment">//f状态矩阵</span></span><br><span class="line">	<span class="type">int</span> V, n;<span class="comment">//V背包容量，n物体数</span></span><br><span class="line">	<span class="keyword">while</span> (cin &gt;&gt; V &gt;&gt; n)</span><br><span class="line">	&#123;</span><br><span class="line">		w.<span class="built_in">clear</span>();</span><br><span class="line">		v.<span class="built_in">clear</span>();</span><br><span class="line">		f.<span class="built_in">clear</span>();</span><br><span class="line">		w.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">		v.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//输入原始数据</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> cur_w, cur_v;</span><br><span class="line">			cin &gt;&gt; cur_w &gt;&gt; cur_v;</span><br><span class="line">			w.<span class="built_in">push_back</span>(cur_w);</span><br><span class="line">			v.<span class="built_in">push_back</span>(cur_v);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//初始化状态矩阵</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">buff</span><span class="params">(V + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">			f.<span class="built_in">push_back</span>(buff);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//动态规划过程</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = V; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (j &gt;= w[i])</span><br><span class="line">				&#123;</span><br><span class="line">					f[i][j] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][j], f[i - <span class="number">1</span>][j - w[i]] + v[i]);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//输出答案</span></span><br><span class="line">		<span class="type">int</span> ans = f[n][V];</span><br><span class="line">		cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/Iseno_V/article/details/100001133">01背包问题详解（浅显易懂）-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>未完成</tag>
      </tags>
  </entry>
  <entry>
    <title>1.Source</title>
    <url>/2024/03/01/3.Source/</url>
    <content><![CDATA[<p>[[<strong>_]]<br>[[_</strong>]]</p>
<h3 id="1-Source"><a href="#1-Source" class="headerlink" title="1.Source"></a>1.Source</h3><p>这是一个用于验证图片是否能正常处理的markdown文件<sup><a href="#fn_1" id="reffn_1">1</a></sup></p>
<img src="/2024/03/01/3/03/01/3.Source/R8410b68f11e81baad4b2dc0c4762ae8d.jpg" class title="xxxx">
<p style="display:none"> 

![](/3.Source/img/next.png)
</p>







<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
  </entry>
  <entry>
    <title>C++的运算符重载</title>
    <url>/2023/12/08/C++%E7%9A%84%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</url>
    <content><![CDATA[<p>[[<strong>_C++]]<br>[[_</strong>未完成]] </p>
<h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>  运算符的重载，实际是一种特殊的函数重载，必须定义一个函数，并告诉C++编译器，当遇到该运算符时就调用此函数来行使运算符功能。这个函数叫做运算符重载函数（常为类的成员函数）。<br>  用函数的方式实现了（+ - * / []数组 &amp;&amp; || 逻辑 等）运算符的重载。根据需求决定重载那些运算符，用到的时候再百度案例即可。</p>
<span id="more"></span>
<h3 id="2-运算符重载的基本格式"><a href="#2-运算符重载的基本格式" class="headerlink" title="2.运算符重载的基本格式"></a>2.运算符重载的基本格式</h3><p>   返回值类型 类名::operator重载的运算符(参数表)<br>   {<br>   ……<br>   }</p>
<p>   operator是关键字，它与重载的运算符一起构成函数名。</p>
<h3 id="3-运算符重载的两种方法"><a href="#3-运算符重载的两种方法" class="headerlink" title="3.运算符重载的两种方法"></a>3.运算符重载的两种方法</h3><h3 id="二元运算符重载"><a href="#二元运算符重载" class="headerlink" title="二元运算符重载"></a>二元运算符重载</h3><p>1.类内重载</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span> (<span class="type">int</span> x, <span class="type">int</span> y): <span class="built_in">x</span>(x),<span class="built_in">y</span>(y) &#123;&#125;;</span><br><span class="line">    Point <span class="keyword">operator</span>+(<span class="type">const</span> Point &amp;b)&#123; <span class="comment">//类内重载，运算符重载函数作为类的成员函数</span></span><br><span class="line">        Point ret;</span><br><span class="line">        ret.x = <span class="keyword">this</span>-&gt;x + b.x;</span><br><span class="line">        ret.y = <span class="keyword">this</span>-&gt;y + b.y;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">a</span><span class="params">(<span class="number">2</span>,<span class="number">4</span>)</span>,<span class="title">b</span><span class="params">(<span class="number">5</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line">    Point c = a + b;      <span class="comment">//这里c++编译器会，自动去找 + 运算符的重载函数</span></span><br><span class="line">	cout&lt;&lt; <span class="string">&quot;x :&quot;</span> &lt;&lt; c.x &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y :&quot;</span> &lt;&lt; c.y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：x : 7     y : 7</p>
<p>重点：运算符重载是类内重载时，运算符重载函数作为类的成员函数，以上述代码为例 a + b 相当于 a 对象调用+方法并且传入参数时 b 对象。</p>
<p>2.类外重载（用友元函数的方法实现）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span> (<span class="type">int</span> x, <span class="type">int</span> y): <span class="built_in">x</span>(x),<span class="built_in">y</span>(y) &#123;&#125;;</span><br><span class="line">    <span class="keyword">friend</span> Point <span class="keyword">operator</span>+(<span class="type">const</span> Point &amp;, <span class="type">const</span> Point &amp;);   <span class="comment">//声明类的友元函数</span></span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point <span class="keyword">operator</span>+(<span class="type">const</span> Point &amp;a,<span class="type">const</span> Point &amp;b)&#123;<span class="comment">//类外重载,运算符重载函数作为类的友元函数</span></span><br><span class="line">    Point ret;</span><br><span class="line">    ret.x = a.x + b.x;</span><br><span class="line">    ret.y = a.y + b.y;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="function">Point <span class="title">a</span><span class="params">(<span class="number">2</span>,<span class="number">4</span>)</span>,<span class="title">b</span><span class="params">(<span class="number">5</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line">    Point c = a + b;</span><br><span class="line">	cout&lt;&lt; <span class="string">&quot;x :&quot;</span> &lt;&lt; c.x &lt;&lt; endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;y :&quot;</span> &lt;&lt; c.y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="一元运算符重载（注意：返回值当左值得时候，返回的是一个引用）"><a href="#一元运算符重载（注意：返回值当左值得时候，返回的是一个引用）" class="headerlink" title="一元运算符重载（注意：返回值当左值得时候，返回的是一个引用）"></a>一元运算符重载（注意：返回值当左值得时候，返回的是一个引用）</h3><p>1.插入运算符重载&gt;&gt; and 提取运算符重载&lt;&lt;<br>  以提取运算符重载&lt;&lt;为例，cout 是 ostream 类的对象。ostream 类和 cout 都是在头文件 中声明的。ostream 类将&lt;&lt;重载为成员函数。</p>
<p>下面我们重载 &lt;&lt; 使用cout输出a对象</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span> (<span class="type">int</span> x, <span class="type">int</span> y): <span class="built_in">x</span>(x),<span class="built_in">y</span>(y) &#123;&#125;;</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out , <span class="type">const</span> Point &amp;a);  <span class="comment">//因为 &lt;&lt; 是C++提供的类，我们无法访问，只能用友元函数。</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&lt;&lt; 运算符重载的函数实现   ostream是输入输出流的类</span></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out , <span class="type">const</span> Point &amp;a)&#123;</span><br><span class="line">    out &lt;&lt; <span class="string">&quot;&lt;Point&gt;( &quot;</span> &lt;&lt; a.x &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; a.y &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; c&lt;&lt; endl;    <span class="comment">//直接输出类会报错，需要上面的 &lt;&lt; 运算符重载</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：&lt; Point&gt;( 7, 7)<br>重点：另外应该会有人对ostream &amp;operator&lt;&lt;(ostream &amp;out , const Point &amp;a)函数感到疑惑，首先在重载&lt;&lt;时，返回值类型是ostream&amp;, 第一个参数也是ostream&amp; 。也就是说，表达式cout&lt;&lt;c的返回值仍是 cout，所以cout&lt;&lt;c&lt;&lt;endl;才能成立。</p>
<p>2.前置运算符重载++ and 后置运算符重载++<br>重点：为区别前置和后置运算符，C++编译器要求，需要在后置运算符重载函数中加参数“int”，这个类型在此除了以示区别之外并不代表任何实际含义；如果不加，编译器无法区分是前置++，还是后置++，导致报错。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span> (<span class="type">int</span> x, <span class="type">int</span> y): <span class="built_in">x</span>(x),<span class="built_in">y</span>(y) &#123;&#125;;</span><br><span class="line">    <span class="keyword">friend</span> Point <span class="keyword">operator</span>+(<span class="type">const</span> Point &amp;, <span class="type">const</span> Point &amp;);</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out , <span class="type">const</span> Point &amp;a);</span><br><span class="line">    Point&amp; <span class="keyword">operator</span>++()&#123; <span class="comment">//前置++运算符，需要引用返回，不需要参数。返回自增后的值，且返回的是一个左值 </span></span><br><span class="line">        <span class="keyword">this</span>-&gt;x ++;</span><br><span class="line">        <span class="keyword">this</span>-&gt;y ++;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">//const 修饰返回值不能修改  </span></span><br><span class="line">    <span class="type">const</span> Point <span class="keyword">operator</span>++(<span class="type">int</span>)&#123;<span class="comment">//后置++，不需要引用返回，需要参数区分。返回自增前的值，且返回的是一个右值</span></span><br><span class="line">        <span class="function">Point <span class="title">temp</span><span class="params">(x,y)</span></span>;       <span class="comment">//因为后置++，是先使用，后自++，所以这里要保存一个临时值，再++，返回的是临时值。</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;x ++;</span><br><span class="line">        <span class="keyword">this</span>-&gt;y ++;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point <span class="keyword">operator</span>+(<span class="type">const</span> Point &amp;a,<span class="type">const</span> Point &amp;b)&#123;</span><br><span class="line">    Point ret;</span><br><span class="line">    ret.x = a.x + b.x;</span><br><span class="line">    ret.y = a.y + b.y;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out , <span class="type">const</span> Point &amp;a)&#123;</span><br><span class="line">    out &lt;&lt; <span class="string">&quot;&lt;Point&gt;(&quot;</span> &lt;&lt; a.x &lt;&lt; <span class="string">&quot; , &quot;</span> &lt;&lt; a.y &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">a</span><span class="params">(<span class="number">2</span>,<span class="number">4</span>)</span>,<span class="title">b</span><span class="params">(<span class="number">5</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line">    Point c = a + b;</span><br><span class="line">    cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    c++;</span><br><span class="line">    cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    ++c;</span><br><span class="line">    cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.=等号运算符重载<br>C++中，对类对象进行操作时，我们就不能只是简简单单地，对类对象用=进行操作。<br>当我们没有自己设计等号运算符的重载函数，编译器会自动生成一个浅拷贝的赋值运算符的重载函数。<br>浅拷贝：只是简单地将一个对象的内存数据赋值给另一个对象，如果这个对象成员变量引用了外部资源时（new），那么这两个对象的成员变量都指向这个空间，当这两个对象生存周期结束时，进行析构，那么就会崩溃，对同一块内存我们delete了两次。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">Name</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">   	<span class="comment">//main函数中的问题   Name obj2 = obj1;  </span></span><br><span class="line">	<span class="comment">//解决方案: 手工的编写拷贝构造函数 使用深copy</span></span><br><span class="line">	<span class="built_in">Name</span>(<span class="type">const</span> Name&amp; obj)</span><br><span class="line">	&#123;</span><br><span class="line">		m_len = obj.m_len;</span><br><span class="line">		m_p = (<span class="type">char</span> *)<span class="built_in">malloc</span>(m_len + <span class="number">1</span>);</span><br><span class="line">		<span class="built_in">strcpy</span>(m_p, obj.m_p);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//等号运算符重载函数</span></span><br><span class="line">	Name&amp; <span class="keyword">operator</span>=(Name &amp;obj)  </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//1.先释放旧的内存</span></span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_p != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">delete</span>[] m_p;</span><br><span class="line">			m_len = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//2.根据obj分配内存大小</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;m_len = obj.m_len;</span><br><span class="line">		<span class="keyword">this</span>-&gt;m_p = <span class="keyword">new</span> <span class="type">char</span> [m_len+<span class="number">1</span>]; <span class="comment">//加1，结束符&#x27;\n&#x27;。</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">//3.把obj赋值</span></span><br><span class="line">		<span class="built_in">strcpy</span>(m_p, obj.m_p);  <span class="comment">//字符串的拷贝函数</span></span><br><span class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	~<span class="built_in">Name</span>()    <span class="comment">//析构函数</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (m_p != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">free</span>(m_p);</span><br><span class="line">			m_p = <span class="literal">NULL</span>;</span><br><span class="line">			m_len = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="type">char</span> *m_p ;</span><br><span class="line">	<span class="type">int</span> m_len; </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">Name <span class="title">obj1</span><span class="params">(<span class="string">&quot;abcdefg&quot;</span>)</span></span>;</span><br><span class="line">	Name obj2 = obj1;  <span class="comment">//C++编译器提供的 默认的copy构造函数  浅拷贝，需要手工编写构造函数</span></span><br><span class="line">	<span class="function">Name <span class="title">obj3</span><span class="params">(<span class="string">&quot;obj3&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">	obj1 = obj2 = obj3;    <span class="comment">//调用等号运算符重载</span></span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;hello...&quot;</span>&lt;&lt;endl;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/u014583317/article/details/109217780">C++运算符重载（类内、外重载）_类外重载运算符++-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 数组（vector）常用操作总结</title>
    <url>/2023/12/08/C++%20%E6%95%B0%E7%BB%84%EF%BC%88vector%EF%BC%89%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>[[<strong>_C++]]<br>[[_</strong>未完成]]</p>
<p><strong>目录</strong></p>
<p>1、vector对象的定义和初始化方式<br>2、vector 常用基础操作<br>3、使用迭代器的遍历、插入、删除操作</p>
<p>4、vector 元素的重排操作（排序、逆序等）</p>
<p>5、vector 中找最值</p>
<p>6、改变vector大小 及其 内存分配机制</p>
<p>7、vector数组 与 内置数组 的选择问题</p>
<hr>
<h3 id="1、vector对象的定义和初始化方式"><a href="#1、vector对象的定义和初始化方式" class="headerlink" title="1、vector对象的定义和初始化方式"></a>1、vector对象的定义和初始化方式</h3><p>常用的初始化方式及作用如下：</p>
<p>vector 中的数据类型 T 可以代表任何数据类型，如 int、string、class、vector（构建多维数组） 等，就像一个可以放下任何东西的容器，因此 vector 也常被称作<strong>容器</strong>。字符串类型 string 也是一种容器，c++ 中的不同种类的容器拥有很多相同的操作，因此 string 的很多操作方法可以直接用在 vector 中。</p>
<table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><tbody><tr><td>vector&lt;T&gt; 
v1</td><td>v1 是一个元素类型为 T 的空 vector</td></tr><tr><td>vector&lt;T&gt; 
v2(v1)</td><td>使用 v2 中所有元素初始化 v1</td></tr><tr><td>vector&lt;T&gt; 
v2 = v1</td><td>同上</td></tr><tr><td>vector&lt;T&gt; 
v3(n, val)</td><td>v3 中包含了 n 个值为 val 的元素</td></tr><tr><td>vector&lt;T&gt; 
v4(n)</td><td>v3 中包含了 n 个默认值初始化的元素</td></tr><tr><td>vector&lt;T&gt; 
v5{a, b, c...}</td><td>使用&nbsp;a, b, c... 初始化 v5</td></tr><tr><td>vector&lt;T&gt; 
v1</td><td>同上</td></tr><tr><td><p>vector&lt;vector&lt;int&gt;&gt; 
matrix(M,vector&lt;int&gt;(N));</p></td><td>二维数组初始化</td></tr></tbody></table>

<h3 id="2、vector-常用基础操作"><a href="#2、vector-常用基础操作" class="headerlink" title="2、vector 常用基础操作"></a>2、vector 常用基础操作</h3><p> 下表列出了 添加元素、查询、索引、赋值、比较 等常用操作方法。</p>
<table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><tbody><tr><td>v.empty()</td><td>如果 v 为空则返回 true，否则返回 false</td></tr><tr><td>v.size()</td><td>返回 v 中元素的个数</td></tr><tr><td><strong>v.push_back(val)</strong></td><td><p>向 vector 的尾端添加值为 val 的元素。</p><p>注意：vector <span style="color:#fe2c24;">不支持</span>&nbsp;<strong>push_front </strong>操作。</p></td></tr><tr><td><strong>v.pop_back(val)</strong></td><td><p>删除尾元素，返回<strong>void</strong>。vector同样&nbsp;<span style="color:#fe2c24;">不支持</span>&nbsp;<strong>pop_front</strong> 操作。若想在同时弹出元素的值，就必须在执行弹出之前保存它（可以使用 v.back()）。</p></td></tr><tr><td>v[n]</td><td>返回 v 中第 n 个位置上元素的<span style="color:#fe2c24;"><strong>引用</strong></span>，不能用下标操作添加元素</td></tr><tr><td>v.back()</td><td>返回 v 中最后一个元素的<span style="color:#fe2c24;"><strong>引用</strong></span></td></tr><tr><td>v.front()</td><td>返回 v 中第一个元素的<span style="color:#fe2c24;"><strong>引用</strong></span></td></tr><tr><td>v1 = v2</td><td>用 v2 中的元素替换 v1 中的元素</td></tr><tr><td>v1 =&nbsp;{a, b, c...}</td><td>用元素 {a, b, c...}&nbsp;替换 v1 中的元素</td></tr><tr><td>v1 == v2</td><td>当且仅当拥有相同数量且相同位置上值相同的元素时，v1 与 v2 相等</td></tr><tr><td>v1 != v2</td><td>自行体会</td></tr><tr><td>&lt;, &lt;=, &gt;, &gt;=</td><td>以字典序进行比较</td></tr></tbody></table>

<h3 id="3、使用迭代器的遍历、插入、删除操作"><a href="#3、使用迭代器的遍历、插入、删除操作" class="headerlink" title="3、使用迭代器的遍历、插入、删除操作"></a>3、使用迭代器的遍历、插入、删除操作</h3><p>迭代器类似于指针，提供了对象的间接访问，但获取迭代器并不是使用取地址符。如果将指针理解为元素的“地址”，那么迭代器可以理解为元素的“位置”。可以使用迭代器访问某个元素，迭代器也能从一个元素移动到另一个元素。</p>
<p>一个迭代器的范围由一对迭代器表示，分别为 <strong>begin</strong> 和 <strong>end</strong>。其中 <strong>begin</strong> 成员返回指向第一个元素的迭代器；<strong>end</strong> 成员返回容器最后一个元素的下一个位置（one past the end），也就是指向一个根本不存在的尾后位置，这样的迭代器没什么实际含义，仅是个标记而已，表示已经处理完了容器中的所有元素。所以 <strong>begin</strong> 和 <strong>end</strong> 表示的是一个左闭右开的区间 [ <strong>begin</strong> , <strong>end</strong>)</p>
<p>迭代器可以用来实现容器的<strong>遍历</strong>、<strong>插入</strong>等操作，可以细品下面的例子：</p>
<p><strong>1、遍历</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    </span><br><span class="line">    vector&lt;string&gt; a&#123;<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>&#125;;    </span><br><span class="line">    <span class="keyword">auto</span> it = a.<span class="built_in">begin</span>();  </span><br><span class="line">    <span class="comment">// 返回一个迭代器类型，一般来说我们并不关心迭代器具体的数据类型    </span></span><br><span class="line">    <span class="keyword">while</span>(it != a.<span class="built_in">end</span>()) &#123;        </span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;        </span><br><span class="line">        it++;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 运行结果 </span></span><br><span class="line"><span class="comment">//0 1 2 3 4 5 6 7 8 </span></span><br></pre></td></tr></table></figure>
<p><strong>2、插入</strong></p>
<p>插入操作的函数：</p>
<p><strong>v.insert(p, n, val)</strong> ：在迭代器 p 之前插入 n 个值为 val 的元素，返回新添加的第一个元素的迭代器。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, &#125;;    </span><br><span class="line"><span class="keyword">auto</span> it1 = a.<span class="built_in">begin</span>();  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个迭代器类型，一般来说我们并不关心迭代器具体的数据类型 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> it2 = a.<span class="built_in">insert</span>((it1+<span class="number">1</span>), &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;);  </span><br><span class="line"><span class="comment">// 利用迭代器在第二个元素之前插入数据    </span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; *it2 &lt;&lt; endl;  </span><br><span class="line"><span class="comment">// 返回的是新插入元素第一个元素的迭代器   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> it = a.<span class="built_in">begin</span>();  </span><br><span class="line"><span class="keyword">while</span>(it != a.<span class="built_in">end</span>())    &#123;        </span><br><span class="line">    cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;        </span><br><span class="line">it++;    </span><br><span class="line">&#125;    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"><span class="comment">// 输出结果 </span></span><br><span class="line"><span class="comment">//61 6 7 8 2 3</span></span><br></pre></td></tr></table></figure>
<p><strong>3、删除</strong> </p>
<p>删除操作的函数：</p>
<p><strong>v.erase(p)</strong> ：删除迭代器 p 所指的元素，返回指向被删除元素之后元素的迭代器。</p>
<p><strong>v.erase(b, e)</strong> ：删除迭代器 b, e 之间的元素，返回指向最后一个被删除元素之后元素的迭代器。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, &#125;;    </span><br><span class="line">    <span class="keyword">auto</span> it1 = a.<span class="built_in">begin</span>();  </span><br><span class="line">    <span class="comment">// 返回一个迭代器类型，一般来说我们并不关心迭代器具体的数据类型 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> it2 = a.<span class="built_in">erase</span>(it1+<span class="number">1</span>);  </span><br><span class="line">    <span class="comment">// 删除元素 2    </span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; *it2 &lt;&lt; endl;  </span><br><span class="line">    <span class="comment">// 返回的是新插入元素第一个元素的迭代器 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> it = a.<span class="built_in">begin</span>();  </span><br><span class="line">    <span class="comment">//     </span></span><br><span class="line">    <span class="keyword">while</span>(it != a.<span class="built_in">end</span>())    &#123;        </span><br><span class="line">        cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;        </span><br><span class="line">        it++;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行结果 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//31 3</span></span><br></pre></td></tr></table></figure>
<h3 id="4、vector-元素的重排操作（排序、逆序等）"><a href="#4、vector-元素的重排操作（排序、逆序等）" class="headerlink" title="4、vector 元素的重排操作（排序、逆序等）"></a>4、vector 元素的重排操作（排序、逆序等）</h3><p>容器的重排需要用到头文件 <code>&lt;algorithm&gt;</code> 中的算法</p>
<p><strong>1、排序 sort()</strong></p>
<p>使用到的函数为 <strong>sort()</strong> ：按输入序列的字典序<strong>升序</strong>排序，原位操作，无返回值函数原型：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> std::sort&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator, std::vector&lt;<span class="type">int</span>&gt;::iterator)</span><br></pre></td></tr></table></figure>
<p>举例：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">9</span>&#125;;    </span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());  </span><br><span class="line">    <span class="comment">//原位操作    </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i:a)        </span><br><span class="line">    cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="comment">// 输出结果 </span></span><br><span class="line">    <span class="comment">//0 0 0 2 2 2 3 9 </span></span><br></pre></td></tr></table></figure>
<p><strong>2、消除相邻的重复元素</strong> <strong>unique()</strong></p>
<p>使用到的函数为 <strong>unique()</strong> ：将输入序列相邻的重复项“消除”，返回一个指向不重复值范围末尾的迭代器，一般配合 sort() 使用，函数原型：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::vector&lt;<span class="type">int</span>&gt;::iterator </span><br><span class="line">std::unique&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator, std::vector&lt;<span class="type">int</span>&gt;::iterator)</span><br></pre></td></tr></table></figure>
<p>举例：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">9</span>&#125;;    </span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());  </span><br><span class="line"><span class="comment">// 先排序    </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i:a)   cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>; </span><br><span class="line"><span class="comment">// 输出    </span></span><br><span class="line">cout &lt;&lt; endl;    </span><br><span class="line"><span class="keyword">auto</span> end_unique = <span class="built_in">unique</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());  </span><br><span class="line"><span class="comment">//将输入序列相邻的重复项“消除”，返回一个指向不重复值范围末尾的迭代器    a.erase(end_unique, a.end()); </span></span><br><span class="line"><span class="comment">// 删除末尾元素    </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i:a)   cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>; </span><br><span class="line"><span class="comment">// 输出    </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 运行结果 </span></span><br><span class="line"><span class="comment">//0 0 0 2 2 2 3 9 0 2 3 9</span></span><br></pre></td></tr></table></figure>
<p><strong>3、逆序 reverse()</strong></p>
<p>方法1：使用到的函数为 <strong>reverse**</strong>()** ：将输入序列按照下标逆序排列，原位操作，无返回值函数原型：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> std::reverse&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator, std::vector&lt;<span class="type">int</span>&gt;::iterator)</span><br></pre></td></tr></table></figure>
<p> 方法2：使用 <code>greater&lt;int&gt;()</code> 作为参数（内置函数）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br></pre></td></tr></table></figure>
<p> 举例：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">9</span>&#125;;    </span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());  </span><br><span class="line">    <span class="comment">// 原位逆序排列    </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i:a)   </span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>; </span><br><span class="line">    <span class="comment">// 输出    </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 运行结果 </span></span><br><span class="line"><span class="comment">//9 0 3 0 2 2 0 2 </span></span><br></pre></td></tr></table></figure>
<h3 id="5、vector-中找最值"><a href="#5、vector-中找最值" class="headerlink" title="5、vector 中找最值"></a>5、vector 中找最值</h3><p>容器的重排同样需要用到头文件 <code>&lt;algorithm&gt;</code> 中的算法。</p>
<p><strong>1、最大值</strong> auto it = max_element(v.begin, v,end())，返回最大值的迭代器，函数原型如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> std::vector&lt;<span class="type">int</span>&gt;::iterator std::max_element&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator, std::vector&lt;<span class="type">int</span>&gt;::iterator)</span><br></pre></td></tr></table></figure>
<p><strong>2、最小值</strong> auto it = min_element(v.begin, v,end())，返回最小值的迭代器，函数原型如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> std::vector&lt;<span class="type">int</span>&gt;::iterator std::min_element&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator, std::vector&lt;<span class="type">int</span>&gt;::iterator)</span><br></pre></td></tr></table></figure>
<p><strong>3、相对位置大小</strong> auto b = distance(x, y)，x、y 是迭代器类型，返回 x、y 之间的距离，可以用来获取最大/小值的索引，函数原型如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::<span class="type">ptrdiff_t</span> std::distance&lt;std::vector&lt;<span class="type">int</span>&gt;::iterator&gt;(std::vector&lt;<span class="type">int</span>&gt;::iterator __first, std::vector&lt;<span class="type">int</span>&gt;::iterator __last)</span><br></pre></td></tr></table></figure>
<p><strong>举例：</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>&#125;)</span></span>;    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> b = <span class="built_in">distance</span>(a.<span class="built_in">begin</span>(), <span class="built_in">min_element</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()));    </span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; a[b] &lt;&lt; endl;    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="comment">// 输出 </span></span><br><span class="line">    <span class="comment">//-2</span></span><br></pre></td></tr></table></figure>
<h3 id="6、改变vector大小-及其-内存分配机制"><a href="#6、改变vector大小-及其-内存分配机制" class="headerlink" title="6、改变vector大小 及其 内存分配机制"></a>6、改变vector大小 及其 内存分配机制</h3><p>与内置数组一样，vector 的所有元素必须存放在一片连续的内存中，但 vector 的大小可变性使得其所占用的内存大小也是可变的。</p>
<p>为了避免每次改变 vector 时重新分配内存空间再将原来的数据从新拷贝到新空间的操作，标准库实现者采用了减少容器空间重新分配次数的策略：当不得不获取新空间时，vector（string 也是如此）通常会分配比需求更大的空间作为预留的备用空间，这样就减少了重新分配空间的次数。</p>
<ul>
<li>改变 vector 的大小可以使用 <strong>v.resize(n, t)</strong> 函数，调整 <strong>v</strong> 的大小为 <strong>n</strong> 个元素，任何新添加的元素都初始化为值 <strong>t</strong> 。</li>
</ul>
<p><strong>举例：</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; a;</span><br><span class="line">    a.<span class="built_in">resize</span>(<span class="number">3</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">3</span>));</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;row : &quot;</span> &lt;&lt; a.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;col : &quot;</span> &lt;&lt; a[<span class="number">0</span>].<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="comment">// 输出 </span></span><br><span class="line">    <span class="comment">//row : 3col : 3</span></span><br></pre></td></tr></table></figure>
<ul>
<li>函数 <strong>v.resize(n)</strong>  可以用来告知容器分配至少能分配 n 个元素的内存空间。并不改变容器中元素的数量，仅影响 vector 预先分配多大的内存空间</li>
</ul>
<h3 id="7、vector数组-与-内置数组-的选择问题"><a href="#7、vector数组-与-内置数组-的选择问题" class="headerlink" title="7、vector数组 与 内置数组 的选择问题"></a>7、vector数组 与 内置数组 的选择问题</h3><p>一般来说，我们在使用 C++ 编程时会将 <strong>vector</strong> 类型的数据与类似于使用 <strong>a[N]</strong> 定义的内置数组统称为数组，两者是很类似的数据结构，在一般的任务中使用 vector数组 与使用内置数组通常没有什么区别。两者的区别主要如下：</p>
<ul>
<li>vector数组 是 C++ 的标准库类型，即使用 vector 定义的变量本质上是定义了一个 vector 类的对象。而类似于使用 <strong>a[N]</strong> 定义的数组是内置数组，类似于 int、float 等内置类型的变量。</li>
<li>vector数组 的大小可变，而内置数组类型在定义时必须明确定义大小，之后大小不能变化。因为内置数组的大小固定，因此对某些特殊的应用来说程序运行时的性能较好，但是也失去了一定的灵活性。</li>
</ul>
<p><strong>如果不确定元素的确定个数，那么 vector 就是最好的选择。</strong></p>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++返回vector、将vector作为参数传递</title>
    <url>/2023/12/08/C++%E8%BF%94%E5%9B%9Evector%E3%80%81%E5%B0%86vector%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</url>
    <content><![CDATA[<p>[[<strong>_C++]]<br>[[_</strong>未完成]] </p>
<h3 id="C-返回vector、将vector作为参数传递"><a href="#C-返回vector、将vector作为参数传递" class="headerlink" title="C++返回vector、将vector作为参数传递"></a>C++返回vector、将vector作为参数传递</h3><p>在C++里很多时候我们会遇到函数想返回两个以上结果的情况，这时候可以用数组（vector）、类来作为容器返回，也可以声明一个全局变量的数组，将数值存放在数组里解决。</p>
<p>第一个方式是使用引用来解决，将vector的引用在函数间传递<br>这是一个例子，假设我要传入一个数，我的函数的功能是返回这个数后面十个数的序列。</p>
<h1 id="include"><a href="#include" class="headerlink" title="include"></a>include<iostream></iostream></h1><h1 id="include-1"><a href="#include-1" class="headerlink" title="include"></a>include<vector></vector></h1><p>using namespace std;</p>
<p>/<em><br>输入一个数，返回这个数后面的十个数字序列<br>注意参数的这个 &amp; 符号不能省略
</em>/<br>void getSequence(int num,vector<int>&amp; sequence){<br>    for(int i=0;i&lt;10;i++){<br>        sequence.push_back(i+num);<br>    }<br>}</int></p>
<p>int main(){<br>    int num=9;<br>    vector<int> sequence;<br>    //在主调函数这边，直接传入该vector变量<br>    getSequence(num,sequence);<br>    //访问该vector的值的时候，也是直接访问即可<br>    for(vector<int>::iterator it=sequence.begin();it!=sequence.end();it++){<br>        cout&lt;&lt;*it&lt;&lt;endl;<br>    }<br>}<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24</int></int></p>
<p>第二个方式是返回vector变量<br>在被调用函数中声明一个vector变量，函数结束的时候返回vector变量<br>但是这样的传参方式我有一个不太理解的地方，既然vector变量是在被调函数中声明的，就应该是一个局部变量，在被调函数执行完毕之后这部分空间应该会被销毁，这个变量就无法访问到了，莫非vector是在堆空间开辟的地址？然后返回的其实是指向堆空间vector的指针？</p>
<p>vector<int> getSequence(int num){<br>    vector<int> sequence;<br>    for(int i=0;i&lt;10;i++){<br>        sequence.push_back(i+num);<br>    }<br>    return sequence;<br>}</int></int></p>
<p>int main(){<br>    int num=9;<br>    vector<int> sequence;<br>    //在主调函数这边，只传入num<br>    sequence=getSequence(num);<br>    //访问该vector的值的时候，也是直接访问即可<br>    for(vector<int>::iterator it=sequence.begin();it!=sequence.end();it++){<br>        cout&lt;&lt;*it&lt;&lt;endl;<br>    }<br>}</int></int></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++：windows消息windowsToast的使用</title>
    <url>/2024/02/15/C++%EF%BC%9Awindows%E6%B6%88%E6%81%AFwindowsToast%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>windowsToast是一个集成了window的toast消息提醒的第三方c++库，可以十分便捷地在windows下显示toast消息提醒。</p>
<h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="导入库"><a href="#导入库" class="headerlink" title="导入库"></a>导入库</h3><p>如果担心冲突的话就导入之后在每一条wintoast的命令前面加上<code>wintoastlib::</code> 即可，但是我无所谓，所以说直接导入后加<code>using namespace std;</code></p>
<p>一般还需要包含windows库，所以说一并加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &quot;wintoastlib.h&quot;</span><br><span class="line">#include &lt;windows.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace WinToastLib;</span><br></pre></td></tr></table></figure>
<h3 id="定义ToastHandler"><a href="#定义ToastHandler" class="headerlink" title="定义ToastHandler"></a>定义ToastHandler</h3><p>ToastHandler定义了当展示的toast消息接受不同的响应之后所执行的命令，通过继承<code>IWinToastHandler</code> 我们可以自定义自己想要的响应程序。</p>
<p>查看<code>IWinToastHandler</code> 的定义我们得知其有以下几种状态：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IWinToastHandler</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="keyword">enum</span> <span class="title class_">WinToastDismissalReason</span> &#123;</span><br><span class="line">            UserCanceled      = ToastDismissalReason::ToastDismissalReason_UserCanceled,</span><br><span class="line">            ApplicationHidden = ToastDismissalReason::ToastDismissalReason_ApplicationHidden,</span><br><span class="line">            TimedOut          = ToastDismissalReason::ToastDismissalReason_TimedOut</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">virtual</span> ~<span class="built_in">IWinToastHandler</span>()                                      = <span class="keyword">default</span>;</span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">toastActivated</span><span class="params">()</span> <span class="type">const</span>                              </span>= <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">toastActivated</span><span class="params">(<span class="type">int</span> actionIndex)</span> <span class="type">const</span>               </span>= <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">toastDismissed</span><span class="params">(WinToastDismissalReason state)</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">toastFailed</span><span class="params">()</span> <span class="type">const</span>                                 </span>= <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>对于这些未定义的虚函数，我们对其继承并且加以定义：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyToastHandler</span> : <span class="keyword">public</span> WinToastLib::IWinToastHandler &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">toastActivated</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;The user clicked in this toast&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">toastActivated</span><span class="params">(<span class="type">int</span> actionIndex)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;The user clicked on action #&quot;</span> &lt;&lt; actionIndex &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">16</span> + actionIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">toastDismissed</span><span class="params">(WinToastDismissalReason state)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (state) &#123;</span><br><span class="line">            <span class="keyword">case</span> UserCanceled:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;The user dismissed this toast&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TimedOut:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;The toast has timed out&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">2</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ApplicationHidden:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;The application hid the toast using ToastNotifier.hide()&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;Toast not activated&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">4</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">toastFailed</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::wcout &lt;&lt; <span class="string">L&quot;Error showing current toast&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>我们也可以对于这些响应写出更为复杂的交互逻辑，但是在这里仅仅展示不同情况输出不同内容提示的代码。</p>
<h3 id="定义WinToastTemplate"><a href="#定义WinToastTemplate" class="headerlink" title="定义WinToastTemplate"></a>定义WinToastTemplate</h3><p><code>WinToastTemplate</code> 可以理解为所需要展示的消息提示的具体内容，下面是一个简单的函数示例，包含了从初始化定义到自定义格式和内容</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">ShowNotification</span><span class="params">(std::wstring&amp; appName, std::wstring&amp; firstLine, std::wstring&amp; secondLine, std::wstring&amp; imagePath,std::wstring&amp; hero_imagePath)</span> </span>&#123;</span><br><span class="line">    std::wstring appUserModelID = <span class="string">L&quot;SystemProxy_Agency_Tool&quot;</span>;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">//这里是初始化消息提示的appnamde和appID</span></span><br><span class="line">	<span class="comment">//appname不能包含特殊字符，appname中的_会被转化为空格</span></span><br><span class="line">    WinToast::<span class="built_in">instance</span>()-&gt;<span class="built_in">setAppName</span>(appName);</span><br><span class="line">    WinToast::<span class="built_in">instance</span>()-&gt;<span class="built_in">setAppUserModelId</span>(appUserModelID);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//这里是设定格式为ImageAndText02</span></span><br><span class="line">    WinToastTemplate templ = <span class="built_in">WinToastTemplate</span>(WinToastTemplate::ImageAndText02);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设定具体的文本内容和图片路径</span></span><br><span class="line">	<span class="comment">//WinToastTemplate::CropHint::Square指的是将图片裁剪为正方形</span></span><br><span class="line">	</span><br><span class="line">    templ.<span class="built_in">setTextField</span>(firstLine, WinToastTemplate::FirstLine);</span><br><span class="line">    templ.<span class="built_in">setTextField</span>(secondLine, WinToastTemplate::SecondLine);</span><br><span class="line">    <span class="comment">//展示小图片</span></span><br><span class="line">    templ.<span class="built_in">setImagePath</span>(imagePath, WinToastTemplate::CropHint::Square);</span><br><span class="line">    <span class="comment">//展示大图片</span></span><br><span class="line">    templ.<span class="built_in">setHeroImagePath</span>(hero_imagePath);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//展示toast，样式为我们设定好了的templ，返回函数为我们指定的MyToastHandler</span></span><br><span class="line">    <span class="keyword">if</span> (WinToastLib::WinToast::<span class="built_in">instance</span>()-&gt;<span class="built_in">initialize</span>()) &#123;</span><br><span class="line">        WinToastLib::WinToast::<span class="built_in">instance</span>()-&gt;<span class="built_in">showToast</span>(templ, <span class="keyword">new</span> <span class="built_in">MyToastHandler</span>());</span><br><span class="line">        <span class="comment">//消息延时5s后自动退出</span></span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更多的消息提示样式可以看看作者的库里面写的说明：<br><a href="https://github.com/mohabouje/WinToast">mohabouje/WinToast(github.com)</a></p>
<p>或者可以看看这位大佬写的示例：<br><a href="https://www.codeproject.com/Articles/5286393/Cplusplus-Windows-Toast-Notification">C++: Windows Toast Notification - CodeProject</a></p>
<h3 id="调用消息提醒"><a href="#调用消息提醒" class="headerlink" title="调用消息提醒"></a>调用消息提醒</h3><p>使用这种方式创建消息提醒有一个缺点，就是创建出来的命令提示符的黑框会一直保持到消息消失，十分的丑。</p>
<p>所以说可以选择使用bat的<code>start /b</code>间接启动，来使得黑框最小化：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start /b &quot;&quot; E:\AgencyProxyTools\messageBox.exe</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://github.com/mohabouje/WinToast">mohabouje/WinToast(github.com)</a></p>
<p><a href="https://www.codeproject.com/Articles/5286393/Cplusplus-Windows-Toast-Notification">C++: Windows Toast Notification - CodeProject</a></p>
<p><a href="https://blog.csdn.net/weixin_45165669/article/details/119424897">C++ WIn10 通知:WinToast_c语言调用win10操作中心发送通知-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++：生成的exe文件如何传参数到main中</title>
    <url>/2024/02/15/C++%EF%BC%9A%E7%94%9F%E6%88%90%E7%9A%84exe%E6%96%87%E4%BB%B6%E5%A6%82%E4%BD%95%E4%BC%A0%E5%8F%82%E6%95%B0%E5%88%B0main%E4%B8%AD/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<h3 id="argc和argv是什么"><a href="#argc和argv是什么" class="headerlink" title="argc和argv是什么"></a>argc和argv是什么</h3><p>C/C++语言中的main函数，经常带有参数argc，argv，如下： </p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>
<p>这两个参数的作用是什么呢？argc 是指命令行输入参数的个数，argv存储了所有的命令行参数。假如你的程序是hello.exe，如果在命令行运行该程序，运行命令为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello.exe Shiqi Yu  </span><br></pre></td></tr></table></figure>
<p>那么，argc的值是 3，argv[0]是”hello.exe”，argv[1]是”Shiqi”，argv[2]是”Yu”。     </p>
<h3 id="argc和argv的使用"><a href="#argc和argv的使用" class="headerlink" title="argc和argv的使用"></a>argc和argv的使用</h3><p>下面的程序演示argc和argv的使用：  </p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> ** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; argc; i++)</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Argument %d is %s.\n&quot;</span>, i, argv[i]);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>假如上述代码编译为hello.exe，那么运行   </p>
<p>hello.exe a b c d e<br>将得到<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Argument 0 is hello.exe.  </span><br><span class="line">Argument 1 is a.  </span><br><span class="line">Argument 2 is b.  </span><br><span class="line">Argument 3 is c.  </span><br><span class="line">Argument 4 is d.  </span><br><span class="line">Argument 5 is e.  </span><br></pre></td></tr></table></figure></p>
<p>运行<br>hello.exe lena.jpg<br>将得到<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Argument 0 is hello.exe.</span><br><span class="line">Argument 1 is lena.jpg.</span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>COCOON：开关类机关</title>
    <url>/2024/01/14/COCOON%EF%BC%9A%E5%BC%80%E5%85%B3%E5%BC%80-%E7%B1%BB%E6%9C%BA%E5%85%B3/</url>
    <content><![CDATA[<p>[[___游戏设计]]</p>
<h3 id="COCOON：开关开-类机关"><a href="#COCOON：开关开-类机关" class="headerlink" title="COCOON：开关开-类机关"></a>COCOON：开关开-类机关</h3><p>这个可以说是COCOON中最基础的解密构成元素，最基础的结构。</p>
<p>最本质的特征就是A控制甲的上下，甲的上下又可以在甲上控制，玩家需要先使用A将甲移动过来，之后就能够自由使用甲  </p>
<blockquote>
<p>比如：</p>
<p>————-=              —-甲—— =——————<br>—————-A-</p>
</blockquote>
<p>先使用a将甲移过来，然后就可以自由的使用甲。</p>
<p>这样的机关的最大的优势就是</p>
<ol>
<li>首先，玩家知道这里有路。</li>
<li>其次，玩家知道需要寻找一个A使得这个电梯启动。</li>
<li>玩家在平台过来的时候也就一并知道了这个电梯能够去哪里。</li>
</ol>
<span id="more"></span>
]]></content>
      <tags>
        <tag>游戏设计</tag>
      </tags>
  </entry>
  <entry>
    <title>COCOON：精妙绝伦的游戏设计</title>
    <url>/2024/01/14/COCOON%EF%BC%9A%E7%B2%BE%E5%A6%99%E7%BB%9D%E4%BC%A6%E7%9A%84%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>今天游玩通关了COCOON这款游戏，真的是精妙绝伦。</p>
<p>整个游戏中没有一个文字的描述，却总是能够让人在谜题之中找到方向，其中包含了十分巧妙地引导以及十分优秀的谜题设计。</p>
<p>游戏在画风上采用的是低多边形画风，简单但不简陋，在此基础之上构建起了四个各有特色的世界，以及每个世界不太一样的解密巧思。</p>
<span id="more"></span>
<h2 id="一、游戏的谜题设计"><a href="#一、游戏的谜题设计" class="headerlink" title="一、游戏的谜题设计"></a>一、游戏的谜题设计</h2><h3 id="1-世界球：进入与退出"><a href="#1-世界球：进入与退出" class="headerlink" title="1.世界球：进入与退出"></a>1.世界球：进入与退出</h3><p>每个球都是一个世界球，可以分别在特殊的装置上进行进入和退出，在此之上就创造除了类似于parade box的烧脑解密的效果。</p>
<h3 id="2-世界球：各有特色"><a href="#2-世界球：各有特色" class="headerlink" title="2.世界球：各有特色"></a>2.世界球：各有特色</h3><p>每个世界不太一样的解密巧思：</p>
<ol>
<li>橙色：结晶，破开结晶，可以帮忙开锁的小机器人，最基础的[[COCOON：开关开-类机关]]，需要拿着球才可以走上去的路，以及类似水管的管道解密。</li>
<li>绿色：量子态（有两种形态的地形，来回切换可以在不同的地形上面进行移动或者上下）</li>
<li>紫色：多重态，从现在开始不只是有一个球，而是可以通过果子来获得球（原有的那个球会消失），并且你将可以操作一个小的机器人</li>
<li>白色：你可以使用这个球发射子弹，子弹可以反弹以及触发开关，并且由此衍生出的镜面反射解密</li>
</ol>
<p>这样的优点是帮助玩家建立起良好的解密逻辑，而不会思考一个机关到底需要使用什么球，并且在玩家进入新的世界的时候可以拥有不同的解密体验。</p>
<p>更为难得可贵的是，游戏中还将这四个世界中的不同的机制进行了串联，使得玩家在游玩过程中不是”用完就抛“，而是仍然需要在后续的解密中利用特性。</p>
<h3 id="3-优秀的游戏引导"><a href="#3-优秀的游戏引导" class="headerlink" title="3.优秀的游戏引导"></a>3.优秀的游戏引导</h3><p>在这款游戏中，没有一个文字的引导，所有的按键只有上下左右移动 和 一个空格交互键，但是却清晰明了地将游戏中的信息传递给了玩家，我认为其中比较重要的有一下几点特征。</p>
<h4 id="A-摒弃了任何的强制性引导以及一切的文字引导"><a href="#A-摒弃了任何的强制性引导以及一切的文字引导" class="headerlink" title="A)摒弃了任何的强制性引导以及一切的文字引导"></a>A)摒弃了任何的强制性引导以及一切的文字引导</h4><p>想要设计一个优秀的游戏引导，首先需要做的就是掘弃这些有害的因素，而是使用其他的引导方式</p>
<h4 id="B-使用自然的视觉吸引"><a href="#B-使用自然的视觉吸引" class="headerlink" title="B)使用自然的视觉吸引"></a>B)使用自然的视觉吸引</h4><p>在需要吸引玩家的装置之上设计特殊的图案，花色，或者颜色。也可以在场景上铺设特殊的地板来引导玩家前进的方向</p>
<h4 id="C-使用简明统一的设计语言"><a href="#C-使用简明统一的设计语言" class="headerlink" title="C)使用简明统一的设计语言"></a>C)使用简明统一的设计语言</h4><p>在游戏中，需要设计简明统一的设计语言。玩家可以一眼就看出来哪个部分属于机关，哪个地方属于设计的场景。及时是到了一个全新的世界球，游戏中的设计语言也应当是一致，且便于玩家解读的。</p>
<h4 id="D-摒弃冗余选项"><a href="#D-摒弃冗余选项" class="headerlink" title="D)摒弃冗余选项"></a>D)摒弃冗余选项</h4><p>想要使得玩家可以获得良好的游戏体验，就应当摒弃冗余的选项，让游戏中的物件处于”存在必有其他的道理“的认知中。</p>
<p>有些游戏会设计一些冗余的选项给予玩家做出选择，或者说给出10个交互点但是其中只有3个是关键的。游戏不需要这样的设计，这样的设计只会让玩家感到困惑。</p>
<p>或许有人会说”冗余选项是为了丰富故事背景而设计的“，我认为，如果这是为了丰富故事背景而所必需的，那么为什么不将其设计进游戏的正确选项或者解密途径中呢？</p>
<p>相反，鲜明确定的”设计这个东西必然有其的道理“的想法，同时在玩家和策划的脑中树立时，可以更好的让玩家感受到游戏设计中的巧思。同时，玩家也不会被误导而是对游戏存在一个”应然-实然“的配对，从而产生掌控感和成就感。</p>
<h4 id="E-使用顺畅简单的解密途径"><a href="#E-使用顺畅简单的解密途径" class="headerlink" title="E)使用顺畅简单的解密途径"></a>E)使用顺畅简单的解密途径</h4><p>在游戏中，游戏的谜题设计需要<strong>符合人的直觉逻辑</strong>。但是这并不意味着全部的关卡需要设计的很简单，我个人认为，优秀的谜题设计有两种：</p>
<ol>
<li>一种是像阿基米德那样的”我知道了“的利用已有知识，通过个人的逻辑推理得到的谜底</li>
<li>第二种就是像妙手偶得之的那种，”简单“但是”妙“的设计</li>
</ol>
<p>这个简单而妙实际上就是符合人的认知逻辑。  </p>
<blockquote>
<p>[!example]</p>
<ol>
<li>当我们看见一个想要我们输入密码的地方，直觉的想法就是：</li>
</ol>
<ul>
<li>到周围看看<br>  然后这个时候，你就能找到答案。  </li>
</ul>
<ol>
<li>再比如说，后面更近一步，你看到超出视野外的东西，但是它底下有一摊水，那么很自然的：</li>
</ol>
<ul>
<li>你会想到通过移动，想办法在水中的倒影中找到它。  </li>
</ul>
<ol>
<li>实际上，小小梦魇中使用电线作为线索同样是使用了人的固有认知作为条件进行解密</li>
</ol>
</blockquote>
<h4 id="F-将解密变成模块化"><a href="#F-将解密变成模块化" class="headerlink" title="F)将解密变成模块化"></a>F)将解密变成模块化</h4><p>将每一段解密的长度进行简化，玩家一次性只需要解决一个谜题，谜题和谜题之间的阶段性将会需要被强调。</p>
<p>解密中不需要存在什么这里的道具需要在另一个地方使用，另一个道具需要在这里使用这样的干瘪的串联结构，取而代之的是核心玩法的贯彻始终。</p>
<p>这样的话玩家可以明确知道自己完成目标的途径和范围。</p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
      </tags>
  </entry>
  <entry>
    <title>bat：检测进程运行情况</title>
    <url>/2024/02/15/bat%EF%BC%9A%E6%A3%80%E6%B5%8B%E8%BF%9B%E7%A8%8B%E8%BF%90%E8%A1%8C%E6%83%85%E5%86%B5/</url>
    <content><![CDATA[<p>[[<strong>_bat]]<br>[[_</strong>]]</p>
<p>下面是一个简单的代码用于检测<code>clash.exe</code>是否运行：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">tasklist|<span class="built_in">findstr</span> -i &quot;notepad.exe&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">ERRORLEVEL</span> <span class="number">1</span> (</span><br><span class="line">	<span class="built_in">echo</span> 程序未启动</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>运用这个我们可以写一个自动保持notepad启动的脚本</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">title</span> restart 自动化脚本</span><br><span class="line">:again</span><br><span class="line">tasklist|<span class="built_in">findstr</span> -i &quot;notepad.exe&quot;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">ERRORLEVEL</span> <span class="number">1</span> (</span><br><span class="line">	<span class="built_in">echo</span> notepad is off <span class="keyword">in</span> <span class="variable">%Date:~0,4%</span>-<span class="variable">%Date:~5,2%</span>-<span class="variable">%Date:~8,2%</span> <span class="variable">%Time:~0,2%</span>:<span class="variable">%Time:~3,2%</span></span><br><span class="line">	<span class="built_in">start</span> &quot;&quot; &quot;C:/Windows/notepad.exe&quot;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">cd</span> /d &quot;D:/&quot; </span><br><span class="line"> </span><br><span class="line">choice /t <span class="number">30</span> /d y /n &gt; <span class="built_in">nul</span>  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">goto</span> again</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>bat：start命令的使用方法的详细说明、参数列表</title>
    <url>/2024/02/15/bat%EF%BC%9Astart%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8E%E3%80%81%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<p>[[___bat]]</p>
<h3 id="1-start-命令的使用方法"><a href="#1-start-命令的使用方法" class="headerlink" title="1. start 命令的使用方法"></a>1. start 命令的使用方法</h3><p>start 命令用于在新窗口中启动应用程序、命令或批处理文件。使用 start 命令时，可以指定要启动的程序的路径和命令行参数。下面是 start 命令的基本语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start [&quot;title&quot;] [/d path] [/i] [/min] [/max] [/separate | /shared] [/low | /normal | /high | /realtime] [/wait] [/b] [command/program] [parameters]</span><br></pre></td></tr></table></figure>
<p>其中，方括号表示可选参数。下面是各个参数的详细说明：</p>
<ul>
<li>“title”: 可选参数，指定窗口标题。</li>
<li>/d path: 可选参数，指定启动程序的工作目录。</li>
<li>/i: 可选参数，以新窗口中的分离模式启动程序。</li>
<li>/min: 可选参数，启动程序时最小化窗口。</li>
<li>/max: 可选参数，启动程序时最大化窗口。</li>
<li>/separate | /shared: 可选参数，指定启动程序时使用的窗口类型。/separate 表示在新的独立窗口中启动程序（默认值），/shared 表示在共享控制台窗口中启动程序。</li>
<li>/low | /normal | /high | /realtime: 可选参数，指定启动程序时使用的进程优先级。/low 表示低优先级，/normal 表示正常优先级（默认值），/high 表示高优先级，/realtime 表示实时优先级。</li>
<li>/wait: 可选参数，等待程序结束后再退出。</li>
<li>/b: 可选参数，以后台模式启动程序。</li>
</ul>
<h3 id="2-示例"><a href="#2-示例" class="headerlink" title="2. 示例"></a>2. 示例</h3><p>下面是一些示例，演示如何使用 start 命令启动不同类型的应用程序：</p>
<ul>
<li>启动记事本：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start notepad.exe</span><br></pre></td></tr></table></figure>
<ul>
<li>启动计算器：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start calc.exe</span><br></pre></td></tr></table></figure>
<ul>
<li>启动 Internet Explorer：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start iexplore.exe &quot;http://www.example.com&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>启动 Windows Media Player：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start wmplayer.exe &quot;C:\Users\UserName\Music\Sample.mp3&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>启动命令提示符：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start cmd.exe</span><br></pre></td></tr></table></figure>
<ul>
<li>启动 PowerShell：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start powershell.exe</span><br></pre></td></tr></table></figure>
<p>除了启动应用程序外，start 命令还可以启动批处理文件。例如，可以创建一个名为 “test.bat” 的批处理文件，其中包含以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start notepad.exe</span><br></pre></td></tr></table></figure>
<p>然后在<a href="https://so.csdn.net/so/search?q=%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6&amp;spm=1001.2101.3001.7020">命令提示符</a>中执行以下命令来运行该批处理文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test.bat</span><br></pre></td></tr></table></figure>
<p>这将启动记事本程序。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/m0_47406832/article/details/130379434">【BAT】有关 Bat 中 start 命令的使用方法的详细说明、参数列表和示例_bat start-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>bat：等等你先别急（延时）</title>
    <url>/2024/02/15/bat%EF%BC%9A%E7%AD%89%E7%AD%89%E4%BD%A0%E5%85%88%E5%88%AB%E6%80%A5%EF%BC%88%E5%BB%B6%E6%97%B6%EF%BC%89/</url>
    <content><![CDATA[<p>[[___bat]]</p>
<p>在bat中实现延时有以下几种方法（我见过的）：</p>
<h2 id="1-使用ping命令实现延时"><a href="#1-使用ping命令实现延时" class="headerlink" title="1. 使用ping命令实现延时"></a>1. 使用<code>ping</code>命令实现延时</h2><p>使用ping命令可以实现延时的效果，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping 127.0.0.1 -n 11 &gt;nul</span><br></pre></td></tr></table></figure>
<blockquote>
<ol>
<li><code>-n</code> 指定<code>ping</code>的次数，每次大概间隔1s，<code>&gt;nul</code>将<code>ping</code>过程回显信息给屏蔽</li>
<li><code>ping</code>命令实现的延时，时间精度：大约1s，内存占用：<code>ping</code>命令所占用空间</li>
<li>注意闭坑：ping 从第1次发出请求到接收到回显数据几乎是瞬间的，所以你如果想实现10秒的延时，需要设置-n 为11（至少针对ping 127.0.0.1 回环地址是这样），网上很多说需要多少秒，-n参数值就设置多少秒， 真是有些误人子弟呢！</li>
<li>我还从网上看到过使用<code>-w</code>参数，指定超时等待时间来作为延时时间的，这不是可能，除非指定的地址ping不通，否则这个延时实现根本不可靠</li>
</ol>
</blockquote>
<h2 id="通过超时来延时"><a href="#通过超时来延时" class="headerlink" title="通过超时来延时"></a>通过超时来延时</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timeout /t 4 /nobreak &gt;nul</span><br><span class="line">````</span><br><span class="line"></span><br><span class="line">## 通过Choice的超时判断作为延时</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">choice /t 30 /d y /n &gt; nul</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>bat：通过start打开应用的常见用法</title>
    <url>/2024/02/15/bat%EF%BC%9A%E9%80%9A%E8%BF%87start%E6%89%93%E5%BC%80%E5%BA%94%E7%94%A8%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>[[<strong>_bat]]<br>[[_</strong>未完成]]</p>
<p>在bat中可以使用start打开其他应用而不阻塞当前进程，常见的用法有以下几种</p>
<h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><p><code>start &quot;程序框名字&quot; &quot;要启动的应用的位置&quot;</code></p>
<h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><h3 id="带参数"><a href="#带参数" class="headerlink" title="带参数"></a>带参数</h3><p>直接在启动应用的位置后面加即可，例如：<code>start /b &quot;&quot; E:\AgencyProxyTools\messageBox 0</code></p>
<h3 id="最小化运行"><a href="#最小化运行" class="headerlink" title="最小化运行"></a>最小化运行</h3><p>在start后面加上<code>/min</code>即可</p>
<h3 id="保持在当前对话框进行"><a href="#保持在当前对话框进行" class="headerlink" title="保持在当前对话框进行"></a>保持在当前对话框进行</h3><p>在start后面加上<code>/b</code>即可，此时start启动的应用会在其他进程运行，但是输出的结果会保持在同一对话框内</p>
<h2 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h2><h3 id="start伴随的进程随着当前进程一并终止"><a href="#start伴随的进程随着当前进程一并终止" class="headerlink" title="start伴随的进程随着当前进程一并终止"></a>start伴随的进程随着当前进程一并终止</h3><p>可以考虑间接调用：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="variable">%a.bat%</span></span><br><span class="line"><span class="built_in">Echo</span> Off</span><br><span class="line"><span class="built_in">SetLocal</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">start</span> /b &quot;&quot; E:\AgencyProxyTools\openClash.bat</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="variable">%openClash.bat%</span></span><br><span class="line"><span class="built_in">Echo</span> Off</span><br><span class="line"><span class="built_in">SetLocal</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">start</span> /min &quot;&quot; &quot;E:\!TOOLS\PC\Clash\Clash.exe&quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Exit</span></span><br></pre></td></tr></table></figure>
<p>a.bat -&gt; openClash.bat -&gt; clash.exe</p>
<p>这样的话clash就不会随着a.bat而结束了</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>frxy：对局分析</title>
    <url>/2023/12/26/frxy%EF%BC%9A%E5%AF%B9%E5%B1%80%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>[[___frxy]]</p>
<p>这个笔记用于记录我的游戏的反思……</p>
<h2 id="2023-12-26"><a href="#2023-12-26" class="headerlink" title="2023.12.26"></a>2023.12.26</h2><hr>
<h1 id="普贤"><a href="#普贤" class="headerlink" title="普贤"></a>普贤</h1><p>我玩的时候总是感觉普贤的大招威胁性不大……</p>
<p>一方面是我大招的角度不太行，另外一方面，或许瞄准也有一定的小技巧？</p>
<p>被动打出来打的不是很利落，别人踩到被动总是能十分连续地一连串普工出来，但是如果换做我，我总是感觉我要慢一点</p>
<h1 id="精卫打野"><a href="#精卫打野" class="headerlink" title="精卫打野"></a>精卫打野</h1><p>精卫打野，说白了精卫是属于一个：半开人、半持续输出地一个位置，虽然说精卫较一般的同样定位的打野来说手长，但是她还有几个致命缺陷：不够灵活，输出不够稳定。所以说其实她在团战中的地位实际上是属于次要补伤害的位置，真正的输出的开人抗伤大头还得看队友……</p>
<p>我们也可以从榜九打野精卫做的是冰拳侧面印证这一点。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>frxy</tag>
      </tags>
  </entry>
  <entry>
    <title>mcMod：0.1：配置环境</title>
    <url>/2024/01/29/mcMod%EF%BC%9A0.1%EF%BC%9A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>[[___mcmod]]</p>
<p><a href="https://www.bilibili.com/video/BV1Ar4y1K7Qk/">【MC Mod开发】边睡觉边开发mod：初级Mod制作教程_哔哩哔哩_bilibili</a></p>
<p>我是跟着这个开始学习mod制作的，这里主要是用来记录我遇到的坑<br><span id="more"></span></p>
<h3 id="一、配置环境"><a href="#一、配置环境" class="headerlink" title="一、配置环境"></a>一、配置环境</h3><p>首先你需要这三样东西：  </p>
<ol>
<li>IntelliJ IDEA Community Edition 2019.1.4</li>
<li>JAVA develop tools（这里可以使用华为的源<a href="https://repo.huaweicloud.com/java/jdk/8u171-b11/">Index of java-local/jdk/8u171-b11 (huaweicloud.com)</a>）</li>
<li>forge（IDF）  </li>
</ol>
<p>其中在这里我们并没有选择使用forge提供的样例进行开发，而是使用了IDF作为模板进行二次开发，这样的话更加便捷。 </p>
<p><a href="github.com/IdeallandEarthDept/IdeallandFramework">IDF理想国框架</a></p>
<p>接下来在逐一安装了这些东西之后，就可以准备开始构建了，  </p>
<ol>
<li>首先你需要设置系统变量，设置系统变量JAVA_HOME到jdk的java,可以看这篇：<br><a href="https://blog.csdn.net/MrsHorse/article/details/82695353">JAVA_HOME环境变量的配置（Win10系统）_java home 环境win10\变量配置-CSDN博客</a></li>
</ol>
<ol>
<li>其次在IDF解压出来的文件里面执行一次<code>1_其一_setupDecomp_请先运行此脚本_再打开IDE.bat</code></li>
</ol>
<p>大概率会报错，但是不要担心，你可以尝试以下方式：</p>
<ol>
<li>打开<code>gradle.properties</code> ，这里面存储的是下载资源的镜像站，如果下载不了可能是镜像挂了</li>
<li>直接执行<code>gradlew.bat setupDecompWorkspace genIntellijRuns</code></li>
</ol>
<p>其实只需要看看bat文件里面的代码就知道执行这个的意图了：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">&quot;C:\Windows\System32\<span class="built_in">chcp</span>.com&quot; <span class="number">65001</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%JAVA_TOOL_OPTIONS%</span> | &quot;C:\Windows\System32\<span class="built_in">findstr</span>.exe&quot; /C:&quot;-Dfile.encoding=&quot; &gt; <span class="built_in">nul</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> (</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">defined</span> JAVA_TOOL_OPTIONS (</span><br><span class="line"></span><br><span class="line">        &quot;C:\Windows\System32\setx.exe&quot; JAVA_TOOL_OPTIONS &quot;<span class="variable">%JAVA_TOOL_OPTIONS%</span> -Dfile.encoding=UTF-<span class="number">8</span>&quot;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">set</span> &quot;JAVA_TOOL_OPTIONS=<span class="variable">%JAVA_TOOL_OPTIONS%</span> -Dfile.encoding=UTF-<span class="number">8</span>&quot;</span><br><span class="line"></span><br><span class="line">    ) <span class="keyword">else</span> (</span><br><span class="line"></span><br><span class="line">        &quot;C:\Windows\System32\setx.exe&quot; JAVA_TOOL_OPTIONS &quot;-Dfile.encoding=UTF-<span class="number">8</span>&quot;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">set</span> &quot;JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF-<span class="number">8</span>&quot;</span><br><span class="line"></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> gradlew.bat setupDecompWorkspace genIntellijRuns</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>前面就是更改了一下编码方式，检测了一些东西，最终还是call了这个命令：·<code>gradlew.bat setupDecompWorkspace genIntellijRuns</code>（这个命令大概就是将其中的内容进行编码）</p>
<h3 id="二、打开文件并且构架项目"><a href="#二、打开文件并且构架项目" class="headerlink" title="二、打开文件并且构架项目"></a>二、打开文件并且构架项目</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gradlew.bat setupDecompWorkspace</span><br><span class="line">gradlew genIntelliJRuns</span><br></pre></td></tr></table></figure>
<p>确保你已经输入完这两个指令了之后，将IDF在IDEA中打开，然后你就可以跟着教程做下一步的更改了</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>mcmod</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo：图片测试</title>
    <url>/2024/03/01/hexo%EF%BC%9A%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>[[<strong>_]]<br>[[_</strong>]]</p>
<h3 id="hexo：图片测试"><a href="#hexo：图片测试" class="headerlink" title="hexo：图片测试"></a>hexo：图片测试</h3><p>![[R8410b68f11e81baad4b2dc0c4762ae8d.jpg]]</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
  </entry>
  <entry>
    <title>mcMod：1.1：制作第一个附魔</title>
    <url>/2024/01/30/mcMod%EF%BC%9A1.1%EF%BC%9A%E5%88%B6%E4%BD%9C%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%99%84%E9%AD%94/</url>
    <content><![CDATA[<p>[[___mcmod]]</p>
<p>因为附魔不需要画贴图，所以说我们将其作为我们的第一个mod</p>
<p>首先肯定就是创建声明，使得我们的mod能够正常被挂载</p>
<span id="more"></span>
<h3 id="一、创建mod声明"><a href="#一、创建mod声明" class="headerlink" title="一、创建mod声明"></a>一、创建mod声明</h3><h4 id="1-mcMod-info"><a href="#1-mcMod-info" class="headerlink" title="1. mcMod.info"></a>1. mcMod.info</h4><blockquote>
<p>这个文件夹貌似是用来显示mod信息的文件<br>其中modid用于匹配名称和说明，这个文件并不是必要的文件</p>
</blockquote>
<p>这里需要更改的地方挺多：  </p>
<ul>
<li>modid：系统识别码（需要保证唯一</li>
<li>name：给玩家看的</li>
<li>description：描述，给玩家看的</li>
<li>authorList：作者列表</li>
<li>credita：致谢<br><img src="https://s11.ax1x.com/2024/01/30/pFujTDH.png" alt="pFujTDH.png"></li>
</ul>
<h4 id="2-更改包名"><a href="#2-更改包名" class="headerlink" title="2. 更改包名"></a>2. 更改包名</h4><p>将包名更改为com.XLXZ.modid</p>
<p>比如下面：</p>
<p><a href="https://imgse.com/i/pFujbVA"><img src="https://s11.ax1x.com/2024/01/30/pFujbVA.png" alt="pFujbVA.png"></a></p>
<h4 id="3-更改声明"><a href="#3-更改声明" class="headerlink" title="3.更改声明"></a>3.更改声明</h4><p>然后再在框架中更改modid和name：</p>
<p><img src="https://s11.ax1x.com/2024/01/30/pFujqUI.png" alt="pFujqUI.png"></p>
<h4 id="4-更改资源文件夹名称"><a href="#4-更改资源文件夹名称" class="headerlink" title="4.更改资源文件夹名称"></a>4.更改资源文件夹名称</h4><p><img src="https://s11.ax1x.com/2024/01/30/pFKwYUf.png" alt="pFKwYUf.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里有一个十分大的大坑，报错如下：</span><br><span class="line">~~~</span><br><span class="line">net.minecraftforge.fml.common.LoaderException: java.lang.ClassNotFoundException: ClientProxy</span><br><span class="line">~~~</span><br><span class="line">`ClientProxy`出现异常</span><br><span class="line"></span><br><span class="line">出现这个问题的原因是编译器在执行refactor的时候，如果你勾选了`Compact middle Package`的话，对于`com.作者名称.mod`名称的重命名会出现异常。</span><br><span class="line"></span><br><span class="line">具体而言就是`src\main\java\com\作者名\模组ID\util`里面的`CLIENT_PROXY_CLASS`不能被正确重命名</span><br><span class="line"></span><br><span class="line">建议去除勾选再次重命名即可</span><br><span class="line"></span><br><span class="line">![pFKyZVA.png](https://s11.ax1x.com/2024/01/30/pFKyZVA.png)</span><br><span class="line"></span><br><span class="line">&gt; 这个bug在后续的idea中被修复，属于编译器bug</span><br><span class="line"></span><br><span class="line">具体可以参考这个：[湖面群日常·传统头衔二 - 哔哩哔哩 (bilibili.com)](https://www.bilibili.com/read/cv17173344/)</span><br></pre></td></tr></table></figure>
<h3 id="二、创建附魔"><a href="#二、创建附魔" class="headerlink" title="二、创建附魔"></a>二、创建附魔</h3><p>对着抄就可以了，对应的位置在：<br><code>IdeallandFramework-master\src\main\java\com\XLXZ\testmod\enchantments</code>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//Example Enchant  </span><br><span class="line">//    public static final ModEnchantmentBase ANTI_VANILLA = new ModEnchantmentBase(&quot;testmod.anti_vanilla&quot;, Enchantment.Rarity.UNCOMMON, EnumEnchantmentType.WEAPON,  mainHand)  </span><br><span class="line">//            .setMaxLevel(10).setValue(0.3f, 0.3f);  </span><br><span class="line">  </span><br><span class="line">public static final ModEnchantmentBase test_Enchance = new ModEnchantmentBase(&quot;testmod.test_enchance&quot;, Enchantment.Rarity.UNCOMMON, EnumEnchantmentType.WEAPON,  mainHand);</span><br></pre></td></tr></table></figure>
<ul>
<li><code>Enchantment.Rarity.UNCOMMON</code>指的是稀有程度</li>
<li><code>EnumEnchantmentType.WEAPON</code>指的是附魔类型</li>
<li><code>mainHand</code>设置是主手还是副手效果  </li>
</ul>
<hr>
<p>此处注意需要导入<code>EnumEnchantmentType</code>对应的头文件</p>
<p>另外，可以在src/lang中设置语言翻译，完成之后效果如图：</p>
<p><img src="https://s11.ax1x.com/2024/01/30/pFK6wFI.png" alt="pFK6wFI.png"></p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>mcmod</tag>
      </tags>
  </entry>
  <entry>
    <title>python指定位数的16进制码</title>
    <url>/2024/02/02/python%E6%8C%87%E5%AE%9A%E4%BD%8D%E6%95%B0%E7%9A%8416%E8%BF%9B%E5%88%B6%E7%A0%81/</url>
    <content><![CDATA[<p>[[___python]]</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>python中hex内置函数无法将生成的16进制码自动补0，比如说：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="number">2</span>))</span><br><span class="line"><span class="number">0x2</span> <span class="comment">#输出</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="number">25225842</span>))</span><br><span class="line"><span class="number">0x180ea72</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(<span class="number">255842</span>))</span><br><span class="line"><span class="number">0x3e762</span></span><br></pre></td></tr></table></figure></p>
<p>很明显，这个一点都不好便于后续处理，我们总喜欢规整的嘛，全是总共8位的16进制就是32位数，就像：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x00112233</span><br><span class="line">0x12345678</span><br></pre></td></tr></table></figure></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p> 通过多次查资料和尝试，得到如下：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">def</span> <span class="title function_">myhex</span>(<span class="params">n</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(<span class="string">f&quot;0x<span class="subst">&#123;n:08x&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>mcMod：1.3：制作配方</title>
    <url>/2024/01/31/mcMod%EF%BC%9A1.3%EF%BC%9A%E5%88%B6%E4%BD%9C%E9%85%8D%E6%96%B9/</url>
    <content><![CDATA[<p>[[___mcmod]]<br>我的世界的配方使用json进行配置，json的名称没有硬性要求，但是建议与产物相关</p>
<p>实际上，只需要照着IDF框架给出的示例进行改编即可</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>mcmod</tag>
      </tags>
  </entry>
  <entry>
    <title>python：使用pyinstall将py转化为exe</title>
    <url>/2024/02/15/python%EF%BC%9A%E4%BD%BF%E7%94%A8pyinstall%E5%B0%86py%E8%BD%AC%E5%8C%96%E4%B8%BAexe/</url>
    <content><![CDATA[<p>[[<strong>_python]]<br>[[_</strong>未完成]]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我的pyinstaller并没有调试好，</span><br><span class="line"></span><br><span class="line">在这样的一通操作后生成的exe并不能正常运行</span><br><span class="line"></span><br><span class="line">我没有找到解决的办法，似乎是pyinstaller默认安装到了系统内部的python上，而不是conda的虚拟环境内，导致虚拟环境内的包并没有被打包进exe</span><br></pre></td></tr></table></figure>
<p>为了方便py代码可以在其他没有python环境的设备上运行，使用pyinstall将其打包为exe格式是一种十分简单的方法。但是在安装并使用pyinstall的过程中，本人遇到了不少麻烦，而后摸索出了正确的路，下面记录以下我的历程。</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>win11，安装了anaconda和vs，这两个不共用一个python</p>
<p>所以说在安装之前还需呀将anaconda的python设置为首选的python，将其在环境变量中的优先级提高。</p>
<h2 id="安装历程"><a href="#安装历程" class="headerlink" title="安装历程"></a>安装历程</h2><h3 id="安装pyinstall"><a href="#安装pyinstall" class="headerlink" title="安装pyinstall"></a>安装pyinstall</h3><p>使用：  </p>
<pre><code>pip install pyinstaller
</code></pre><p>来安装pyinstall</p>
<h3 id="执行pyinstall"><a href="#执行pyinstall" class="headerlink" title="执行pyinstall"></a>执行pyinstall</h3><p>正常执行<code>pyinstaller -c -F textMessage.py</code>就可以在显示打包进程的前提之下打包py文件了。<br>但是这个时候会报错:  </p>
<blockquote>
<p>‘pyinstaller’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p>
</blockquote>
<p>这个时候就需要将pyinstall.exe添加置系统变量里面的PATH，但是anconda的文件十分的杂乱，我找了半天都没有找到，最后是使用everything^[1]来对电脑文件进行检索找到的。下面是我的路径：</p>
<pre><code>C:\Users\Lenovo\AppData\Roaming\Python\Python310\scripts\pyinstaller.exe
</code></pre><h3 id="pyinstall报错"><a href="#pyinstall报错" class="headerlink" title="pyinstall报错"></a>pyinstall报错</h3><p>在能运行pyinstall之后，pyinstall报错了：<code>The &#39;pathlib&#39; package is an obsolete backport of a standard library package and is incompatible with PyInstaller.</code></p>
<p>pathlib是一个anaconda自带的过时的包，pyinstall不支持这个包，将这个包删除即可：<code>python -m pip install pathlib</code></p>
<p>[1]:”_Everything_” 是 Windows 上文件名搜索引擎。<a href="https://www.voidtools.com/zh-cn/support/everything/command_line_interface/">Command Line Interface - voidtools</a></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>conda config —remove-key channels</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>两小时速通线代</title>
    <url>/2023/11/24/%E4%B8%A4%E5%B0%8F%E6%97%B6%E9%80%9F%E9%80%9A%E7%BA%BF%E4%BB%A3/</url>
    <content><![CDATA[<p>[[___线性代数]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;两小时速通线代&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;行列式的基本性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;行列式的定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;一群按照正方形排列的数字&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;称呼&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;阶数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;行&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;r&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;列&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;c&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;余子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;M&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;抹掉对应行对应列之后的矩阵&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[33,37]},&quot;v&quot;:&quot;&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;bullet_list&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[35,37]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;代数余子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;A&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[41,47]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[43,44]},&quot;v&quot;:&quot;i+j为偶数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[45,46]},&quot;v&quot;:&quot;M=A&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[47,48]},&quot;v&quot;:&quot;行列式的性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[49,50]},&quot;v&quot;:&quot;行/列变换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[51,52]},&quot;v&quot;:&quot;交换行&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[53,54]},&quot;v&quot;:&quot;符号变&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[55,56]},&quot;v&quot;:&quot;行列式为0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[57,58]},&quot;v&quot;:&quot;两行两列成比例&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[59,60]},&quot;v&quot;:&quot;行列式和方程组的关系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[61,62]},&quot;v&quot;:&quot;方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[63,64]},&quot;v&quot;:&quot;齐次常数项全为0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[65,66]},&quot;v&quot;:&quot;一组0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[67,68]},&quot;v&quot;:&quot;有零解与非0解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[69,70]},&quot;v&quot;:&quot;常数项不为0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[71,72]},&quot;v&quot;:&quot;只有一组非零解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[73,74]},&quot;v&quot;:&quot;有多个解或者无解&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[75,76]},&quot;v&quot;:&quot;解&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[81,82]},&quot;v&quot;:&quot;行列式的基本计算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[83,84]},&quot;v&quot;:&quot;求值&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[85,86]},&quot;v&quot;:&quot;二阶&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[87,88]},&quot;v&quot;:&quot;对角线相乘再相减&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[89,90]},&quot;v&quot;:&quot;三阶&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[91,92]},&quot;v&quot;:&quot;可以通过辅助行列式法计算&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[93,94]},&quot;v&quot;:&quot;高阶行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[95,96]},&quot;v&quot;:&quot;通法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[97,98]},&quot;v&quot;:&quot;变成左上三角式子&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:12,&quot;p&quot;:{&quot;lines&quot;:[99,100]},&quot;v&quot;:&quot;一列列按照顺序消除&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[101,102]},&quot;v&quot;:&quot;变完之后&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:12,&quot;p&quot;:{&quot;lines&quot;:[103,104]},&quot;v&quot;:&quot;主对角线相乘&quot;}]}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[105,106]},&quot;v&quot;:&quot;行列式的转置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[107,108]},&quot;v&quot;:&quot;数值相等&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[111,112]},&quot;v&quot;:&quot;行列式的倍乘&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[113,114]},&quot;v&quot;:&quot;数字*行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[115,116]},&quot;v&quot;:&quot;某一行或者某一列进行乘除&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[117,118]},&quot;v&quot;:&quot;区别于 [[#矩阵的倍乘]]&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[119,120]},&quot;v&quot;:&quot;相当于提出只要一行提出&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[121,122]},&quot;v&quot;:&quot;行列式的拆分&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[123,125]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[125,126]},&quot;v&quot;:&quot;只拆其中的一行或者一列&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[127,128]},&quot;v&quot;:&quot;其他的保持不变&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[129,130]},&quot;v&quot;:&quot;行列式的展开&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[131,132]},&quot;v&quot;:&quot;所有的数乘以其的代数余子式之和&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[133,134]},&quot;v&quot;:&quot;行列式的计算技巧&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[135,136]},&quot;v&quot;:&quot;特殊行列式的计算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[137,138]},&quot;v&quot;:&quot;主对角线相同为x，其余的位置都相同为a&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[139,141]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[141,142]},&quot;v&quot;:&quot;实际上可以用 [[#添行法]] 和 [[#爪形行列式]] 证明&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[143,144]},&quot;v&quot;:&quot;范德蒙行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[145,149]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[147,148]},&quot;v&quot;:&quot;= j 大的减 j 小的的乘积&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[149,155]},&quot;v&quot;:&quot;&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[149,150]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;bullet_list&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[151,155]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[155,156]},&quot;v&quot;:&quot;爪形行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[157,158]},&quot;v&quot;:&quot;形如&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[161,162]},&quot;v&quot;:&quot;人话&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[163,165]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[165,166]},&quot;v&quot;:&quot;再把剩余的对角线乘上&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[167,168]},&quot;v&quot;:&quot;粗主对角线形式的行列式&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[169,170]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;bullet_list&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[171,173]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[173,174]},&quot;v&quot;:&quot;展开后使用数列的思想求解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[175,176]},&quot;v&quot;:&quot;处理办法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[177,178]},&quot;v&quot;:&quot;第一步&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[179,180]},&quot;v&quot;:&quot;按照第一列展开&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[181,182]},&quot;v&quot;:&quot;第二步&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[183,184]},&quot;v&quot;:&quot;然后再将第二项按照行展开&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[187,188]},&quot;v&quot;:&quot;第三步&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[189,190]},&quot;v&quot;:&quot;按照数列一般套路即可求取D_n&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[191,192]},&quot;v&quot;:&quot;添行法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[193,194]},&quot;v&quot;:&quot;观察：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[195,196]},&quot;v&quot;:&quot;拓展应用&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[197,198]},&quot;v&quot;:&quot;因为x1，x2可以为任意值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[199,200]},&quot;v&quot;:&quot;可以将其定义为下面行列式的相同部分&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[201,202]},&quot;v&quot;:&quot;然后全减&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[203,204]},&quot;v&quot;:&quot;求X^k项的系数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[205,206]},&quot;v&quot;:&quot;利用行列式的展开&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[207,208]},&quot;v&quot;:&quot;处理办法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[209,210]},&quot;v&quot;:&quot;1.移动化简&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[211,212]},&quot;v&quot;:&quot;将x移动到对角线处&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[213,214]},&quot;v&quot;:&quot;子主题 1&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[215,216]},&quot;v&quot;:&quot;其余的全为常数项&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[217,218]},&quot;v&quot;:&quot;2.求解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[219,220]},&quot;v&quot;:&quot;那么x项只在对角线上存在&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[221,222]},&quot;v&quot;:&quot;将对角线相乘即可得到所有含x项的展开式&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[223,224]},&quot;v&quot;:&quot;某行为两项相加减的时候，行列式可以拆成两个行列式相加减&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[227,228]},&quot;v&quot;:&quot;常见题型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[229,230]},&quot;v&quot;:&quot;求行列式的值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[231,232]},&quot;v&quot;:&quot;多个A或者M相相加减&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[233,234]},&quot;v&quot;:&quot;将给的行列式按照所需求和的式子进行改造&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[235,236]},&quot;v&quot;:&quot;然后求行列式的值&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[237,238]},&quot;v&quot;:&quot;给定方程组判断是否有解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[239,240]},&quot;v&quot;:&quot;方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[241,242]},&quot;v&quot;:&quot;齐次(无二次项)&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[243,244]},&quot;v&quot;:&quot;一组0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[245,246]},&quot;v&quot;:&quot;有零解与非0解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[247,248]},&quot;v&quot;:&quot;不齐次&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[249,250]},&quot;v&quot;:&quot;只有一组非零解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:10,&quot;p&quot;:{&quot;lines&quot;:[251,252]},&quot;v&quot;:&quot;有多个解或者无解&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[253,254]},&quot;v&quot;:&quot;矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[255,256]},&quot;v&quot;:&quot;矩阵的基本性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[257,258]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[259,260]},&quot;v&quot;:&quot;n*m&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[261,262]},&quot;v&quot;:&quot;矩阵是一个数表&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[263,264]},&quot;v&quot;:&quot;用于展示统计信息&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[265,266]},&quot;v&quot;:&quot;也可以理解为几个向量组成的组&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[267,268]},&quot;v&quot;:&quot;属性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[269,270]},&quot;v&quot;:&quot;秩&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[271,272]},&quot;v&quot;:&quot;特殊的矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[273,274]},&quot;v&quot;:&quot;0矩阵&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[275,276]},&quot;v&quot;:&quot;方阵&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[277,278]},&quot;v&quot;:&quot;单位矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[279,280]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[281,282]},&quot;v&quot;:&quot;只有对角线是1的式子&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[283,285]},&quot;v&quot;:&quot;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[285,286]},&quot;v&quot;:&quot;性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[287,288]},&quot;v&quot;:&quot;乘完不变&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[289,290]},&quot;v&quot;:&quot;对角矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[291,292]},&quot;v&quot;:&quot;对角矩阵一定是方阵&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[293,294]},&quot;v&quot;:&quot;矩阵的基本运算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[295,296]},&quot;v&quot;:&quot;矩阵的计算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[297,298]},&quot;v&quot;:&quot;加减&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[299,300]},&quot;v&quot;:&quot;相同大小&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[301,302]},&quot;v&quot;:&quot;对应着加就ok&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[303,304]},&quot;v&quot;:&quot;数乘&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[305,306]},&quot;v&quot;:&quot;数字乘到每个元素里面&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[307,308]},&quot;v&quot;:&quot;乘法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[309,310]},&quot;v&quot;:&quot;前行乘后列&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[311,312]},&quot;v&quot;:&quot;定行乘列&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[313,314]},&quot;v&quot;:&quot;运算法则&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[315,316]},&quot;v&quot;:&quot;注意左乘与右乘的区别&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[317,318]},&quot;v&quot;:&quot;矩阵没有除法&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[319,320]},&quot;v&quot;:&quot;矩阵的变换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[321,322]},&quot;v&quot;:&quot;矩阵的初等变换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[323,324]},&quot;v&quot;:&quot;分类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[325,326]},&quot;v&quot;:&quot;行的互换&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[327,328]},&quot;v&quot;:&quot;行乘&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[329,330]},&quot;v&quot;:&quot;行减&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[331,332]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[333,334]},&quot;v&quot;:&quot;转换后不相等&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[335,336]},&quot;v&quot;:&quot;不可以行列同时互换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[337,338]},&quot;v&quot;:&quot;一般来说只进行行之间的变化&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[339,340]},&quot;v&quot;:&quot;转置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[341,342]},&quot;v&quot;:&quot;转置再转置等于没转&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[345,346]},&quot;v&quot;:&quot;数乘可以直接提出来&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[349,350]},&quot;v&quot;:&quot;乘法转置后前后改变&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[353,354]},&quot;v&quot;:&quot;tips&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[355,356]},&quot;v&quot;:&quot;优先宽的乘窄的&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[357,358]},&quot;v&quot;:&quot;前行乘后列&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[359,360]},&quot;v&quot;:&quot;越乘越小&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[361,362]},&quot;v&quot;:&quot;矩阵的行列式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[363,365]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[365,367]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[367,369]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[369,371]},&quot;v&quot;:&quot;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[371,372]},&quot;v&quot;:&quot;伴随矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[373,374]},&quot;v&quot;:&quot;每一项是原来的代数余子式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[375,376]},&quot;v&quot;:&quot;不过要注意沿着对角线对称了&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[379,380]},&quot;v&quot;:&quot;矩阵的逆&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[381,382]},&quot;v&quot;:&quot;可逆&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[383,384]},&quot;v&quot;:&quot;条件一&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[385,386]},&quot;v&quot;:&quot;为方阵&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[387,388]},&quot;v&quot;:&quot;条件二&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[389,390]},&quot;v&quot;:&quot;存在矩阵B使得&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[391,392]},&quot;v&quot;:&quot;或者|A|不等于0&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[393,394]},&quot;v&quot;:&quot;求逆矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[395,396]},&quot;v&quot;:&quot;方法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[397,398]},&quot;v&quot;:&quot;方法一&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[401,402]},&quot;v&quot;:&quot;换行&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[403,404]},&quot;v&quot;:&quot;行上乘&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[405,406]},&quot;v&quot;:&quot;行上相互加减&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[407,408]},&quot;v&quot;:&quot;方法二&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[411,413]},&quot;v&quot;:&quot;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[413,414]},&quot;v&quot;:&quot;逆矩阵的运算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[415,416]},&quot;v&quot;:&quot;数字要倒过来&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[417,418]},&quot;v&quot;:&quot;只有乘法才能拆括号&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[419,421]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[421,423]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[423,425]},&quot;v&quot;:&quot;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[425,426]},&quot;v&quot;:&quot;使用逆做运算的时候需要注意&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[427,428]},&quot;v&quot;:&quot;需要注意左乘和右乘的区别&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[429,430]},&quot;v&quot;:&quot;抽象矩阵的计算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[431,432]},&quot;v&quot;:&quot;严格套公式&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[433,434]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[437,438]},&quot;v&quot;:&quot;分块矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[439,440]},&quot;v&quot;:&quot;基本运算&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[441,442]},&quot;v&quot;:&quot;Am阶，Bn阶&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[443,445]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[445,447]},&quot;v&quot;:&quot;&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[447,448]},&quot;v&quot;:&quot;基本变换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[449,450]},&quot;v&quot;:&quot;只要在主对角线上，其余位置都是0就可以&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[451,452]},&quot;v&quot;:&quot;在副对角线上，要进行取反&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[453,454]},&quot;v&quot;:&quot;对角矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[455,456]},&quot;v&quot;:&quot;对角矩阵的逆和次方直接取得&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[457,458]},&quot;v&quot;:&quot;求数列的秩&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[459,460]},&quot;v&quot;:&quot;每一行的0都比上一行多&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[461,462]},&quot;v&quot;:&quot;0靠左&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[463,464]},&quot;v&quot;:&quot;最后有几行非0的数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[465,466]},&quot;v&quot;:&quot;秩就是几&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[467,468]},&quot;v&quot;:&quot;向量组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[469,470]},&quot;v&quot;:&quot;求向量组的秩&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[471,472]},&quot;v&quot;:&quot;向量组的线性相关性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[473,474]},&quot;v&quot;:&quot;其实就是r&amp;lt;n&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[475,476]},&quot;v&quot;:&quot;线性相关&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[477,478]},&quot;v&quot;:&quot;求向量组的极大线性无关组&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[481,482]},&quot;v&quot;:&quot;向量空间&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[483,484]},&quot;v&quot;:&quot;对于一个向量空间有&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[485,486]},&quot;v&quot;:&quot;对于数乘封闭&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[487,488]},&quot;v&quot;:&quot;对于加法也封闭&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[489,490]},&quot;v&quot;:&quot;封闭&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[491,492]},&quot;v&quot;:&quot;处理玩之后还在这个向量空间里面&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[493,494]},&quot;v&quot;:&quot;A到B的过渡矩阵C&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[495,496]},&quot;v&quot;:&quot;AC=B&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[497,499]},&quot;v&quot;:&quot;&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[499,500]},&quot;v&quot;:&quot;矩阵与方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[501,502]},&quot;v&quot;:&quot;线性方程组的增广矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[503,504]},&quot;v&quot;:&quot;其实就是把常数项的结果也给写进来&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[505,506]},&quot;v&quot;:&quot;行标准型矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[507,508]},&quot;v&quot;:&quot;阶梯状，且台阶的上方要为0&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[509,510]},&quot;v&quot;:&quot;只需要一列列减过去就好了&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[511,512]},&quot;v&quot;:&quot;方程式的通解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[513,514]},&quot;v&quot;:&quot;可以理解为基础解系按照k1,k2,k3的重新分配&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[515,516]},&quot;v&quot;:&quot;基础解系怎么求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[517,518]},&quot;v&quot;:&quot;分别令一个K等于1，其他的k=0&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[519,520]},&quot;v&quot;:&quot;有几个k？&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[521,522]},&quot;v&quot;:&quot;根据秩来判定&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[523,524]},&quot;v&quot;:&quot;秩为多少就是几个k&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[525,526]},&quot;v&quot;:&quot;方程式的解与矩阵的关系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[527,528]},&quot;v&quot;:&quot;原秩阵和增广矩阵的秩&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[529,530]},&quot;v&quot;:&quot;可以简单理解为可动性和限制度的比较&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[531,532]},&quot;v&quot;:&quot;x代表着可动性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[533,534]},&quot;v&quot;:&quot;即原矩阵的r1&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[537,538]},&quot;v&quot;:&quot;式子的数目代表着约束性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[539,540]},&quot;v&quot;:&quot;即矩阵的阶数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[541,542]},&quot;v&quot;:&quot;即增广矩阵的r2&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[543,544]},&quot;v&quot;:&quot;当约束&amp;gt;可动性的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[545,546]},&quot;v&quot;:&quot;无解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[547,548]},&quot;v&quot;:&quot;当约束等于可动性的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[549,550]},&quot;v&quot;:&quot;有唯一解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[551,552]},&quot;v&quot;:&quot;当约束小于可动性的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[553,554]},&quot;v&quot;:&quot;有两穷解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[555,556]},&quot;v&quot;:&quot;两个式子描述三个未知数是没有唯一解的&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[557,558]},&quot;v&quot;:&quot;向量与方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[559,560]},&quot;v&quot;:&quot;将方程组表示为矩阵相乘&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[561,563]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[563,564]},&quot;v&quot;:&quot;A&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[565,566]},&quot;v&quot;:&quot;系数矩阵&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[567,568]},&quot;v&quot;:&quot;（A，β）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[569,570]},&quot;v&quot;:&quot;增广矩阵&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[571,572]},&quot;v&quot;:&quot;β = 0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[573,574]},&quot;v&quot;:&quot;齐次线性方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[575,576]},&quot;v&quot;:&quot;有一个零解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[577,578]},&quot;v&quot;:&quot;和一个&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[579,580]},&quot;v&quot;:&quot;给定方程组判断是否有解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[581,582]},&quot;v&quot;:&quot;方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[583,584]},&quot;v&quot;:&quot;齐次(无二次项)&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[585,586]},&quot;v&quot;:&quot;一组0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[587,588]},&quot;v&quot;:&quot;有零解与非0解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[589,590]},&quot;v&quot;:&quot;不齐次&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[591,592]},&quot;v&quot;:&quot;只有一组非零解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[593,594]},&quot;v&quot;:&quot;有多个解或者无解&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[595,596]},&quot;v&quot;:&quot;行最简型矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[597,598]},&quot;v&quot;:&quot;行阶梯型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[599,600]},&quot;v&quot;:&quot;每级阶梯只占一行&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[601,602]},&quot;v&quot;:&quot;每级阶梯第一个元素为1&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[603,604]},&quot;v&quot;:&quot;该元素所在列其余元素全为0&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[605,606]},&quot;v&quot;:&quot;使用矩阵解方程&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[607,608]},&quot;v&quot;:&quot;线性齐次方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[609,610]},&quot;v&quot;:&quot;将A化为行最简矩阵&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[611,612]},&quot;v&quot;:&quot;将其还原为方程组形式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[613,614]},&quot;v&quot;:&quot;用部分未知数表示其他未知数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[615,621]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[617,618]},&quot;v&quot;:&quot;所有的解包括在这样张出来的一个系上&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[619,620]},&quot;v&quot;:&quot;K1，K2为任意值&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[621,622]},&quot;v&quot;:&quot;基础解系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[623,624]},&quot;v&quot;:&quot;K后面乘的向量&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[625,626]},&quot;v&quot;:&quot;秩&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[629,630]},&quot;v&quot;:&quot;线性非齐次方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[631,632]},&quot;v&quot;:&quot;增广矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[633,634]},&quot;v&quot;:&quot;变为行最简型矩阵&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[635,636]},&quot;v&quot;:&quot;还原回原来的方程组&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[637,638]},&quot;v&quot;:&quot;用部分未知数表示已知数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[639,640]},&quot;v&quot;:&quot;会包含常数&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[641,642]},&quot;v&quot;:&quot;写出方程的解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[643,644]},&quot;v&quot;:&quot;后面会有一部分常数项&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[645,646]},&quot;v&quot;:&quot;即由通解和本身的值组成&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[647,648]},&quot;v&quot;:&quot;向量空间&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[649,650]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[651,652]},&quot;v&quot;:&quot;向量集&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[653,654]},&quot;v&quot;:&quot;非空&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[655,656]},&quot;v&quot;:&quot;对于加法和乘法封闭&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[657,658]},&quot;v&quot;:&quot;即a+b属于向量集&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[659,660]},&quot;v&quot;:&quot;λa属于向量集&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[661,662]},&quot;v&quot;:&quot;空间向量的基&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[663,664]},&quot;v&quot;:&quot;过度矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[665,666]},&quot;v&quot;:&quot;A*C = B&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[667,668]},&quot;v&quot;:&quot;C为A到B的过渡矩阵&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[669,670]},&quot;v&quot;:&quot;向量组的线性表示和线性相关性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[671,672]},&quot;v&quot;:&quot;向量组的线性表示&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[673,674]},&quot;v&quot;:&quot;β能由x1，x2，x3线性表示&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[675,676]},&quot;v&quot;:&quot;等同于这个方程有解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[677,678]},&quot;v&quot;:&quot;非齐次线性方程组&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[679,680]},&quot;v&quot;:&quot;代数上&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[681,682]},&quot;v&quot;:&quot;β由【A的列向量组线性表示】的系数数值上就是AX=β的解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[683,684]},&quot;v&quot;:&quot;如何用这个通解写出表达式？&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[685,686]},&quot;v&quot;:&quot;直接乘回去就好了&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[687,688]},&quot;v&quot;:&quot;几何上&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[689,690]},&quot;v&quot;:&quot;即β在向量组A张成的空间内&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[691,692]},&quot;v&quot;:&quot;只要不是满秩j&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[693,694]},&quot;v&quot;:&quot;即阶梯式没有全0的行&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[695,696]},&quot;v&quot;:&quot;那么就线性无关&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[697,698]},&quot;v&quot;:&quot;线性相关性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[699,700]},&quot;v&quot;:&quot;向量组自身的性质&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[701,702]},&quot;v&quot;:&quot;向量组A中的向量相关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[703,705]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[705,706]},&quot;v&quot;:&quot;代数上&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[707,708]},&quot;v&quot;:&quot;AX=0有不全为0的解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[709,710]},&quot;v&quot;:&quot;实际上就是解的系数不全为0&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[711,712]},&quot;v&quot;:&quot;有非零解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[713,714]},&quot;v&quot;:&quot;几何上&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[715,716]},&quot;v&quot;:&quot;x1,x2,x3在同一低一维的空间内&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[717,718]},&quot;v&quot;:&quot;相关定理&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[719,721]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[721,723]},&quot;v&quot;:&quot;x1,x2线性无关&lt;br&gt;\nx1,x2,x3线性相关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[724,725]},&quot;v&quot;:&quot;x3能x1,x2线性表示&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[726,727]},&quot;v&quot;:&quot;当m&amp;gt;n时，m个n维向量一定线性相关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[728,729]},&quot;v&quot;:&quot;二维向量的活动范围在平面内&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[730,731]},&quot;v&quot;:&quot;m个向量要求向量在（m-1）维空间内&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[732,733]},&quot;v&quot;:&quot;向量组与矩阵的秩&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[734,735]},&quot;v&quot;:&quot;向量组的秩与最大无关组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[736,737]},&quot;v&quot;:&quot;在向量组A中&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[738,739]},&quot;v&quot;:&quot;有【r个向量组成的部分组Ar】成线性无关&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[740,741]},&quot;v&quot;:&quot;所有【r+1个向量组成的部分组（若存在）】成线性相关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[742,743]},&quot;v&quot;:&quot;即，A中任意向量都能由Ar线性表示&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[744,745]},&quot;v&quot;:&quot;则Ar为最大无关组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[746,747]},&quot;v&quot;:&quot;最大无关组确定了向量组张成的空间的维数&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[748,749]},&quot;v&quot;:&quot;向量组的秩为r&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[750,751]},&quot;v&quot;:&quot;就是向量组的等级&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[752,753]},&quot;v&quot;:&quot;实际上指的就是向量组构成的空间的维数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[754,755]},&quot;v&quot;:&quot;求数列的秩&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[756,757]},&quot;v&quot;:&quot;每一行的0都比上一行多&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[758,759]},&quot;v&quot;:&quot;0靠左&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[760,761]},&quot;v&quot;:&quot;最后有几行非0的数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[762,763]},&quot;v&quot;:&quot;秩就是几&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[764,765]},&quot;v&quot;:&quot;向量组的线性相关性与行列式的关系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[766,767]},&quot;v&quot;:&quot;将行列式看作是列向量&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[768,769]},&quot;v&quot;:&quot;行列式的值其实是列向量张成的面积&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[770,771]},&quot;v&quot;:&quot;向量共线&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[772,773]},&quot;v&quot;:&quot;向量组线性相关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[774,775]},&quot;v&quot;:&quot;行列式的值为0&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[776,777]},&quot;v&quot;:&quot;向量不共线&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[778,779]},&quot;v&quot;:&quot;向量组线性无关&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[780,781]},&quot;v&quot;:&quot;行列式的值不为0&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[782,783]},&quot;v&quot;:&quot;矩阵的秩和最高非0子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[784,785]},&quot;v&quot;:&quot;在矩阵中&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[786,787]},&quot;v&quot;:&quot;有【r阶子式Dr】不为0&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[788,789]},&quot;v&quot;:&quot;所有【r+1阶子式（如果存在）】全为0&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[790,791]},&quot;v&quot;:&quot;等价于&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[792,793]},&quot;v&quot;:&quot;r(A) = r&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[794,795]},&quot;v&quot;:&quot;Dr为A的一个最高阶非0子式&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[796,797]},&quot;v&quot;:&quot;什么是子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[798,799]},&quot;v&quot;:&quot;任取n行任取n列&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[800,801]},&quot;v&quot;:&quot;取出交叉的元素构成的行列式&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[802,803]},&quot;v&quot;:&quot;我们会发现一件事情&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[804,805]},&quot;v&quot;:&quot;向量组线性相关 = 矩阵线性相关 = 矩阵的子式等于0&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[806,808]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[808,809]},&quot;v&quot;:&quot;最大无关组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[810,811]},&quot;v&quot;:&quot;行阶梯式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[812,813]},&quot;v&quot;:&quot;每级阶梯第一个非0元素所在列&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[814,815]},&quot;v&quot;:&quot;用最大无关组表示其他的变量&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[816,817]},&quot;v&quot;:&quot;最简行阶梯式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[818,819]},&quot;v&quot;:&quot;解方程&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[820,821]},&quot;v&quot;:&quot;带回去&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[822,823]},&quot;v&quot;:&quot;最高阶非0子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[824,825]},&quot;v&quot;:&quot;就是最大无关组所在位置的原矩阵&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[826,827]},&quot;v&quot;:&quot;且要求结果不为0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[828,829]},&quot;v&quot;:&quot;其实就是行列式经过变换之后相同的行不能同时取&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[830,831]},&quot;v&quot;:&quot;判断向量组的解的情况&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[832,833]},&quot;v&quot;:&quot;给定方程组判断是否有解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[834,835]},&quot;v&quot;:&quot;方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[836,837]},&quot;v&quot;:&quot;齐次Ax=0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[838,839]},&quot;v&quot;:&quot;一组0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[840,841]},&quot;v&quot;:&quot;有零解与非0解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[842,843]},&quot;v&quot;:&quot;不齐次Ax = β&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[844,845]},&quot;v&quot;:&quot;只有一组非零解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[846,847]},&quot;v&quot;:&quot;有多个解或者无解&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[848,849]},&quot;v&quot;:&quot;齐次方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[850,851]},&quot;v&quot;:&quot;等价&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[852,853]},&quot;v&quot;:&quot;Ax=0有非0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[854,855]},&quot;v&quot;:&quot;A的列向量组成线性相关&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[856,857]},&quot;v&quot;:&quot;r(A)&amp;lt;n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[858,859]},&quot;v&quot;:&quot;当m=n的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[860,861]},&quot;v&quot;:&quot;|A| = 0&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[862,863]},&quot;v&quot;:&quot;等价&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[864,865]},&quot;v&quot;:&quot;Ax=0无非0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[866,867]},&quot;v&quot;:&quot;A的列向量组成线性无关&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[868,869]},&quot;v&quot;:&quot;r(A)=n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[870,871]},&quot;v&quot;:&quot;当m=n的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[872,873]},&quot;v&quot;:&quot;|A| != 0&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[874,875]},&quot;v&quot;:&quot;非齐次线性方程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[876,877]},&quot;v&quot;:&quot;只有唯一解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[878,879]},&quot;v&quot;:&quot;等价&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[880,881]},&quot;v&quot;:&quot;β能由A的列向量表示且表示式唯一&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[882,883]},&quot;v&quot;:&quot;r(A,β) = r(A) = n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[884,885]},&quot;v&quot;:&quot;n=m时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[886,887]},&quot;v&quot;:&quot;|A| != 0&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[888,889]},&quot;v&quot;:&quot;有无穷解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[890,891]},&quot;v&quot;:&quot;β能由A的列向量表示且表示式不唯一&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[892,893]},&quot;v&quot;:&quot;r(A,β) = r(A) &amp;lt; n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[894,895]},&quot;v&quot;:&quot;n=m时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[896,897]},&quot;v&quot;:&quot;|A| = 0&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[898,899]},&quot;v&quot;:&quot;无解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[900,901]},&quot;v&quot;:&quot;β不能由A的列向量表示&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[902,903]},&quot;v&quot;:&quot;r(A,β) = r(A) +1&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[904,905]},&quot;v&quot;:&quot;不能被线性表示&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[906,907]},&quot;v&quot;:&quot;n=m时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[908,909]},&quot;v&quot;:&quot;|A| = 0&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[910,911]},&quot;v&quot;:&quot;相似矩阵与二次型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[912,913]},&quot;v&quot;:&quot;方阵相似对角化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[914,915]},&quot;v&quot;:&quot;相似矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[916,917]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[918,919]},&quot;v&quot;:&quot;存在P&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[920,921]},&quot;v&quot;:&quot;P是什么？&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[922,924]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[924,925]},&quot;v&quot;:&quot;AB相似则特征值相同&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[926,927]},&quot;v&quot;:&quot;证明&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[928,929]},&quot;v&quot;:&quot;无法反推&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[930,931]},&quot;v&quot;:&quot;特征值相同可以不相似&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[932,933]},&quot;v&quot;:&quot;解题技巧&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[934,935]},&quot;v&quot;:&quot;AB相似&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[936,937]},&quot;v&quot;:&quot;特征值相同&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[938,939]},&quot;v&quot;:&quot;![[#特征值的性质]]&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[940,941]},&quot;v&quot;:&quot;相似对角化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[942,943]},&quot;v&quot;:&quot;对于任意一个方阵A&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[944,945]},&quot;v&quot;:&quot;都一定会会有一个对角矩阵Λ与其相似&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[946,947]},&quot;v&quot;:&quot;其中Λ上对角线上的元素一定是A的特征值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[948,949]},&quot;v&quot;:&quot;Λ上的每一列其实就是A的特征向量&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[950,951]},&quot;v&quot;:&quot;对称矩阵的相似对角化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[952,953]},&quot;v&quot;:&quot;前置信息&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[954,955]},&quot;v&quot;:&quot;正交矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[956,957]},&quot;v&quot;:&quot;(A·B) = 0&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[958,959]},&quot;v&quot;:&quot;实际上就是垂直&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[960,961]},&quot;v&quot;:&quot;内积&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[962,963]},&quot;v&quot;:&quot;其实就是高中学过的数量积&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[964,965]},&quot;v&quot;:&quot;对应位置先相乘后相加&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[966,967]},&quot;v&quot;:&quot;模&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[968,969]},&quot;v&quot;:&quot;||α||&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[970,971]},&quot;v&quot;:&quot;线性代数里面这么写&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[972,973]},&quot;v&quot;:&quot;实际上就是向量的长度&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[974,975]},&quot;v&quot;:&quot;定义&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[978,979]},&quot;v&quot;:&quot;性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[980,981]},&quot;v&quot;:&quot;正交矩阵 的 列向量 都是 单位向量 且 两两正交&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[982,983]},&quot;v&quot;:&quot;正交&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[984,985]},&quot;v&quot;:&quot;对称矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[986,988]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[988,989]},&quot;v&quot;:&quot;对称矩阵不同特征值对应的特征向量两两正交&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[990,991]},&quot;v&quot;:&quot;对称矩阵的相似对角化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[992,993]},&quot;v&quot;:&quot;定义&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[996,997]},&quot;v&quot;:&quot;步骤&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[998,999]},&quot;v&quot;:&quot;1.求A特征值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1000,1001]},&quot;v&quot;:&quot;2.求A分别对应于λ1，λ2，λ3的线性无关的特征向量α1，α2，α3&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1002,1003]},&quot;v&quot;:&quot;3.将特征向量正交化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1004,1005]},&quot;v&quot;:&quot;将α1，α2正交化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[1006,1007]},&quot;v&quot;:&quot;β1 = α1&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[1008,1010]},&quot;v&quot;:&quot;&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1010,1011]},&quot;v&quot;:&quot;4.单位化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1012,1013]},&quot;v&quot;:&quot;除以它们各自的模&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1014,1015]},&quot;v&quot;:&quot;注意特征值和特征向量一一对应&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1016,1017]},&quot;v&quot;:&quot;二次型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1018,1019]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1020,1021]},&quot;v&quot;:&quot;每一项都是二次项的多元函数&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1022,1023]},&quot;v&quot;:&quot;分类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1024,1025]},&quot;v&quot;:&quot;标准型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1026,1027]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1028,1029]},&quot;v&quot;:&quot;只有二次项&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1030,1031]},&quot;v&quot;:&quot;没有混合项&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1032,1033]},&quot;v&quot;:&quot;系数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1034,1035]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1036,1037]},&quot;v&quot;:&quot;标准型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1038,1039]},&quot;v&quot;:&quot;对角线的值在1，0之间&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1040,1041]},&quot;v&quot;:&quot;正定二次型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1042,1043]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1044,1045]},&quot;v&quot;:&quot;任意x&amp;gt;0，都有f&amp;gt;0&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1046,1047]},&quot;v&quot;:&quot;等价定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1048,1049]},&quot;v&quot;:&quot;f的标准型的系数全为+&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1050,1051]},&quot;v&quot;:&quot;A的特征值全为+&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1052,1053]},&quot;v&quot;:&quot;序数主子式 &amp;amp;&amp;amp;矩阵的行列式的值 &amp;gt; 0&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1054,1055]},&quot;v&quot;:&quot;一般使用主子式进行判断&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1056,1057]},&quot;v&quot;:&quot;顺序主子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1058,1059]},&quot;v&quot;:&quot;一阶顺序主子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[1060,1061]},&quot;v&quot;:&quot;左上角的值&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1062,1063]},&quot;v&quot;:&quot;二阶顺序主子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[1064,1065]},&quot;v&quot;:&quot;左上角的那个正方形&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1066,1067]},&quot;v&quot;:&quot;……&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[1068,1069]},&quot;v&quot;:&quot;n阶顺序主子式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[1070,1071]},&quot;v&quot;:&quot;就是矩阵的值本身&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1072,1073]},&quot;v&quot;:&quot;全部的顺序主子式&amp;gt;0&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1074,1075]},&quot;v&quot;:&quot;二次型的矩阵&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1076,1078]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1078,1079]},&quot;v&quot;:&quot;步骤&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1080,1081]},&quot;v&quot;:&quot;先写平方项的系数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1082,1083]},&quot;v&quot;:&quot;再写交叉项的系数的一半&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1084,1085]},&quot;v&quot;:&quot;分别写在主对角线的两边&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1086,1087]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1088,1089]},&quot;v&quot;:&quot;一定是对称矩阵&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1090,1091]},&quot;v&quot;:&quot;化二次型为标准形&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1092,1093]},&quot;v&quot;:&quot;将二次型转化为标准型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1094,1095]},&quot;v&quot;:&quot;方法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1096,1097]},&quot;v&quot;:&quot;正交变换法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1098,1099]},&quot;v&quot;:&quot;寻找矩阵Q = （k1,k2,k3）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1100,1101]},&quot;v&quot;:&quot;使得将x代换为QY之后，转化为标准型&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1102,1103]},&quot;v&quot;:&quot;特点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1104,1105]},&quot;v&quot;:&quot;λ1，λ2，λ3&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1106,1107]},&quot;v&quot;:&quot;A的特征值&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1108,1109]},&quot;v&quot;:&quot;k1，k2，k3&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1110,1111]},&quot;v&quot;:&quot;A分别对应λ1，λ2，λ3的&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1112,1113]},&quot;v&quot;:&quot;两两正交的特征向量&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1114,1115]},&quot;v&quot;:&quot;方阵的特征值和特征向量&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1116,1117]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1118,1119]},&quot;v&quot;:&quot;对于A&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1120,1121]},&quot;v&quot;:&quot;存在数字λ，非零列向量X&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1122,1123]},&quot;v&quot;:&quot;AX = λX&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1124,1125]},&quot;v&quot;:&quot;λ为A的特征值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1126,1127]},&quot;v&quot;:&quot;X为A的特征向量&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1128,1129]},&quot;v&quot;:&quot;特征向量不为0&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1130,1131]},&quot;v&quot;:&quot;（A-λE ）X=0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1132,1133]},&quot;v&quot;:&quot;实际上就是这个方程有非0解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1134,1135]},&quot;v&quot;:&quot;|A-λE| = 0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1136,1137]},&quot;v&quot;:&quot;直接进行计算即可&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1138,1139]},&quot;v&quot;:&quot;使用基础解系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[1140,1141]},&quot;v&quot;:&quot;凑&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1142,1143]},&quot;v&quot;:&quot;特征值的性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1144,1145]},&quot;v&quot;:&quot;特征值的和=A的主对角线的和(迹)&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1146,1147]},&quot;v&quot;:&quot;特征值的乘积 = A的行列式的值&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1148,1149]},&quot;v&quot;:&quot;|A| = 0 的时候，0一定为A的特征值&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1150,1151]},&quot;v&quot;:&quot;特征值的基本变换&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1152,1153]},&quot;v&quot;:&quot;与A有关的方阵的特征值（特征值简单记为a）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1154,1155]},&quot;v&quot;:&quot;a&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1156,1157]},&quot;v&quot;:&quot;ka&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1158,1159]},&quot;v&quot;:&quot;a+k&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1160,1161]},&quot;v&quot;:&quot;a^n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1162,1163]},&quot;v&quot;:&quot;1/a&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1164,1165]},&quot;v&quot;:&quot;|A|/a&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1166,1167]},&quot;v&quot;:&quot;X&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1168,1169]},&quot;v&quot;:&quot;x&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1170,1171]},&quot;v&quot;:&quot;x&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1172,1173]},&quot;v&quot;:&quot;x&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1174,1175]},&quot;v&quot;:&quot;x&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1176,1177]},&quot;v&quot;:&quot;x&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[1178,1179]},&quot;v&quot;:&quot;解题技巧&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1180,1181]},&quot;v&quot;:&quot;利用特征值的性质&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1182,1183]},&quot;v&quot;:&quot;特征值的和=A的主对角线乘积&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1184,1185]},&quot;v&quot;:&quot;特征值的乘积 = A的行列式的值&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[1186,1187]},&quot;v&quot;:&quot;|A| = 0 的时候，0一定为A的特征值&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1188,1189]},&quot;v&quot;:&quot;求特征值和特征向量&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1190,1191]},&quot;v&quot;:&quot;特征值和特征向量一一对应&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[1192,1193]},&quot;v&quot;:&quot;求转换过的特征值&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[1194,1195]},&quot;v&quot;:&quot;![[#特征值的基本变换]]&quot;}]}]}]}]}],&quot;p&quot;:{}}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>

# 两小时速通线代

## 行列式

### 行列式的基本性质

- 行列式的定义

    - 行列式

        - 一群按照正方形排列的数字

        - 称呼

            - 阶数

                -  

            - 行

                - r

            - 列

                - c

    - 余子式

        - M

        - 抹掉对应行对应列之后的矩阵

        - #

            -  

    - 代数余子式

        - A

        -  

            - i+j为偶数

                - M=A

- 行列式的性质

    - 行/列变换

        - 交换行

        - 符号变

    - 行列式为0

        - 两行两列成比例

    - 行列式和方程组的关系

        - 方程组

            - 齐次常数项全为0

                - 一组0解

                - 有零解与非0解

            - 常数项不为0

                - 只有一组非零解

                - 有多个解或者无解

        - 解

            -  

                -  

- 行列式的基本计算

    - 求值

        - 二阶

            - 对角线相乘再相减

        - 三阶

            - 可以通过辅助行列式法计算

        - 高阶行列式

            - 通法

                - 变成左上三角式子

                    - 一列列按照顺序消除

                - 变完之后

                    - 主对角线相乘

    - 行列式的转置

        - 数值相等

            -  

    - 行列式的倍乘

        - 数字*行列式

            - 某一行或者某一列进行乘除

            - 区别于 [[#矩阵的倍乘]]

            - 相当于提出只要一行提出

    - 行列式的拆分

        -  

        - 只拆其中的一行或者一列

        - 其他的保持不变

    - 行列式的展开

        - 所有的数乘以其的代数余子式之和

### 行列式的计算技巧

- 特殊行列式的计算

    - 主对角线相同为x，其余的位置都相同为a

        -  

        - 实际上可以用 [[#添行法]] 和 [[#爪形行列式]] 证明

    - 范德蒙行列式

        -  

            - = j 大的减 j 小的的乘积

        - #

            -  

                -  

    - 爪形行列式

        - 形如

            -  

                - 人话

                    -  

                    - 再把剩余的对角线乘上

    - 粗主对角线形式的行列式

        - #

            -  

        - 展开后使用数列的思想求解

        - 处理办法

            - 第一步

                - 按照第一列展开

            - 第二步

                - 然后再将第二项按照行展开

                    -  

            - 第三步

                - 按照数列一般套路即可求取D_n

    - 添行法

        - 观察：

        - 拓展应用

            - 因为x1，x2可以为任意值

            - 可以将其定义为下面行列式的相同部分

            - 然后全减

- 求X^k项的系数

    - 利用行列式的展开

    - 处理办法

        - 1.移动化简

            - 将x移动到对角线处

                - 子主题 1

            - 其余的全为常数项

        - 2.求解

            - 那么x项只在对角线上存在

            - 将对角线相乘即可得到所有含x项的展开式

- 某行为两项相加减的时候，行列式可以拆成两个行列式相加减

    -  

### 常见题型

- 求行列式的值

- 多个A或者M相相加减

    - 将给的行列式按照所需求和的式子进行改造

    - 然后求行列式的值

- 给定方程组判断是否有解

    - 方程组

        - 齐次(无二次项)

            - 一组0解

            - 有零解与非0解

        - 不齐次

            - 只有一组非零解

            - 有多个解或者无解

## 矩阵

### 矩阵的基本性质

- 定义

    - n*m

    - 矩阵是一个数表

        - 用于展示统计信息

    - 也可以理解为几个向量组成的组

- 属性

    - 秩

- 特殊的矩阵

    - 0矩阵

    - 方阵

    - 单位矩阵

        - 定义

            - 只有对角线是1的式子

            -  

        - 性质

            - 乘完不变

    - 对角矩阵

        - 对角矩阵一定是方阵

- 矩阵的基本运算

    - 矩阵的计算

        - 加减

            - 相同大小

            - 对应着加就ok

        - 数乘

            - 数字乘到每个元素里面

        - 乘法

            - 前行乘后列

            - 定行乘列

        - 运算法则

            - 注意左乘与右乘的区别

            - 矩阵没有除法

    - 矩阵的变换

        - 矩阵的初等变换

            - 分类

                - 行的互换

                - 行乘

                - 行减

            - 特点

                - 转换后不相等

                - 不可以行列同时互换

                    - 一般来说只进行行之间的变化

        - 转置

            - 转置再转置等于没转

                -  

            - 数乘可以直接提出来

                -  

            - 乘法转置后前后改变

                -  

            - tips

                - 优先宽的乘窄的

                    - 前行乘后列

                    - 越乘越小

        - 矩阵的行列式

            -  

            -  

            -  

            -  

        - 伴随矩阵

            - 每一项是原来的代数余子式

            - 不过要注意沿着对角线对称了

                -  

        - 矩阵的逆

            - 可逆

                - 条件一

                    - 为方阵

                - 条件二

                    - 存在矩阵B使得

                    - 或者|A|不等于0

            - 求逆矩阵

                - 方法

                    - 方法一

                        -  

                    - 换行

                    - 行上乘

                    - 行上相互加减

                    - 方法二

                        -  

                -  

            - 逆矩阵的运算

                - 数字要倒过来

                - 只有乘法才能拆括号

                -  

                -  

                -  

            - 使用逆做运算的时候需要注意

                - 需要注意左乘和右乘的区别

### 抽象矩阵的计算

- 严格套公式

###  

-  

### 分块矩阵

- 基本运算

    - Am阶，Bn阶

    -  

    -  

- 基本变换

    - 只要在主对角线上，其余位置都是0就可以

    - 在副对角线上，要进行取反

    - 对角矩阵

        - 对角矩阵的逆和次方直接取得

### 求数列的秩

- 每一行的0都比上一行多

- 0靠左

- 最后有几行非0的数

    - 秩就是几

## 向量组

### 求向量组的秩

### 向量组的线性相关性

- 其实就是r<n - 线性相关 ### 求向量组的极大线性无关组 ## 向量空间 对于一个向量空间有 对于数乘封闭 对于加法也封闭 封闭 处理玩之后还在这个向量空间里面 a到b的过渡矩阵c ac="B" 矩阵与方程组 线性方程组的增广矩阵 其实就是把常数项的结果也给写进来 行标准型矩阵 阶梯状，且台阶的上方要为0 只需要一列列减过去就好了 方程式的通解 可以理解为基础解系按照k1,k2,k3的重新分配 基础解系怎么求 分别令一个k等于1，其他的k="0" 有几个k？ 根据秩来判定 秩为多少就是几个k 方程式的解与矩阵的关系 原秩阵和增广矩阵的秩 可以简单理解为可动性和限制度的比较 x代表着可动性 即原矩阵的r1 式子的数目代表着约束性 即矩阵的阶数 即增广矩阵的r2 当约束>可动性的时候

            - 无解

        - 当约束等于可动性的时候

            - 有唯一解

        - 当约束小于可动性的时候

            - 有两穷解

            - 两个式子描述三个未知数是没有唯一解的

## 向量与方程组

### 将方程组表示为矩阵相乘

-  

- A

    - 系数矩阵

- （A，β）

    - 增广矩阵

- β = 0

    - 齐次线性方程组

        - 有一个零解

        - 和一个

- 给定方程组判断是否有解

    - 方程组

        - 齐次(无二次项)

            - 一组0解

            - 有零解与非0解

        - 不齐次

            - 只有一组非零解

            - 有多个解或者无解

- 行最简型矩阵

    - 行阶梯型

        - 每级阶梯只占一行

    - 每级阶梯第一个元素为1

        - 该元素所在列其余元素全为0

### 使用矩阵解方程

- 线性齐次方程组

    - 将A化为行最简矩阵

    - 将其还原为方程组形式

    - 用部分未知数表示其他未知数

    -  

        - 所有的解包括在这样张出来的一个系上

        - K1，K2为任意值

    - 基础解系

        - K后面乘的向量

    - 秩

        -  

- 线性非齐次方程组

    - 增广矩阵

        - 变为行最简型矩阵

    - 还原回原来的方程组

    - 用部分未知数表示已知数

        - 会包含常数

    - 写出方程的解

        - 后面会有一部分常数项

            - 即由通解和本身的值组成

## 向量空间

### 定义

- 向量集

    - 非空

- 对于加法和乘法封闭

    - 即a+b属于向量集

    - λa属于向量集

### 空间向量的基

### 过度矩阵

- A*C = B

    - C为A到B的过渡矩阵

## 向量组的线性表示和线性相关性

### 向量组的线性表示

- β能由x1，x2，x3线性表示

- 等同于这个方程有解

    - 非齐次线性方程组

- 代数上

    - β由【A的列向量组线性表示】的系数数值上就是AX=β的解

        - 如何用这个通解写出表达式？

            - 直接乘回去就好了

- 几何上

    - 即β在向量组A张成的空间内

    - 只要不是满秩j

        - 即阶梯式没有全0的行

            - 那么就线性无关

### 线性相关性

- 向量组自身的性质

- 向量组A中的向量相关

    -  

    - 代数上

        - AX=0有不全为0的解

            - 实际上就是解的系数不全为0

        - 有非零解

    - 几何上

        - x1,x2,x3在同一低一维的空间内

- 相关定理

    -  

    - x1,x2线性无关
x1,x2,x3线性相关

        - x3能x1,x2线性表示

    - 当m>n时，m个n维向量一定线性相关

        - 二维向量的活动范围在平面内

        - m个向量要求向量在（m-1）维空间内

## 向量组与矩阵的秩

### 向量组的秩与最大无关组

- 在向量组A中

    - 有【r个向量组成的部分组Ar】成线性无关

    - 所有【r+1个向量组成的部分组（若存在）】成线性相关

        - 即，A中任意向量都能由Ar线性表示

    - 则Ar为最大无关组

        - 最大无关组确定了向量组张成的空间的维数

    - 向量组的秩为r

        - 就是向量组的等级

        - 实际上指的就是向量组构成的空间的维数

        - 求数列的秩

            - 每一行的0都比上一行多

            - 0靠左

            - 最后有几行非0的数

                - 秩就是几

### 向量组的线性相关性与行列式的关系

- 将行列式看作是列向量

- 行列式的值其实是列向量张成的面积

- 向量共线

    - 向量组线性相关

        - 行列式的值为0

- 向量不共线

    - 向量组线性无关

        - 行列式的值不为0

### 矩阵的秩和最高非0子式

- 在矩阵中

    - 有【r阶子式Dr】不为0

    - 所有【r+1阶子式（如果存在）】全为0

- 等价于

    - r(A) = r

    - Dr为A的一个最高阶非0子式

- 什么是子式

    - 任取n行任取n列

        - 取出交叉的元素构成的行列式

### 我们会发现一件事情

- 向量组线性相关 = 矩阵线性相关 = 矩阵的子式等于0

-  

- 最大无关组

    - 行阶梯式

        - 每级阶梯第一个非0元素所在列

- 用最大无关组表示其他的变量

    - 最简行阶梯式

    - 解方程

    - 带回去

- 最高阶非0子式

    - 就是最大无关组所在位置的原矩阵

    - 且要求结果不为0

        - 其实就是行列式经过变换之后相同的行不能同时取

## 判断向量组的解的情况

### 给定方程组判断是否有解

- 方程组

    - 齐次Ax=0

        - 一组0解

        - 有零解与非0解

    - 不齐次Ax = β

        - 只有一组非零解

        - 有多个解或者无解

- 齐次方程组

    - 等价

        - Ax=0有非0解

        - A的列向量组成线性相关

        - r(A)<n - 当m="n的时候" |a|="0" 等价 ax="0无非0解" a的列向量组成线性无关 r(a)="n" !="0" 非齐次线性方程组 只有唯一解 β能由a的列向量表示且表示式唯一 r(a,β)="r(A)" = n 有无穷解 β能由a的列向量表示且表示式不唯一 < 无解 β不能由a的列向量表示 +1 不能被线性表示 ## 相似矩阵与二次型 ### 方阵相似对角化 相似矩阵 定义 存在p p是什么？ ab相似则特征值相同 证明 无法反推 特征值相同可以不相似 解题技巧 ab相似 特征值相同 ![[#特征值的性质]] 相似对角化 对于任意一个方阵a 都一定会会有一个对角矩阵λ与其相似 其中λ上对角线上的元素一定是a的特征值 λ上的每一列其实就是a的特征向量 对称矩阵的相似对角化 前置信息 正交矩阵 (a·b)="0" 实际上就是垂直 内积 其实就是高中学过的数量积 对应位置先相乘后相加 模 ||α|| 线性代数里面这么写 实际上就是向量的长度 性质 的 列向量 都是 单位向量 且 两两正交 正交 对称矩阵 对称矩阵不同特征值对应的特征向量两两正交 步骤 1.求a特征值 2.求a分别对应于λ1，λ2，λ3的线性无关的特征向量α1，α2，α3 3.将特征向量正交化 将α1，α2正交化 β1="α1" 4.单位化 除以它们各自的模 注意特征值和特征向量一一对应 二次型 每一项都是二次项的多元函数 分类 标准型 特点 只有二次项 没有混合项 系数 对角线的值在1，0之间 正定二次型 任意x>0，都有f>0

        - 等价定义

            - f的标准型的系数全为+

            - A的特征值全为+

            - 序数主子式 &&矩阵的行列式的值 > 0

        - 一般使用主子式进行判断

            - 顺序主子式

                - 一阶顺序主子式

                    - 左上角的值

                - 二阶顺序主子式

                    - 左上角的那个正方形

                - ……

                - n阶顺序主子式

                    - 就是矩阵的值本身

            - 全部的顺序主子式>0

- 二次型的矩阵

    -  

    - 步骤

        - 先写平方项的系数

        - 再写交叉项的系数的一半

            - 分别写在主对角线的两边

    - 特点

        - 一定是对称矩阵

- 化二次型为标准形

    - 将二次型转化为标准型

    - 方法

        - 正交变换法

            - 寻找矩阵Q = （k1,k2,k3）

            - 使得将x代换为QY之后，转化为标准型

    - 特点

        - λ1，λ2，λ3

            - A的特征值

        - k1，k2，k3

            - A分别对应λ1，λ2，λ3的

            - 两两正交的特征向量

## 方阵的特征值和特征向量

### 定义

- 对于A

    - 存在数字λ，非零列向量X

    - AX = λX

        - λ为A的特征值

        - X为A的特征向量

            - 特征向量不为0

- （A-λE ）X=0

    - 实际上就是这个方程有非0解

    - |A-λE| = 0

        - 直接进行计算即可

        - 使用基础解系

            - 凑

### 特征值的性质

- 特征值的和=A的主对角线的和(迹)

- 特征值的乘积 = A的行列式的值

    - |A| = 0 的时候，0一定为A的特征值

### 特征值的基本变换

- 与A有关的方阵的特征值（特征值简单记为a）

    - a

        - ka

        - a+k

        - a^n

        - 1/a

        - |A|/a

    - X

        - x

        - x

        - x

        - x

        - x

### 解题技巧

- 利用特征值的性质

    - 特征值的和=A的主对角线乘积

    - 特征值的乘积 = A的行列式的值

        - |A| = 0 的时候，0一定为A的特征值

- 求特征值和特征向量

    - 特征值和特征向量一一对应

- 求转换过的特征值

    - ![[#特征值的基本变换]]



</n></n></details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>数学</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代-最后的秋天：让玩家选择</title>
    <url>/2023/12/04/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3-%E6%9C%80%E5%90%8E%E7%9A%84%E7%A7%8B%E5%A4%A9%EF%BC%9A%E8%AE%A9%E7%8E%A9%E5%AE%B6%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">在任务的压力之下，你不得不选</span><br></pre></td></tr></table></figure>
<p>[[<strong>_游戏设计]]<br>[[_</strong>冰汽时代]]<br>[[___未完成]]</p>
<p>在冰汽时代中，你有的时候不得不选那种“负面的”政策。</p>
<p>在这种不得不接受的妥协之下……会激发玩家对于自己的批判。</p>
<p>抱歉，对于这方面我还没有想清楚……下次再来写</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>mcMod：1.2：制作第一个物品</title>
    <url>/2024/01/30/mcMod%EF%BC%9A1.2%EF%BC%9A%E5%88%B6%E4%BD%9C%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%89%A9%E5%93%81&amp;%E6%96%B9%E5%9D%97/</url>
    <content><![CDATA[<p>[[___mcmod]]</p>
<span id="more"></span>
<h3 id="一、下载工具"><a href="#一、下载工具" class="headerlink" title="一、下载工具"></a>一、下载工具</h3><ul>
<li>用于绘制像素图的软件</li>
<li>Lua（SciTe）</li>
</ul>
<p>前面那个我觉得可能sai2能用，lua可以在菜鸟教程找到安装方式：<a href="https://www.runoob.com/lua/lua-environment.html">Lua 环境安装 | 菜鸟教程 (runoob.com)</a></p>
<h3 id="二、制作物品-方块"><a href="#二、制作物品-方块" class="headerlink" title="二、制作物品/方块"></a>二、制作物品/方块</h3><p>这些东西都由以下几个部分组成  </p>
<ul>
<li>名字</li>
<li>代码</li>
<li>贴图（材质）</li>
<li>json：模型</li>
</ul>
<h4 id="名字"><a href="#名字" class="headerlink" title="名字"></a>名字</h4><p>在lang文件更改名称：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">item.testmod_item.name=display testmod_item  #显示名称</span><br><span class="line">item.testmod_item.desc=display testmod_item desc   #描述功能</span><br><span class="line"></span><br><span class="line">#item是物品</span><br><span class="line">#tile是方块*方块不自带描述功能</span><br></pre></td></tr></table></figure></p>
<h4 id="材质（贴图）"><a href="#材质（贴图）" class="headerlink" title="材质（贴图）"></a>材质（贴图）</h4><p>在ModItems、ModBlock中添加<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Item</span> <span class="variable">testmod_block</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ItemBase</span>(<span class="string">&quot;test_block&quot;</span>);</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Block</span> <span class="variable">testmod_item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BlockBase</span>(<span class="string">&quot;test_item&quot;</span>,Material.材质之一);</span><br></pre></td></tr></table></figure></p>
<h4 id="json"><a href="#json" class="headerlink" title="json"></a>json</h4><p>IDF提供了一个较为便捷的一键生成功能，你只需要在GenBlockJson.lua中填好你的modid 和物品的名称并且调用相关函数即可自动化生成</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>mcmod</tag>
      </tags>
  </entry>
  <entry>
    <title>冥想：STB时空桥梁法</title>
    <url>/2023/12/13/%E5%86%A5%E6%83%B3%EF%BC%9ASTB%E6%97%B6%E7%A9%BA%E6%A1%A5%E6%A2%81%E6%B3%95/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<h3 id="冥想：STB时空桥梁法"><a href="#冥想：STB时空桥梁法" class="headerlink" title="冥想：STB时空桥梁法"></a>冥想：STB时空桥梁法</h3><p>重点在于练习能够处在内在感知和外在感知轴上的任意位置，这样可以习得“分离性”并跨越大脑。</p>
<span id="more"></span>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="视觉上的空间关系影响你的时间感知"><a href="#视觉上的空间关系影响你的时间感知" class="headerlink" title="视觉上的空间关系影响你的时间感知"></a>视觉上的空间关系影响你的时间感知</h4><p>你的头脑实际上是可以根据你的视觉系统和时空领域相互交错的方式，被设置在某一个特定的时空位置的 。  </p>
<p>在看赛跑的时候，如果你站在远处看，你会觉得整体都很慢，但是凑近了就会觉得很快。</p>
<p>这一方面是因为人类的视觉系统所带来的差异，而另外一方面则是因为人们对于时间感知的不同。</p>
<p>当我们眺望远处的风景的时候，我们的时间感知就会变慢，时间变得很容易流逝，而当我们把视角聚焦到自己身上的时候，往往会觉得十分煎熬，时间感觉被拉的很长。</p>
<h4 id="感知、注意力与实际的不匹配"><a href="#感知、注意力与实际的不匹配" class="headerlink" title="感知、注意力与实际的不匹配"></a>感知、注意力与实际的不匹配</h4><p>我们常常容易被锁定在内在感知和外在感知轴上的某个位置上，如长时间刷手机忘记身体感觉忘记世界上周围发生的其他事情、专注某项外部事情激动或难受或恐惧以至于难以入睡……</p>
<p>生活中感到的疲劳压力、出现的不适应的行为和情绪，实际上并非因为这些行为或情绪的对错与否，而是<strong>他们跟我们所处的时空领域不匹配</strong>。</p>
<p>这些时候就需要你拥有能够 调整你的注意力在内在感知和外在感知轴上的任意位置的能力，从而来更好的调整我们的注意力。</p>
<h3 id="练习方法："><a href="#练习方法：" class="headerlink" title="练习方法："></a>练习方法：</h3><p>选空旷处（户外、窗前）</p>
<p>1、闭眼，注意力集中，把感知意识100%放在呼吸上，持续呼吸三次，进行内在感知练习</p>
<p>2、睁眼，把眼睛注意力集中在身体的某个表面，需要有一定的距离，如伸出手，把注意力集中在手掌上（即一只手臂的距离），练习让50%的注意力在手上，50%的注意力在呼吸上，持续三次完整的吸气和呼气，尽可能地把注意力同时分布在内在感知和外在感知上</p>
<p>3、更换到更远的距离，看看周围环境中的某个位置，大概3-5米距离的某个位置或某个物体，把50%的注意力集中在那里，50%的注意力集中在呼吸，也是这样持续三次呼吸，这样就同时处于外在感知和内在感知里了</p>
<p>4、继续更换更远的距离，50%集中在更远的地方，同时50%关注你的呼吸，持续三次呼吸。</p>
<p>如果觉得把注意力分别集中在这两个地方（远处、自己的呼吸）有难度的话，可以想象两者之间有一座桥梁，你要把注意力集中到一个事实上：你是地球这个大星球上的一个小小物体，而地球又是在一个更大更广阔、不断扩展的宇宙之中。（要注意，这是一个事实，不是一个想象）</p>
<p>然后关注这个事实，持续三次呼吸，然后闭上眼睛，立刻回到内在感知中，持续三次呼吸。</p>
<p>ps：</p>
<p>如果你愿意的话，你可以在这个时空区间里面来回做几次练习，从纯内在感知、闭眼、关注呼吸、睁眼关注手掌、关注面前有距离的物体、关注更远处、关注整个地球宇宙、最后回到身体里。</p>
<h3 id="解释STB为什么有效："><a href="#解释STB为什么有效：" class="headerlink" title="解释STB为什么有效："></a>解释STB为什么有效：</h3><p>它能刻意训练你，把你的意识、你的感知放在内在感知知觉和外在感知的连续体的每个位置上、过程里，并且要与呼吸保持连接的状态（即要能一直觉察到呼吸）。</p>
<p>在练习里，通过把感知、意识刻意放在不同时空上，然后再拉回纯内在感知，实际上是在锻炼人类头脑里令人难以置信的能力：就是能够处在内在感知和外在感知轴上的任意位置。</p>
<p>某些时候需要你有这个能力，把注意力放在这些不同的时空位置上。</p>
<p>你的头脑是可以根据你的视觉系统和时空领域相互交错的方式，被设置在某一个特定的时空位置的 。</p>
<p>作为一个高效的人，我们需要能够很好的、动态的调整我们的注意力，从电脑上做的事情调整到回答别人问的问题然后回来继续工作、从看短信调整到听讲座和播客、与家人或朋友联系等等</p>
<p>简而言之，能够活在当下(being present)和</p>
<p>正念(being mindful)里，是冥想练习的结果，他们也是时空连续体上的一个时空位置，这里的关键要素是通过刻意练习，你能够灵活且动态地投入到某个事情里，例如对话，然后脱离出来或专注进去。</p>
<p>从你前一刻专注的工作里出来，然后进行真正投入的对话，或者从内在感知出来，投入到这个世界里去、周围发生的事物里去。</p>
<p>对于那些过于沉浸在自己头脑中的人来说会有用，对于那些过度倾向于外在感知的人来说也是非常有用的，可以让他们练习脱离，并进入内在的感知。</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.bilibili.com/video/BV1TM411M7vm/">最强冥想方法 成为那1%%的人 脑神经学家推荐｜Dr Andrew Hurbman #無常有生_哔哩哔哩_bilibili</a></p>
]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>反思：我的事项-时间安排到底存在什么问题</title>
    <url>/2023/12/21/%E5%8F%8D%E6%80%9D%EF%BC%9A%E6%88%91%E7%9A%84%E4%BA%8B%E9%A1%B9-%E6%97%B6%E9%97%B4%E5%AE%89%E6%8E%92%E5%88%B0%E5%BA%95%E5%AD%98%E5%9C%A8%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<h2 id="一、现象"><a href="#一、现象" class="headerlink" title="一、现象"></a>一、现象</h2><p>首先总结一下存在的问题的现象：</p>
<ol>
<li>冥想的时间逐渐减少，在冥想中表现出来的能力越来越弱</li>
<li>不能很好得深入思考数学的问题，满足于浅层的解决问题</li>
<li>吃饭的时候总是想着看些什么……</li>
<li>睡前总是想着看些什么</li>
<li>注意力被叉出去之后并不能很好地拉回来</li>
<li>时间安排得并不合适</li>
<li>没有按照常规的日程流程进行任务的完成</li>
<li>其余的信息对我来说到底意味着什么？</li>
</ol>
<p>总之现在存在的种种问题的现象还是十分复杂的。</p>
<h2 id="二、底层原理"><a href="#二、底层原理" class="headerlink" title="二、底层原理"></a>二、底层原理</h2><h3 id="冥想的时间逐渐减少，在冥想中表现出来的能力越来越弱"><a href="#冥想的时间逐渐减少，在冥想中表现出来的能力越来越弱" class="headerlink" title="冥想的时间逐渐减少，在冥想中表现出来的能力越来越弱"></a><strong>冥想的时间逐渐减少，在冥想中表现出来的能力越来越弱</strong></h3><ol>
<li>不良的循环的构成<ol>
<li>水平的下降<ol>
<li>我并没有给自己足够的时间进行冥想的练习。</li>
<li>有的时候早上起的晚了一些，这些任务并不能够在室友们起来之前完成</li>
<li>最近实际上摄取的信息太多了</li>
</ol>
</li>
<li>因为上述原因，给了我关于冥想的负反馈过多了，也就进一步导致了训练时间的减少</li>
</ol>
</li>
<li>没有权威<ol>
<li>bilibili上面提供的方法很多很杂，实际上我每次对于一个视频总是以一种尝试的心态去完成的。</li>
</ol>
</li>
</ol>
<h3 id="不能很好得深入思考数学的问题，满足于浅层的解决问题"><a href="#不能很好得深入思考数学的问题，满足于浅层的解决问题" class="headerlink" title="不能很好得深入思考数学的问题，满足于浅层的解决问题"></a><strong>不能很好得深入思考数学的问题，满足于浅层的解决问题</strong></h3><ol>
<li>确实没有花多少时间在学习上面<ol>
<li>很多很多闲散时间的浪费</li>
<li>没有安排时间</li>
<li>没有按照飞项上面的事项执行任务</li>
<li>断电</li>
</ol>
</li>
<li>没有安排二刷三刷<ol>
<li>时间问题</li>
<li>飞项上面事项的翁乱</li>
</ol>
</li>
</ol>
<h3 id="其余的信息对我来说到底意味着什么？"><a href="#其余的信息对我来说到底意味着什么？" class="headerlink" title="其余的信息对我来说到底意味着什么？"></a>其余的信息对我来说到底意味着什么？</h3><p>吃饭的时候或者睡觉之前总是想着看些什么……</p>
<p>说白了就是我倾向于在这种“空闲时间”去获取信息</p>
<p>但是实际上我也是知道实质上的休息会让人更加舒畅</p>
<p>在进行实际的休息的时候还会有另外一个问题，就是如果我有室友的话我的这一举动实际上会显得十分奇怪</p>
<p>但其实也十分简单，我将其换成冥想就可以了……</p>
<h3 id="时间安排得并不合适"><a href="#时间安排得并不合适" class="headerlink" title="时间安排得并不合适"></a>时间安排得并不合适</h3><p>先不提飞项这个软件如何</p>
<p>一方面是，我可能会开始怀疑一些时间的开销是否值得？</p>
<p>包括所需的时间</p>
<p>之前制定的一些任务的时间因为各种原因并没有被完成，而在这之后我也没有再重新制定新的计划。</p>
<ol>
<li>不划算的开销</li>
<li>需要的时间不合适</li>
<li>之前的计划已经过时</li>
</ol>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>小小梦魇：还不错的一款恐怖游戏</title>
    <url>/2023/12/20/%E5%B0%8F%E5%B0%8F%E6%A2%A6%E9%AD%87%EF%BC%9A%E8%BF%98%E4%B8%8D%E9%94%99%E7%9A%84%E4%B8%80%E6%AC%BE%E6%81%90%E6%80%96%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p>[[<strong>_小小梦魇]]  [[_</strong>游戏体验日记]]</p>
<p>[[___未完成]]</p>
<p>或许我该收起前面部分对于小小梦魇的评价</p>
<p>再换用了手柄之后游戏的操作体验有了质的飞跃  </p>
<p>但是游戏中引导部分缺失的问题仍然存在，游戏节奏的把握或许还有更好的调节方法……  </p>
<p>在这种引导缺失的背景之下，游戏的“容错率”，也就是失败之后的</p>
<p>接下来，我想要回答自己下面这个问题：<br>游戏是通过什么来营造恐怖的氛围的？</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>小小梦魇</tag>
      </tags>
  </entry>
  <entry>
    <title>少女前线2：追放：初步游玩体验</title>
    <url>/2023/12/23/%E5%B0%91%E5%A5%B3%E5%89%8D%E7%BA%BF2%EF%BC%9A%E8%BF%BD%E6%94%BE%EF%BC%9A%E5%88%9D%E6%AD%A5%E6%B8%B8%E7%8E%A9%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>[[<strong>_少女前线2：追放]]<br>[[_</strong>游戏体验日记]]</p>
<p>从昨天开始陆陆续续玩大概玩了10h，现在指挥官的等级在20级。</p>
<p>首先这是一款二游，所以说不应该和其他的游戏一样执着于游戏设计，其画面表现 ，任务塑造，世界观，背景……同样也是构成一款二次元游戏的重要组成部分。</p>
<p>下面我就将就我自己的初步游玩，谈谈我的感想。另外，为了能对事物有一个评分的判准，我将会分析游戏中的加分项和扣分项，然后再以杂谈的形式随便聊聊以增加文章的趣味性。</p>
<span id="more"></span>
<h2 id="一、画面表达"><a href="#一、画面表达" class="headerlink" title="一、画面表达"></a>一、画面表达</h2><p>这款游戏的建模和2d渲染做的都很好，尤其是腿部和足部，还有黑丝，可以看的出游戏开发商在这方面做了很大的努力</p>
<p>游戏的画面内容可以分为：基地的展示用画面，过场CG的画面，文字对话的画面，和局内的画面，局内的动画。</p>
<h3 id="1-基地的展示用画面"><a href="#1-基地的展示用画面" class="headerlink" title="1.基地的展示用画面"></a>1.基地的展示用画面</h3><p>基地的展示用画面做的十分地精细，尤其是足部与黑丝，这绝对是不会让我吝啬我的赞扬的部分。</p>
<p>在游戏中，随着玩家抽到新的角色并且将其升级，玩家可以解锁其相对应的休息室的画面。在休息室的时候，玩家可以欣赏角色在进行各种姿势时的动态3d场景，更为重要的是，在这个场景中，玩家是可以控制摄像头的位置的，你可以将其放在任何一个位置……</p>
<p>“这下不得不品鉴一下了”，这对于我这种lsp来说无疑是挺致命的诱惑……</p>
<p>在角色升级界面，玩家还可以进入观察模式，并且和角色进行少量的交互动作。</p>
<p>总而言之，代表着游戏的核心的顶尖的画面品质做的很好。</p>
<ul>
<li><ul>
<li>优秀的建模</li>
</ul>
</li>
<li><ul>
<li>优秀的渲染，尤其是腿部的丝袜和足部，相比起其他同类的游戏而言十分地吸引人</li>
</ul>
</li>
<li><ul>
<li>可以移动的观察镜头</li>
</ul>
</li>
</ul>
<h3 id="2-过场的实时渲染的CG"><a href="#2-过场的实时渲染的CG" class="headerlink" title="2.过场的实时渲染的CG"></a>2.过场的实时渲染的CG</h3><p>过场的实时渲染的CG的效果有明显的质量下降，不过总体而言在可以接受的范围之内。值得指出的是，游戏的面部嘴型存在十分严重的问题……<br>想象这样一个镜头，是拍摄男主的大头，并配有男主的声音，但是男主的嘴巴就是一下都没有动……这种感觉十分的违和</p>
<ul>
<li>= 还算过得去的演出</li>
<li><ul>
<li>嘴部没有动作&amp;嘴部较为僵硬，降低了观看体验</li>
</ul>
</li>
</ul>
<h3 id="3-文字对话的画面"><a href="#3-文字对话的画面" class="headerlink" title="3.文字对话的画面"></a>3.文字对话的画面</h3><p>文字对话页面就是十分普通的2d贴图+对话框 的设计，十分地普通，没有上面可圈可点之处。</p>
<p>相较之下，我还是感觉类似崩坏3的多使用3d模型进行演出的形式会更好一点，因为这样的话动作，神态，表情都可以较为活灵活现地表达出来。</p>
<ul>
<li>= 中规中矩 的文字对话页面</li>
</ul>
<p>如果可以的话，我还是希望可以是全CG</p>
<h3 id="4-局内的画面，局内的动画"><a href="#4-局内的画面，局内的动画" class="headerlink" title="4.局内的画面，局内的动画"></a>4.局内的画面，局内的动画</h3><p>少女前线2作为一款自走棋类的游戏，在游戏的局内使用的是低模，但是还是具有一定的可欣赏程度，我认为这是相当不错的。</p>
<p>在局内，移动你的角色将会播放移动的动画，看美少女翻墙和跑动还是很有意思的。在这个过程中，玩家可以欣赏角色的美腿。（所以说整个游戏都在强调腿不是吗www，这是很好的一点，将特色做出来并且强调）</p>
<p>在释放技能的时候也会播放对应的动画，还是挺精致的，但是在追求效率的时候可以将其关闭。</p>
<ul>
<li><ul>
<li>具有欣赏价值的局内画面</li>
</ul>
</li>
<li><ul>
<li>强调腿部的画面表达形式</li>
</ul>
</li>
</ul>
<h2 id="二、世界观-amp-人物的设计"><a href="#二、世界观-amp-人物的设计" class="headerlink" title="二、世界观&amp;人物的设计"></a>二、世界观&amp;人物的设计</h2><h3 id="1-世界观"><a href="#1-世界观" class="headerlink" title="1.世界观"></a>1.世界观</h3><p>就世界观来说，还是老生常谈的末世，还是很有意思的。世界观上面可能有继承上一代的成分？我没玩过上一代，所以说并不能回答这个问题。</p>
<p>但是在游戏中，我感觉似乎反派的魅力要小一点，整个123章下来，给我的感受就是：反派好傻逼、主角人脉好广。</p>
<p>另外，一般而言，为了方便玩家带入游戏一般会将主角设定为“无脸人”，或者至少将主角设定为一个失去记忆的人，这样的话可以方便玩家将男主带入自己。</p>
<p>但是在本作中，男主作为一个经验丰富，拥有很多过往的事情的人，十分地不方便玩家带入视角。</p>
<p>每次男主说 <strong>“找*</strong>”<strong> 或者 </strong>“她是我的老朋友”**，的时候，我都会想问：“所以说你TM到底是谁？你之前又有什么故事？”</p>
<p>这种时候就会感到十分地不适。</p>
<ul>
<li>= 中规中矩的世界观</li>
<li><ul>
<li>主角的塑造存在问题，玩家不好带入</li>
</ul>
</li>
</ul>
<h3 id="2-世界观构筑方式"><a href="#2-世界观构筑方式" class="headerlink" title="2.世界观构筑方式"></a>2.世界观构筑方式</h3><p>本作的世界观的构筑方式是由以下部分组成的：</p>
<ul>
<li>基于目前叙述时间的主线剧情&amp;关卡</li>
<li>游戏通关额外关卡后会收集到额外的资料。这些资料和主线剧情没有关系，只不过是从侧面构筑世界观</li>
<li>角色的回忆（少部分）：基本上就是纯粹讲述角色的过往，和主线关系不大……</li>
</ul>
<p>十分常见的构筑方式，但是我认为还是存在一定的缺陷，</p>
<ul>
<li><ul>
<li>游戏中没有可以供玩家选择的选项，基本上就是AUTO然后当作看番一样的过剧情</li>
</ul>
</li>
</ul>
<h3 id="3-人物设计"><a href="#3-人物设计" class="headerlink" title="3.人物设计"></a>3.人物设计</h3><p>在本作中，几个主角设计的都挺有意思的，各有各的风格和性格，</p>
<p>男主的问题我不想再提了，前面在世界观的部分已经指出了问题所在</p>
<p>但是反派还是缺乏塑造，我所见的就是一个智力有点问题的反派人类，还有一个超级吊的反派战术人形”六分仪“</p>
<p>……</p>
<ul>
<li><ul>
<li>主角塑造不好，玩家很难带入，连给玩家选择的权力都不给</li>
</ul>
</li>
<li><ul>
<li>反派的设计过于单薄</li>
</ul>
</li>
</ul>
<h2 id="OK-实际上到这里就已经够了"><a href="#OK-实际上到这里就已经够了" class="headerlink" title="OK 实际上到这里就已经够了"></a>OK 实际上到这里就已经够了</h2><p>这毕竟是二次元游戏，只要上面两点不差基本上就是一款合格的二次元游戏了。</p>
<p>但是我本人玩过的自走棋类游戏较为少，所以说见到本作的自走棋的设计还是颇有兴趣的awa</p>
<p>后面再写一篇有关于游戏设计的</p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>少女前线2：追放</tag>
      </tags>
  </entry>
  <entry>
    <title>少女前线2：追放：颇有意思的自走棋类游戏</title>
    <url>/2023/12/24/%E5%B0%91%E5%A5%B3%E5%89%8D%E7%BA%BF2%EF%BC%9A%E8%BF%BD%E6%94%BE%EF%BC%9A%E9%A2%87%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E8%87%AA%E8%B5%B0%E6%A3%8B%E7%B1%BB%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p>[[<strong>_游戏体验日记]]<br>[[_</strong>少女前线2：追放]]</p>
<p>前面已经简单聊过了少女前线2里面的画面和剧情等等，现在在这里简单聊聊少女前线2里面的机制设计。</p>
<h2 id="一、机制解构"><a href="#一、机制解构" class="headerlink" title="一、机制解构"></a>一、机制解构</h2><p>游戏中实际上是一个较为常规的自走棋的模式，每个角色可以在移动之后使用技能或者普攻，拥有蓝条这个限制因素，玩家需要合理规划这些资源来达到游戏的目的。游戏的目标一般是清除所有的敌人，除此之外还有守点，攻点等玩法，但是本质上仍然是击杀敌人。</p>
<h3 id="1-掩体-amp-稳态机制"><a href="#1-掩体-amp-稳态机制" class="headerlink" title="1.掩体&稳态机制"></a>1.掩体&amp;稳态机制</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>游戏的一个较为有趣的设定是掩体的使用，在游戏中，地形主要可以分为以下三种：</p>
<ul>
<li>平地</li>
<li>可以越过的半墙</li>
<li>不可以越过的半高的地形</li>
<li>会阻挡弹道的全高地形</li>
</ul>
<p>在游戏中，角色会因为其所处的位置和自生属性获得减伤，其计算公式如下：</p>
<script type="math/tex; mode=display">减伤=地形减伤+稳态减伤</script><h4 id="地形减伤"><a href="#地形减伤" class="headerlink" title="地形减伤"></a>地形减伤</h4><p>地形减伤是因为角色处在掩体后面，可以抵挡对应掩体抵挡方向的直线攻击，并对这部分伤害进行减免，一般来说会提供35%的伤害减免。</p>
<h4 id="稳态减伤"><a href="#稳态减伤" class="headerlink" title="稳态减伤"></a>稳态减伤</h4><p>稳态减伤是角色由于处在掩体后方获得的减伤效果，当然，也可以通过角色技能获得。在掩体发挥作用的时候，稳态减伤会在其基础上进一步减伤。</p>
<p>比如说：角色 在【7点稳态】时 在受到【会被掩体格挡住】的无属性攻击的时候，实际的减伤比例是： <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="41.603ex" height="2.149ex" role="img" focusable="false" viewbox="0 -750 18388.4 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">【</text></g></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">掩</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">体</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">减</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">伤</text></g><g data-mml-node="mn" transform="translate(5000,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"/></g><g data-mml-node="mi" transform="translate(6000,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6833,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">】</text></g></g><g data-mml-node="mo" transform="translate(8055.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9055.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">【</text></g></g><g data-mml-node="mn" transform="translate(10055.4,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"/></g><g data-mml-node="mi" transform="translate(10555.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">点</text></g><g data-mml-node="mi" transform="translate(11555.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">稳</text></g><g data-mml-node="mi" transform="translate(12555.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">态</text></g><g data-mml-node="mi" transform="translate(13555.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">减</text></g><g data-mml-node="mi" transform="translate(14555.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">伤</text></g><g data-mml-node="mn" transform="translate(15555.4,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(500,0)"/></g><g data-mml-node="mi" transform="translate(16555.4,0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(17388.4,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">】</text></g></g></g></g></svg></mjx-container></p>
<p>需要注意的是，大部分攻击实际上一般都会附带一部分稳态伤害，在计算的时候会优先减去稳态的值，比如：角色在【7点稳态】 受到 带有【3点稳态伤害】【会被掩体格挡住】的无属性攻击的时候，实际上的减伤比例应该是：【掩体减伤35%】+【7-3点稳态减伤 20%】</p>
<p>当场上存在属性克制的时候，将会给攻击额外附带2点稳态攻击的效果。</p>
<p>在稳态被清空的时候，角色会进入失衡状态，此时，即使掩体不在会生效，玩家将会把伤害吃满。</p>
<h4 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h4><p>在这种机制之下，玩家进攻的最好的办法就是想办法绕过掩体/通过特殊攻击破坏敌人可能存在的可以被破坏的掩体，或者直接使用投掷类攻击，这类攻击可以无视掩体。</p>
<p>你可能会说：那我选择破甲然后进行进攻不好吗？但是在游戏中，大部分角色每回合只能进攻一次，也就是说，你先破甲+攻击，往往需要花费两个甚至更多的回合，这就有点得不偿失了。</p>
<h3 id="2-回合机制"><a href="#2-回合机制" class="headerlink" title="2.回合机制"></a>2.回合机制</h3><p>在游戏中，只有少的可怜的额外行动机会获取方式，这就导致，怎么样才能最合理地分配你的伤害。</p>
<p>我们希望高额的伤害能打出它的作用而不让伤害溢出导致浪费，至于击杀残血，我们更希望是范围伤害 收割一批残血或者使用 追加攻击/协助攻击/反击 等被动攻击方式来达到收割残血而不至于浪费行动机会。</p>
<p>就现在我的基本打法而言，基本上就是围绕</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>少女前线2：追放</tag>
      </tags>
  </entry>
  <entry>
    <title>怀疑性认知的六条原则</title>
    <url>/2024/02/17/%E6%80%80%E7%96%91%E6%80%A7%E8%AE%A4%E7%9F%A5%E7%9A%84%E5%85%AD%E6%9D%A1%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<p>怀疑性认知的六条原则</p>
<ol>
<li>我碰到的是什么内容?</li>
<li>信息完整吗?假如不完整，缺少了什么?</li>
<li>信源是谁/什么?我为什么要相信他们?</li>
<li>提供了什么证据?是怎样检验或核实的?</li>
<li>其他可能性解释或理解是什么?</li>
<li>我有必要知道这些信息吗?</li>
</ol>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>《真相：信息超载时代如何知道该相信什么》</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>收容：秘密档案</title>
    <url>/2024/02/02/%E6%94%B6%E5%AE%B9%EF%BC%9A%E7%A7%98%E5%AF%86%E6%A1%A3%E6%A1%88/</url>
    <content><![CDATA[<p>[[___未完成]]</p>
<p>有机会去玩玩</p>
]]></content>
      <tags>
        <tag>未完成</tag>
      </tags>
  </entry>
  <entry>
    <title>时间管理小助手：概念设计</title>
    <url>/2024/02/25/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E5%B0%8F%E5%8A%A9%E6%89%8B%EF%BC%9A%E6%A6%82%E5%BF%B5%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：2024-1-11 有关于听音乐</title>
    <url>/2024/01/11/%E6%9D%82%E8%B0%88%EF%BC%9A2024-1-11%20%E6%9C%89%E5%85%B3%E4%BA%8E%E5%90%AC%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>hmmm，好久没有写blog了，毕竟这几天考试的话加上确实也没有干什么较为有意思的事情。</p>
<p>然后今天写这篇的起因实际上是因为之前我不是换了个耳机和购置了个耳机线嘛，今天连麦的调试麦克风的时候突然想到一件事情就是</p>
<p>之前我把耳机接在显示器上面是因为耳机线的线长的限制，而我现在换了个两米长的线，那么我为什么还要接在显示器上面呢？😂</p>
<p>然后我就去确认了一下……</p>
<span id="more"></span>
<h2 id="HDMI口和3-5口"><a href="#HDMI口和3-5口" class="headerlink" title="HDMI口和3.5口"></a>HDMI口和3.5口</h2><p>这两个口其实最大的区别就是输出的信号的模式，HDMI输出的同时附带有音频，但是适合视频信号一起打包出传输的，也就是说，在HDMI处，声音型号就被压缩编码为了数字信号，但是，声音想要在耳机中播放需要再次转化为模拟信号。  </p>
<p>那么在这样的一个过程中实际上就存在两个问题：</p>
<p>1.一方面是在传输并且被压缩再解压的音质肯定是不如原来的音质的。</p>
<p>2.显示器的主要功能为显示，一般其内置的音频解析的硬件都是能听个响的级别。</p>
<p>说实话，如果说显示器搭载的解析能力要远远高于笔记本电脑本身的解析能力的话，那么实际上哪个更好可能还真说不定。</p>
<p>两种的传递方式分别如下：<br><strong>使用3.5耳机孔</strong></p>
<ol>
<li>音源(一般是数字信号，但是不排除使用原生的wav格式的可能)</li>
<li>声卡+3.5接口：将所有的声音转化为模拟信号</li>
<li>耳机放声音  </li>
</ol>
<p><strong>使用HDMI</strong></p>
<ol>
<li>音源</li>
<li>压缩，并且随着视频信号传递给显示器</li>
<li>显示器自带的垃圾声卡给你解析为模拟信号</li>
<li>耳机放声音</li>
</ol>
<p>为什么要补充说明这一步呢？因为在实际使用的场景中是有将媒体信息通过HDMI连接到电脑然后使用电脑外接的音响的使用方法的。</p>
<p>在这种场景中，一方面，在第2步的压缩的压缩率会更小，因为往往输出的质量会很高，但是抱歉我的电脑的HDMI接口为HDMI 1.4b，哈哈，连我的显示器都跑不满（我的显示器最高显示为2K144hz，但是这个的输出最高只有2K60hz）</p>
<p>另外一方面，为了专门的观影体验而设计的电视，其声卡一般不会差，甚至比一般主板上面集成的声卡的性能要好上不少。</p>
<h2 id="耳机线真的能影响音质吗？"><a href="#耳机线真的能影响音质吗？" class="headerlink" title="耳机线真的能影响音质吗？"></a>耳机线真的能影响音质吗？</h2><p>答案是：不能，绝对不能，实际上，那些说是耳机线能够影响的人非蠢即坏。  </p>
<p>一般来说这种人其实一般只是被送的劣质耳机线所影响，然后换了一个标准的耳机线，然后就根据这种片面的看法而认为耳机线能够影响。</p>
<p>但是实际上就是你的耳机线达标了，就没有区别。</p>
<p>而且实际上一根合格的耳机线也并不便宜，我这个两米的大概就花了我30元（买回来线是真的粗，只不过这根线只支持音频，而不支持麦克风）</p>
<h2 id="声阔Q35的声音体验"><a href="#声阔Q35的声音体验" class="headerlink" title="声阔Q35的声音体验"></a>声阔Q35的声音体验</h2><h3 id="音质"><a href="#音质" class="headerlink" title="音质"></a>音质</h3><p>总体来说确实是比haylou的好了挺多</p>
<p>尤其是音质（尤其是在将hdmi换成3.5之后）</p>
<p>声音十分有层次，每一次的重音和鼓点都能十分清晰的听到</p>
<p>中高频的声音也较为的实，不虚</p>
<h3 id="降噪"><a href="#降噪" class="headerlink" title="降噪"></a>降噪</h3><p>降噪这一点我倒是觉得貌似声阔虽然更好，但是在较为安静的环境之下，有概率会听到嘶嘶或者啪啪啪的电流声，经过检验这应该是降噪的麦克风的屏蔽没有调整好导致的bug</p>
<p>这种属于是品控的问题了，目前的解决办法就是试着敲一敲里面的麦克风了，如果还是不行关掉降噪，就没有杂音了。</p>
<h3 id="舒适性"><a href="#舒适性" class="headerlink" title="舒适性"></a>舒适性</h3><p>这款耳机十分的舒适，重量和体积都要比haylou小了一圈，尤其是体积，当我拿到买家包装的盒子的时候，我甚至一度怀疑这到底是不是耳机，事实证明我多虑了，但是我觉得还是得提及一下这个耳机十分轻巧的设计。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总体来说，这个耳机让我目前十分满意，虽然说有点小瑕疵，但是处于可以接受的程度</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://g.nga.cn/read.php?tid=27831615&amp;rand=360">https://g.nga.cn/read.php?tid=27831615&amp;rand=360</a></p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：关于中美的贸易冲突</title>
    <url>/2024/02/16/%E6%9D%82%E8%B0%88%EF%BC%9A%E5%85%B3%E4%BA%8E%E4%B8%AD%E7%BE%8E%E7%9A%84%E8%B4%B8%E6%98%93%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>本文来自于nga论坛，本人看了十分有感触，在这里记录一下。</p>
<p>不得不说英国佬政治素养还是有的</p>
<p>续孤兰</p>
<p>级别：学徒 威望：1 发帖:3227</p>
<p>今天拿着presentation找导师修改，一边改一边</p>
<p>跟教授闲聊，就说到国际政治了</p>
<p>不得不说英国佬玩政治上，想法和眼光还是有的</p>
<p>（所以您大英帝国玩脱欧怎么玩成这样的）</p>
<p>不管媒体怎么宣传，高级知识分子对局势的见解还是可以的，和老头子聊了聊，我对中美国际局势感觉有了个全新的视角</p>
<p>和他聊聊贸易战，我说中国其实并不愿意贸易战，而且也并没有主动发动贸易战，美国的很多指责都是无稽之谈</p>
<p>教授说他知道，但这根本不是本质与重点，他认为贸易战本质上依旧是中国对美国的战略进攻，不管贸易战是不是美国主动挑起的，就算是，那也不如说是中国人逼迫美国人主动挑起的贸易战这又要从98年到08年以及08年至今的局势演化说起了</p>
<p>美国依靠美元，美军与美国价值观从全世界收割社会财富与吸引人才喂养美国本身，削弱他国实力，从布雷顿森林体系解体以来，已经形成了一套系统的组合拳与方法，而苏联的解体加剧了这种依赖</p>
<p>具体方法是这样：</p>
<p>依靠美国的影响力与国力支撑的美元以贸易逆差的方式为全世界提供流动性，让美元在全世界流动，我们可以把这批美元看做是鱼苗，羔羊。然后依靠美国的军事实力和国际影响力，人为的制造地区冲突与危机，可以是很多形式，政治危机，经济危机，加息，甚至国际冲突从而使特定国家资产价格相对于美元大幅度波动，本币剧烈贬值，从而以超低代价收割他国的优质资产与外汇储备，一方面让这批增值的财富收入美国囊中大餐一顿吃个饱，一方面回收美元的流动性，为下一轮收割而做准备，释放和回收美元流动性的中间的具体操作就是加息与降息</p>
<p>整个流程已经形成一套系统的组合拳，就像养羊一样，放出去吃草，出肥了收割</p>
<p>这套方法很多时候行之有效，为此美国才建立起了它的全球体系与推行全球化，为美元的自由流通设立保障</p>
<p>但从98年以后，这种方式遭到了极大的挑战，根本原因在于中国</p>
<p>中国的崛起并不仅仅是一个顶替了苏联位置的强国那么简单，它的存在和方式对美国主导的国际秩序造成了巨大的挑战</p>
<p>中国的崛起是美国21世纪以来的最大的挑战与隐患，政府控制力强，并且在金融领域对资本有诸多管制措施，使得美国难以单单通过资本操作方式收割中国的财富</p>
<p>然后中国日渐增强的综合国力和稳定的社会与政治环境，使得美国更难以制造政治危机的方式，制造中国的资产价格跳水，哪怕制造了，由于中国的管制措施财富也难以流出中国</p>
<p>然而从98年以来，通过制造国际冲突的方式造成中国内部不稳定以达到更换一个可以让资本自由流通的政府的方式已经无数次宣告失败，并且花费了美国很多“成本(Cost)”, 包括金钱上或者国际影响力上</p>
<p>可以说，21世纪以来，中国对于美国，就是一个蒸不烂，煮不热，锤不扁，炒不爆的一粒铜豌豆。</p>
<p>美国除了直接宣战以外，已经没有什么手段能打断中国的上升进程了</p>
<p>但如果仅此而已，中国说不上的是美国的心腹大患，或者换句话说，肯定算不上比苏联更严重的威胁</p>
<p>中国之所以对美国而言比苏联更危险的原因在于，它采取了完全迥异于苏联的方式，对美国的根基在进行侵蚀和腐化</p>
<p>根本原因在于，中国的崛起不但使得中国自己成了美国无法收割的对象，并且使得美国以往的对其他国家的收割组合拳效果大打折扣</p>
<p>中国首先保证了自己不被美国收割，然后通过持有大量的美元外汇储备，在美国收割他国的时候，向美国“收一道税”，具体表现为使用自己的巨额外汇储备在美国制造了“危机”后，和美国人一道低价收购资产（包括不限于油田的开发权，竞标基础设施建设，或者只是收购一些资源，或者参与重建或者投资）</p>
<p>这就等于，对美国来说，回到手里的只有美元而非财富，只有通胀而非实际的好处。他称之为对美国的“寄生”。</p>
<p>但这种趋势在08年以前并没有让美国人警惕，或者说，并没有让美国人疼到警惕</p>
<p>转折点在2008年、经济危机使美国的力量受损，根据以往，美国需要找一个对象输出危机并且收割财富。中国毫无疑问不可能，但美国发现不但是中国不可能，连带对其他国家，也收不到多少好处了。</p>
<p>原来在于中国从改革开放起就在积累实力，在2008年美国受损的实力和中国自身一直没有停下来的实力积累，到达了一个微妙的引爆点</p>
<p>我不知道你们中国人的看法，但在2008年后，中国的国有企业和基础设施建设，忽然在影响力和等级上都提高了一个级别。中国忽然对推动人民币国际化和输出产能开始关注，在几年后更是推出了一带一路计划</p>
<p>从2008年后，美国发现一个事实，使用以往的收割手段，不但是有没有利益的问题，而是可不可以回本的问题。</p>
<p>原因在于，以往，在认为制造资产价格波动后，能以美元低价收购优质资产并且回收流动性，虽然被中国截留一部分，但绝大部分收益仍然是美国的。</p>
<p>但08年后，大部分收益居然被中国收取了。</p>
<p>原来在于，08年以后大量的货币互换协议与一带一路计划以及中国开设的诸多国际融资通道（中国主导的），以非洲为例，中国改变了以往直接使用美元收购资源或者资产的方式，向部分第三世界国家提出，以工业制品和基础设施折算美元，另一国以本国优质资产的期权折算美元，达成交易。</p>
<p>双方仅仅是声称使用了美元，实际而言一美分都没有流动</p>
<p>结果在美国制造了各种地区冲突与危机以后，中国以这种方式介入，它不但是被截留了收益的问题，甚至可能没有收益。例如伊拉克，中国以基建和产品出价，伊拉克以基建收益的期权或者其他资产的期权抵押，达成交易。这中间仅仅是物资的流动，美国无法在其中以美元收割任何收益。并且中国还有自己的资金渠道（昆仑银行等等）</p>
<p>美国人终于发现，以往中国人只是用吸管唑一口，以前或者是九一分，四六分，现在可能是三七分，中国七，美国三，甚至有时候美国人还要赔本</p>
<p>这是挑战了现在美国的根基</p>
<p>布雷顿解体以来，美国为了更好地收割，几乎改变了它的国家形态与政治观念，构建了美国自己的全球体系，苏联解体还加剧了这一趋势，一切都是为了更好地使得资本流通，方便美国收割利益，包括去工业化与让金融业高度繁荣。他的国家为全球化而改变，他的观念也为全球化而改变，现在的美国已经不是1939年那个美利坚了</p>
<p>为了构建和维持这个全球体系，美国付出了巨额的成本，不得不维持超高的军费和巨额的贸易逆差，但只要可以收割下去，那么美国的贸易逆差和高额军费都是值得的，都能得到超额回报</p>
<p>但现在而言，美国付出了成本，消费了影响力，却得不到相应的收益了，钱你出，恶人你做，桃子我摘</p>
<p>为了压制俄罗斯，持续压低国际油价，并且早年在中东干涉抬高了国际油价，使得自己的一票国内石油公司为了赚更多的钱，开采石油的技术研发上升了一个台阶，甚至使得美国自身因为页岩油的开发都变成了产油国</p>
<p>也就是说，美国现在已经无法以制造地区紧张局势然后以石油美元得到很高的收益了，而且哪怕真的抬高油价，也不过是为了俄罗斯输血，甚至拉丁美洲的委内瑞拉这些国家也会压制不住</p>
<p>然后低价收购优质资产呢?就拿伊朗举例，美国能够战胜伊朗吗?毫无疑问。</p>
<p>但如果在要伊朗扶持一个亲美政权，比如扶持逊尼派政府，需要美国大量输血，否则，塔利班就是例子，新政府如果没有美国的持续输血毫无疑问坐不稳政权，但如果持续输出，一个阿富汗加伊拉克就差点把全盛的美国放干，以现在联邦政府而言，伊朗那么大的地方维持一个亲美政权，是天方夜谭</p>
<p>而且先不说一个被战争摧毁的国家到底有没有所谓的“优质资产”，哪怕有，新的政府为了战后重建，也会拍卖优质资产，然后拍卖优质资产为了什么?还是为了筹集资金以进行战后重建</p>
<p>那么中国可以直接以基建出价，新政府用资产期权抵押，有美国人是什么事情?</p>
<p>铁路，电力，通信网，公路，为了收割全世界而自己去工业化的美国在这些基建领域已经完全无法与中国竞争了，哪怕尖端技术仍有优势，但缺乏市场也缺乏资金的联邦政府已经没有逆转这个趋势的能力了</p>
<p>联邦政府已经没钱了，这是个显而易见的事实，而对大国而言，调头是一件困难的事情，如果能轻易改变生存方式或者社会制度，那么苏联也不用解体了，这也就是为什么美国必须着手直接的，有力的，实质性的开始打击中国</p>
<p>中国以这种方式活着一天，美国的全球体系都有解体的风险，联邦政府的财政收入已经发岌可危，然而不得不花的支出确是年年高攀</p>
<p>再加上美国每年所创造的财富，到底有多少进了私人的口袋，有多少进入联邦政府的国库，是要打一个疑问的，以往增量时期无关紧要，在08年至今美国进入消耗存量时期，种种以往的社会问题都会日渐尖锐</p>
<p>如果美国抛弃的它的全球体系回归门罗主义也是一条道路，但教授对此持悲观态度，国家体制和社会与观念剧变，是催生混乱与内战的最好温床，如果大国转向如此容易，苏联也不用亡国了</p>
<p>所以他觉得贸易战本质上是中国对美国的战略进攻，无论是不是美国主动挑起，其实都是中国在逼迫美国做出的战略抉择，美国对于发动贸易战并没有必胜的把握，甚至把握有没有超过一半也很难说，但它仍然不得不去赌这个一半一半，这对于国家战略的选择而言，无疑是最糟糕的情况</p>
<p>看似有选择，实际上没有，因为只有糟糕和更糟糕的区别。如果不解决中国问题，美国哪怕找到再多的钱包，也填不饱自己的肚子，甚至会越来越饿。加州高铁项目的失败证明了美国目前社会运行的成本极高，金融和法律障碍认为的拉高了整个社会的运行成本，对华贸易战风险极大，但联邦政府已经别无选择。</p>
<p>以上都是交流时候提到的，当然我用自己话翻译了，不过真是收益良多。</p>
<p>2019-09-08 23:28</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：分享一下我用的系统相关软件</title>
    <url>/2024/02/21/%E6%9D%82%E8%B0%88%EF%BC%9A%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E6%88%91%E7%94%A8%E7%9A%84%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>如题，分享（记录一下我使用的系统相关软件）</p>
<h2 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a>火绒</h2><p>火绒是我用来挂在后台的杀毒软件，还算是能用就是了。有的时候也会对在网络上下载的文件进行杀毒预防一下。</p>
<h2 id="Glary-Utilities"><a href="#Glary-Utilities" class="headerlink" title="Glary Utilities"></a>Glary Utilities</h2><p>Glary Utilities是一款功能强大的软件，尤其是在Glary Utilities 6之后ui界面得到了极大的改善。</p>
<p>其里面有十分丰富的功能，但是我一般比较常用的就是分析磁盘文件占用情况以清理不需要的大文件。</p>
<h3 id="分析磁盘文件占用"><a href="#分析磁盘文件占用" class="headerlink" title="分析磁盘文件占用"></a>分析磁盘文件占用</h3><p>Glary会自动扫描指定文件，然后展示每一个文件/文件夹所占用的当前文件所有文件的百分比，通过这个功能我们能快速锁定占用内存的罪魁祸首，从而对其实现精准打击。</p>
<h2 id="CCleaner-Professional"><a href="#CCleaner-Professional" class="headerlink" title="CCleaner Professional"></a>CCleaner Professional</h2><p>CCleaner也有比较丰富的功能，其中比较强大的主要是其中的注册表清理以及驱动更新。</p>
<p><a href="https://www.bilibili.com/read/cv20920694/">CCleaner-pro（提供最新的破解方法） - 哔哩哔哩 (bilibili.com)</a></p>
<h3 id="驱动更新"><a href="#驱动更新" class="headerlink" title="驱动更新"></a>驱动更新</h3><p>我之前在网络上找我的网络适配器的最新驱动更新没有找到……然后cc直接给我扫描了一下一键装好了。</p>
<h3 id="注册表清理功能"><a href="#注册表清理功能" class="headerlink" title="注册表清理功能"></a>注册表清理功能</h3><p>ccleaner的注册表清理功能也很强大，面对无效的文件格式，可以一键将其清理</p>
<blockquote>
<p>比如bandzip会自动抢占.zip的默认打开方式，当你将bandzip默认打开取消掉之后，每次启动.zip都会询问要以何种方式打开，并且无法选择默认打开，只能选择仅一次。</p>
<p>当然，你也可以手动将其在【默认应用】那里重新赋值，但是十分麻烦，因为压缩包的格式挺多的</p>
</blockquote>
<h2 id="Dism"><a href="#Dism" class="headerlink" title="Dism++"></a>Dism++</h2><p>dism++一般用来清理系统文件比较靠谱（但是同时也比较激进），它能更深层次地清理系统文件。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：键盘损坏的检修以及机械键盘结构的分析</title>
    <url>/2024/02/16/%E6%9D%82%E8%B0%88%EF%BC%9A%E9%94%AE%E7%9B%98%E6%8D%9F%E5%9D%8F%E7%9A%84%E6%A3%80%E4%BF%AE%E4%BB%A5%E5%8F%8A%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E7%BB%93%E6%9E%84%E7%9A%84%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>键盘]]</p>
<p>正如题目，在这里简单聊聊键盘损坏的检修以及机械键盘结构的分析。</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在昨天，本人发现机械键盘的反斜杠失灵了，在更换设备以及更换键盘之后锁定是键盘本身的问题。</p>
<p>遂将键盘拆开来分析了一下机械键盘出问题的地方，在这里记录一下。</p>
<p>更为详细的内容可以参考：<a href="https://zhuanlan.zhihu.com/p/133532919">聊聊机械键盘的结构。 - 知乎 (zhihu.com)</a></p>
<h2 id="键盘损坏的检修"><a href="#键盘损坏的检修" class="headerlink" title="键盘损坏的检修"></a>键盘损坏的检修</h2><h3 id="排查是否是电脑本身的问题"><a href="#排查是否是电脑本身的问题" class="headerlink" title="排查是否是电脑本身的问题"></a>排查是否是电脑本身的问题</h3><p>键盘损坏无非就是要么是电脑的驱动出了问题或者是该按键被应用占用了，优先排除电脑本身的问题。当有其他设备的时候，直接将键盘连接到其他设备上就知道是不是电脑的问题了，但是有的时候身边并没有其他设备，这个时候可以使用openArk来查询。</p>
<p>openArk可以查询所有的快捷键占用情况，当然，它还有许多其他的功能，但是我并不熟悉。</p>
<h3 id="排查键盘的驱动"><a href="#排查键盘的驱动" class="headerlink" title="排查键盘的驱动"></a>排查键盘的驱动</h3><p>有的键盘是可以添加配置设置的。当键盘配置不正确可能会导致键盘失灵的问题，这个时候需要尝试将键盘的配置重置为默认配置即可。</p>
<h3 id="键盘设备的问题"><a href="#键盘设备的问题" class="headerlink" title="键盘设备的问题"></a>键盘设备的问题</h3><p>如果上述操作后，键盘仍然没有恢复正常的话，那就需要考虑是键盘设备的问题了。键盘设备的问题可以通过了解键盘的构造来了解，具体在下面键盘构造讲解。</p>
<h2 id="键盘结构"><a href="#键盘结构" class="headerlink" title="键盘结构"></a>键盘结构</h2><p>本人键盘的结构为Bottom mount，即只有Plate被固定在盒体上，PCB和键轴为插栓结构固定在Plate上。</p>
<p><img src="https://s1.imagehub.cc/images/2024/02/16/c026784cb092d7f463db9ca305e2b124.png" alt="c026784cb092d7f463db9ca305e2b124.png"></p>
<p>检查是键盘哪个部位的问题，可以按照以下步骤尝试：</p>
<ol>
<li>直接短接PCB上面的开关，观察是否触发按键。如果没触发，恭喜你就是PCB有问题，这种问题很难自己修好……很不巧的是，我就是这种故障</li>
<li>PCB正常，检查是否是键轴的问题。通过更换键轴就能够很方便地检修。</li>
</ol>
<p>以上两步就能够检查出到底是哪里得问题了。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>设备</tag>
        <tag>键盘</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：耳机发烧</title>
    <url>/2024/02/17/%E6%9D%82%E8%B0%88%EF%BC%9A%E8%80%B3%E6%9C%BA%E5%8F%91%E7%83%A7/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>耳机]]</p>
<p>如果你的耳机在百元以下（蓝牙不清楚，不考虑蓝牙耳机），那么首推一定是换有线耳机，大约价格在500上下就可以，(300到700左右），选择国产的耳机性价比高，基本可以获得前80%的体验。</p>
<p>再者，如果经常用手机或者平板听歌，请买一个解码器，注意，是带芯片的解码器，价格在50到100之间就可以，太便宜的容易坏。如果以上耳机加解码器都有了，听音乐就已经完成90%了。</p>
<p>剩下的无损音频，加上四位数的耳机，还有几百上千的解码器都是在提升剩下的10%。总体下来 耳机十解码器一共在500元上下，就可以达到一个比较理想的音质了。50以下到几百的耳机提升真的很明显，50的耳机几乎没什么声场，解析力还差。</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>设备</tag>
        <tag>耳机</tag>
      </tags>
  </entry>
  <entry>
    <title>桌游：动物园</title>
    <url>/2024/01/27/%E6%A1%8C%E6%B8%B8%EF%BC%9A%E5%8A%A8%E7%89%A9%E5%9B%AD/</url>
    <content><![CDATA[<p>[[___游戏体验日记]]</p>
<p>昨天和王仁喆一起去桌游店去体验了一款重策，名字叫做<strong>方舟动物园</strong></p>
<p>总体来说，游戏给我带来的体验较为良好，整体游戏的设计较为良好</p>
<p>我并不想过多复杂的介绍它的具体规则，这里挑几个我认为比较有讨论性的点进行分析。</p>
<span id="more"></span>
<h3 id="一、轮转指令强度"><a href="#一、轮转指令强度" class="headerlink" title="一、轮转指令强度"></a>一、轮转指令强度</h3><h4 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h4><p>每名玩家有五种指令手牌，手牌会按照一定顺序放在不同强度的下面，每一回合玩家可以选择下面几种执行方式：</p>
<ol>
<li>执行其中的一张指令牌，根据上面的手牌内容以及牌所在的强度执行对应的指令，执行之后，将牌放至指令牌队列末尾</li>
<li>不执行指令牌，而是选择一张指令牌，将其安置在队列末尾，之后，你可以获得一个加急小道具，加急小道具可以在执行指令的时候使其强度+1</li>
</ol>
<p>五种卡牌依次为：</p>
<ol>
<li>生物：召唤出生物，生物的点数不能超过</li>
</ol>
<p>这是一个十分简单的规则，就是玩家的五种指令牌会排排队，使用完之后强度会掉。但是就是这样的一个简单的机制，却构成了驱动玩家的核心决策机制。</p>
<h4 id="2-优点"><a href="#2-优点" class="headerlink" title="2.优点"></a>2.优点</h4><p>首先这是一个完全可控的机制，而且玩家的决策在其中占据很核心的地位</p>
<p>其次，你的选择会相互制约，比如说为了最大的收益，我们希望在强度足够大的情况之下执行指令。但是每次执行玩指令就会再次将其放置到队尾。</p>
<p>这样的话就相当于变相的让玩家选择多种指令轮流执行来使得我最想要的指令重新排到队列的首位，同时在我无法执行的指令排到了强度是5的位置的时候，我就不得不去选择不执行指令牌而是将其放至到对位从而避免我想要的牌被卡到后面。</p>
<h4 id="3-缺点"><a href="#3-缺点" class="headerlink" title="3.缺点"></a>3.缺点</h4><p>尽管游戏中有这样的优秀的设计，但是似乎设计者并没有在这个机制上下太大的功夫。</p>
<p>游戏中操作指令轮换的方式过于单一了，仅仅只有几种动物可以供你选择以更改指令的顺序。</p>
<p>而且在每回合只能选择一个指令移动给人带来的体验并不是十分友好，尤其是前期，实际上你的手牌常常会有价格十分高而打不出去的牌，这个时候，这些牌就会显得十分的麻烦。</p>
<p>如果说要我来将游戏进一步的优化，我会选择做出以下的更改：</p>
<ol>
<li>放弃执行除了将牌放在末尾以外，只会给予一张加急道具，我认为<strong>改为两张比较合适</strong>。玩家放弃执行应该只是作为一个策略，而不应该是作为惩罚。</li>
<li>将<strong>同时使用加急道具的数量</strong>改为2以限制过多的加急道具的使用。</li>
<li>增加可以操纵顺序的动物的卡牌的数目</li>
<li>将卡牌分级，高级的卡牌需要升级动物园（达到一定的动物保护等级或者达到一定的科研水平或者达到一定的占地），这样既避免了前期高价动物牌无法打出的问题，也使得玩家需要在推进当前发展还是选择升级别的方面进行抉择。</li>
</ol>
<h3 id="二、地块系统"><a href="#二、地块系统" class="headerlink" title="二、地块系统"></a>二、地块系统</h3><p>游戏中拥有 地块的系统，玩家需要利用拼图的图块来获取地块上面的资源以及建设可以安置动物的地块</p>
<p>本来这套系统按理来说应该是挺有意思的，但是存在着一个问题，那就是收益太低了。</p>
<p>收费亭前期需要布置地块+安置动物才能收到零零星星几块钱，显然这是十分不合算的。</p>
<p>在这样的一个前提条件之下，我们每回合甚至不需要入住动物，而是想办法将地块给铺过去以获得地图上的资源。</p>
<p>实际上游戏应该进一步权衡以下，到底是布置收费亭和安置动物给予我的收益高还是直接铺地，直接前期拼发展速度的收益高。我认为按理来说应该是前者，因为前者需要的条件更为复杂。</p>
<h3 id="三、科技树"><a href="#三、科技树" class="headerlink" title="三、科技树"></a>三、科技树</h3><p>实际上科技树也是常见的游戏设计之一，当你达成了某些指标之后，你可以在游戏内选择一项专场加点，而加点次数是相对来说较为珍惜且对玩家影响较大的，这就使得玩家需要十分小心的控制自己的科技树的走向。</p>
<p>同时这也满足增加决策点的两个要素：</p>
<ol>
<li>完全可控</li>
<li>对结果/走向影响显著</li>
</ol>
<h3 id="四、动物-赞助商牌"><a href="#四、动物-赞助商牌" class="headerlink" title="四、动物/赞助商牌"></a>四、动物/赞助商牌</h3><p>游戏中有十分丰富的动物/赞助商牌，这些牌之间可以相互联动，有的有十分特殊的技能。</p>
<p>这些牌在一定程度上增加了游戏的趣味性，但是同时也使得游戏的策略意味没有那么浓厚。</p>
<p>增加牌的多样性可以增加游戏的趣味性这一点毋庸置疑，但是需要注意的一点就是有的时候，我获胜或否就很大一部分取决于我是否能拿到合适的牌，而这一点的随机性又在牌的多样性的背景之下被无限放大。</p>
<p>对于萌新来说，尤为严重。玩家甚至不知道有哪些是可以构筑出的组合，以及组合的构建难度。这就使得游玩过程中挺大一部分还需要看运气。</p>
<hr>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
      </tags>
  </entry>
  <entry>
    <title>灵感：桌游中的战争迷雾</title>
    <url>/2023/12/24/%E7%81%B5%E6%84%9F%EF%BC%9A%E6%A1%8C%E6%B8%B8%E4%B8%AD%E7%9A%84%E6%88%98%E4%BA%89%E8%BF%B7%E9%9B%BE/</url>
    <content><![CDATA[<p>[[___未完成]]</p>
<p><strong>“战争迷雾”</strong>理论最早由普鲁士将军克劳塞维茨于19世纪早期在他的《战争论》一书中提出，指的是军事行动所根据的因素总有四分之三隐藏在迷雾之中，充满了不确定性。</p>
<p><img src="https://i0.hdslb.com/bfs/article/c13d02c8c4ce96e7ef2c0a244e804f04f285423b.jpg@1256w_812h_!web-article-pic.avif" alt></p>
<p>1896年，一本名为《战争迷雾》的书籍出版，正式确立了这个特殊的词组，用来指军事行动的参与者身处战场环境时所感受到的不确定性。</p>
<p>而玩家们熟悉战争迷雾这个词，基本都来自于电子游戏。1977年的回合制策略游戏《帝国》，首次使用了战争迷雾系统，之后《沙丘》《星际争霸》《魔兽争霸》《英雄联盟》等众多RTS、SLG及MOBA游戏中，都加入了类战争迷雾机制。</p>
<p><img src="https://i0.hdslb.com/bfs/article/246915684ada1d808abdb044c4a8bce6429feb95.png@1256w_784h_!web-article-pic.avif" alt></p>
<p>电子游戏通过程序，可以完美地实现战争迷雾机制，并对此进行各种贴合玩法的调整和改良。</p>
<p>那么，在大家面对面在同一张版图上行动的桌游中，又该如何来实现更真实的战争迷雾呢？</p>
<span id="more"></span>
<h1 id="隐藏单位信息"><a href="#隐藏单位信息" class="headerlink" title="隐藏单位信息"></a><strong>隐藏单位信息</strong></h1><p>在战棋游戏中，将棋子暗扣隐藏信息，是一种最直接的在一定程度上实现战争迷雾的方法。比如我们小时候玩的四国军棋暗棋模式，在棋子揭示前无法得知对手暗扣了什么棋子。一些大型的战棋游戏也会采用棋子信息面朝向自己的方式，来让对手无法察觉自己的兵力部署。</p>
<p><img src="https://i0.hdslb.com/bfs/article/1a137efbf220f2a9535d8d65e7dca702b634ad31.png@1256w_842h_!web-article-pic.avif" alt></p>
<p>不过，这种方式和一般认知上的战争迷雾还是有差别，因为双方还是能够看到对手的棋子布置和动向，而且战争迷雾一般是可以用侦查来驱除迷雾获得信息的，但这种方式则完全用不到侦查，在交锋前无从开展情报工作。</p>
<p>在隐藏单位信息方式上，不少桌游也做出了一些努力，力求更真实地实现战争迷雾的效果。比如桌游《火力战》的高级规则中，就包含了很多关于隐藏信息打造战争迷雾的机制。</p>
<p><img src="https://i0.hdslb.com/bfs/article/efd62b263f99231c3fe1affc6a73bd01a82ac5a9.png@1256w_1022h_!web-article-pic.avif" alt></p>
<p>游戏规则中，没有被发现的作战单位是背面朝上的，当其进行了射击或者移动到了对方的视野范围内，再依据地形和目标类型，才会判定是否翻面显示信息。不过，被发现后玩家还能够离开对方视野或者消灭掉发现自己的单位来重新隐蔽。</p>
<p>在此基础上，还可以设置一些假的单位即“疑兵”来迷惑对手、发射烟幕弹来阻挡对手视野、提前秘密写好地雷位置、当对手单位移动到版图对应位置就会踩雷等。</p>
<p><img src="https://i0.hdslb.com/bfs/article/721887f7032045fa372c86f448f9090031800345.jpg@1256w_1118h_!web-article-pic.avif" alt></p>
<p>在SPI的现代战争II系列兵棋中则加入了一种特殊的作战单位，其在战斗前只显示机动值，战斗时才会翻面战斗值。而且更有趣的是，即使是玩家本人也无法知道这些单位的实际战斗力。这或许体现战争迷雾在军事上原本的意义，即对于本方部队也可能会信息失真，但对于操控和配合来说还是过于艰难。</p>
<p><img src="https://i0.hdslb.com/bfs/article/e1d2181a7c4dc1b100baeda1c2ff2f8d082c943b.png@1256w_880h_!web-article-pic.avif" alt></p>
<p>桌游《Infinity》在作战单位信息隐藏的设定上也相当有新意，游戏会提供给对手一张“公开军表”，同时自己则会有一张“里军表”。</p>
<p>区别就在于里军表中包含有公开军表中的秘密单位，这些单位有的可以用指示物来代替棋子让对手猜测，有的可以自己拍照后再移除视作存在单位，从而不让对手看到其在场上的信息，有的还可以用其他模型来进行伪装。</p>
<p><img src="https://i0.hdslb.com/bfs/article/867af33ed58f64378c069af976ba7a2df0fc7746.jpg@1256w_708h_!web-article-pic.avif" alt></p>
<h1 id="掩盖真实意图"><a href="#掩盖真实意图" class="headerlink" title="掩盖真实意图"></a><strong>掩盖真实意图</strong></h1><p>借助机制不透露自己的真实动向，同样是利用信息不透明来实现战争迷雾的一种方式，一般和隐藏单位信息配合使用。</p>
<p>最常见的就是提前做出部署，但不让对手知道，在揭晓之前都可以隐藏自己的真实战略意图。</p>
<p>依然是《火力战》的高级规则，其中包括一个“激光制导炮弹”的规则，可以声明要炮击一个目标，但不会让对手知道是哪个目标。然后回合结束时如果自己提前确定的目标还在那个区域，就可成功命中造成大量伤害。</p>
<p><img src="https://i0.hdslb.com/bfs/article/cbb309a504070df44ef08a70242d3a47ab78400d.png@1256w_642h_!web-article-pic.avif" alt></p>
<p>桌游《海上大战》系列，玩家要提前规划好舰队的行动，但在版图上只有舰队标记，具体的行动是隐藏的并不会进行放置。只有当被侦测到，或者结算行动时才会展示。对于对手行动的猜测和判断，做出对应的规划和阻击战斗，就是游戏的魅力之一。</p>
<p><img src="https://i0.hdslb.com/bfs/article/ff6cd7b1ccdd36b6bcf7f5ca9a43027e3e300928.png@1256w_942h_!web-article-pic.avif" alt></p>
<p>桌游《战争迷雾》虽然拥有版图，但并没有用到会显示部队部署和行动的棋子，只有占领标识物。玩家不仅可通过暗扣卡牌来隐藏信息进行行动，同时还能在自己的操作轮上秘密创建一个在之后进行行动的操作，用以收集情报和虚张声势。种种创新且有趣的机制，无愧于其《战争迷雾》的大名。</p>
<p><img src="https://i0.hdslb.com/bfs/article/d26c1b213c4651d3fcba08074a2f1e2a2770ecdd.png@1256w_876h_!web-article-pic.avif" alt></p>
<p>《深海谍影》同样本身就是战争迷雾的体现，游戏设置了一道中央屏风作为遮挡，来让双方都无法看到对手的动向。</p>
<p>每个小队的四位成员船长、大副、通信兵以及工程兵各司其职，要获取信息，判断对手潜艇的位置，移动本方的潜艇，发射武器，目标是确定位置并成功击毁对手的潜艇。</p>
<p>在即时制规则下，不断移动的潜艇上，船员们在迷雾中借助种种手段斗智斗勇，十分紧张刺激。</p>
<p><img src="https://i0.hdslb.com/bfs/article/a404c795e23ce02e57878a17187449bb9d0bea14.jpg@1256w_696h_!web-article-pic.avif" alt></p>
<p>《德古拉之怒》中德古拉玩家要一人对抗几位猎人，因此他不像猎人那样将模型直接放在版图上，而是借助于“踪迹列”秘密放置地点卡牌来隐藏自己的移动路线，并可以用各种手段来干扰猎人的追踪。不过猎人移动的速度更快，一旦发现德古拉的踪迹就能够很快赶过去与之发生战斗。</p>
<p><img src="https://i0.hdslb.com/bfs/article/01549e9a29e6c9f102097f5d5cb603c758a797f1.png@1256w_942h_!web-article-pic.avif" alt></p>
<h1 id="特殊的迷雾机制"><a href="#特殊的迷雾机制" class="headerlink" title="特殊的迷雾机制"></a><strong>特殊的迷雾机制</strong></h1><p>还有一些桌游在运用“战争迷雾”时采用了比较特殊的方式，虽然和大家普遍认知上的战争迷雾有些不同，但也颇有意思。</p>
<p>比如主要以卡牌驱动的桌游《勇者无畏：诺曼底》，玩家可用的卡牌中有一种就叫做“战争迷雾”卡，这种卡的唯一用处就是卡手无法打出。除了正常的抽卡获得外，玩家还会因为对手的一些扰乱性的行动来给自己的手中加入战争迷雾卡，相应地玩家也能使用侦查兵来将这种废卡从手中移除。</p>
<p><img src="https://i0.hdslb.com/bfs/article/7a06670bb466c2ed1b3ee0c22214d1e4c5e20389.png@1256w_942h_!web-article-pic.avif" alt></p>
<p>因为战争迷雾在军事上的本意就是作战时的不确定性，那么不管是和自己的部队失联，还是不清楚对手动向，都会造成无法发出有效指令的情况，加上和侦查和扰乱行动相结合，倒也合情合理。</p>
<p>如果不局限于对抗类桌游，那么战争迷雾机制在其他类型的桌游中也有所体现。比如经典合作类《第七大陆》的版图随机生成机制，起始除了玩家所处的区域，其他都由迷雾笼罩，玩家必须进行探索，才能抽取地形卡来驱散迷雾拼出完整的版图，不同的探索方向，事件不同的抉择，都会影响版图的生成和最终的结局。</p>
<p><img src="https://i0.hdslb.com/bfs/article/5118a28183a3699c343588ef2072ee27af426d8c.png@1256w_942h_!web-article-pic.avif" alt></p>
<p>类似的还有克苏鲁主题的《疯狂诡宅》，同样是通过探索并借助APP来不断拼出版图，同时还要放置各种指示物。在黑暗笼罩的古堡内进行调查，各种突发情况都有可能发生，十分具有代入感。</p>
<p><img src="https://i0.hdslb.com/bfs/article/4abbd745bb44c7ff025dd1e69eece89117a4196e.png@1256w_708h_!web-article-pic.avif" alt></p>
<h1 id="借助裁判"><a href="#借助裁判" class="headerlink" title="借助裁判"></a><strong>借助裁判</strong></h1><p>如果要如同电子RTS游戏那样，实现迷雾存在情况下长时间无法获取对手行动信息的机制，那么就要借助于裁判了。</p>
<p>兵棋推演中的“双盲”就是这样一种形式，在“双盲”模式下，对战的双方无法看到主地图，不管是对地图地形的摸索，还是对作战单位下达指令，都需要通过裁判告知。当对方的作战单位进入了本方的视野范围内，裁判也会告知对方单位的信息，依据距离和其中判定规则，信息可能清楚，也可能比较模糊。玩家战斗后的结果，也基本由裁判进行判定并通知双方。</p>
<p><img src="https://i0.hdslb.com/bfs/article/5047cf35f4ca0aa83f4a933382b719b402dd3d8c.png@1256w_942h_!web-article-pic.avif" alt></p>
<p>这种模式对于对战双方和裁判，都是一个较大的专业性的考验，但确实更加贴近真实战争迷雾之下的战斗模拟。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h1><p>总体而言，受限于载体，桌游要像电子游戏那般实现完美的战争迷雾模拟是不现实的。不过，得益于设计师们的精妙设计，还是在不借助裁判和防止作弊的前提下，做到了信息的隐藏与侦查，行动的预判与针对。如果你对桌游中的战争迷雾系统感兴趣，不妨挑以上这些游戏练练手~</p>
]]></content>
      <tags>
        <tag>游戏设计</tag>
      </tags>
  </entry>
  <entry>
    <title>网络技术：判断是资源设备还是通讯设备</title>
    <url>/2024/02/26/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF%EF%BC%9A%E5%88%A4%E6%96%AD%E6%98%AF%E8%B5%84%E6%BA%90%E8%AE%BE%E5%A4%87%E8%BF%98%E6%98%AF%E9%80%9A%E8%AE%AF%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<p>[[___网络技术]]</p>
<p>判断这个有一个技巧就是以网卡为分界线</p>
<ul>
<li>网卡以外（包括网卡）就是<strong>网络信息设备</strong>（用于处理网络中信息的传递）</li>
<li>网卡以内（比如软件）就是<strong>网络资源设备</strong>（用于处理网络所存储的信息）</li>
</ul>
]]></content>
      <tags>
        <tag>网络技术</tag>
      </tags>
  </entry>
  <entry>
    <title>答辩PPT制作要领</title>
    <url>/2024/02/28/%E7%AD%94%E8%BE%A9PPT%E5%88%B6%E4%BD%9C%E8%A6%81%E9%A2%86/</url>
    <content><![CDATA[<p>[[<strong>_效率工具]]<br>[[_</strong>大学]]</p>
<p>[[___未完成]]</p>
<h2 id="答辩论文ppt制作指南"><a href="#答辩论文ppt制作指南" class="headerlink" title="答辩论文ppt制作指南"></a>答辩论文ppt制作指南</h2><h2 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h2><h3 id="简洁大方"><a href="#简洁大方" class="headerlink" title="简洁大方"></a>简洁大方</h3><h3 id="校徽配色"><a href="#校徽配色" class="headerlink" title="校徽配色"></a>校徽配色</h3><ul>
<li>华中科技大学</li>
</ul>
<pre><code>- 红色 e02e1e



- 蓝色 155da2
</code></pre><h3 id="字体颜色与背景颜色相反"><a href="#字体颜色与背景颜色相反" class="headerlink" title="字体颜色与背景颜色相反"></a>字体颜色与背景颜色相反</h3><h3 id="整体配色"><a href="#整体配色" class="headerlink" title="整体配色"></a>整体配色</h3><ul>
<li>一个主色</li>
</ul>
<ul>
<li>加黑白灰</li>
</ul>
<ul>
<li>背景建议使用白色</li>
</ul>
<h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><h3 id="分段处理"><a href="#分段处理" class="headerlink" title="分段处理"></a>分段处理</h3><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h3 id="分块"><a href="#分块" class="headerlink" title="分块"></a>分块</h3><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><h3 id="增加图表"><a href="#增加图表" class="headerlink" title="增加图表"></a>增加图表</h3><span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>效率工具</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>耳机选购2023-12-28</title>
    <url>/2023/12/28/%E8%80%B3%E6%9C%BA%E9%80%89%E8%B4%AD2023-12-28/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>耳机]]</p>
<h2 id="一、选购的契机"><a href="#一、选购的契机" class="headerlink" title="一、选购的契机"></a>一、选购的契机</h2><p>之前我是在刚开学的时候购置了一个头戴式耳机。型号是Haylou的S35</p>
<p>总体来说，使用体验还是很不错的，但是我还是觉得它的音质不是很好……</p>
<p>因为，</p>
<ul>
<li>一方面，在当初选购的时候我是直接听取了其他人的推荐进行的购买</li>
<li>另一方面，我在这段时间的使用过程中逐渐清楚了自己的需求……</li>
</ul>
<p>但是就在最近，我的头戴式的耳机的充电接口坏了，导致我无法使用蓝牙以及降噪功能，我只能将其作为有线耳机使用。<br>而我的音频线又十分的短，所以说很难说能够这样继续使用下去。</p>
<p>值得庆幸的是，店家支持一年内以换代修，但是他们家没有这个耳机的存货了，于是我可以直接申请原价退款。  </p>
<p>也就是因此，我得以有机会按照我现在的眼界以及对于自己需求的判定来进行耳机的重新选购。</p>
<span id="more"></span>
<h2 id="二、我自己的需求到底是什么"><a href="#二、我自己的需求到底是什么" class="headerlink" title="二、我自己的需求到底是什么"></a>二、我自己的需求到底是什么</h2><p>说白了，我基本上只有在站定的时候才会考虑去使用这个头戴式的耳机的。最常见的使用场景还是在寝室/自习室/图书馆才会使用……</p>
<p>在这些情况之下，我没必要去佩戴蓝牙的小耳机，因为长期佩戴那种耳塞式的耳机会导致我的耳朵比较难受……</p>
<p>另外我还可能会在睡眠的时候使用这个耳机，可能更多的是将其作为一个耳罩来使用……</p>
<p>综上，实际上我更需要注重的是这个耳机它的音质，至于降噪反而在其次。</p>
<p>然后就是我经常听的类型实际上是轻音乐与日本流行音乐，这类音乐对于低频的需求不是很高，而是最主要是中频和高频。这一点也需要被纳入考虑内容当中。  </p>
<p>音乐的成像也是挺重要的一个参数* 虽然说我还没有了解这个到底具体是指什么。但是就我大概对其的印象而言，应该是会影响耳机播放的声音具体在人脑中结成的位置。总而言之也是一个挺重要的影响因素。</p>
<h2 id="三、比较各个品牌"><a href="#三、比较各个品牌" class="headerlink" title="三、比较各个品牌"></a>三、比较各个品牌</h2><h3 id="1-选择型号"><a href="#1-选择型号" class="headerlink" title="1.选择型号"></a>1.选择型号</h3><p>主观的比较总是会出现误差，量化的指标更加容易进行评价。</p>
<p>这里需要感谢这个网站 <a href="https://www.rtings.com/">Reviews and Ratings - RTINGS.com</a>  </p>
<p>这个网站里面对于几乎所有在国际市场上较为主流的耳机型号都进行了标准化的指标测量，所以说我们可以拥有一个客观的数据对自己所需要的型号进行选择。</p>
<p>我按照自己的需求，选择了几项较为重要的指标进行评价，并且最终得到他们的加权分数和性价比。</p>
<p>（说起来我发现excel中居然可以进行矩阵的运算，真是神奇，这样的话我只需要将系数和对应的评分按照 ： {k1,k2,k3,k4} * {x1,x2,x3,x4}^T 就可以了，我之前都是手动一个个乘以系数的QAQ）</p>
<p>下面是我对比的表格：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
<td></td>
<td>参数的系数</td>
<td>1.2</td>
<td>0.8</td>
<td>1.2</td>
<td>1</td>
<td>1.3</td>
<td>0.8</td>
<td>0.6</td>
<td>3</td>
<td>-0.01</td>
<td>0</td>
<td>50</td>
<td>0.5</td>
<td>7</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>品牌</td>
<td>型号</td>
<td>价格</td>
<td>参数</td>
<td>声音还原程度</td>
<td>低音</td>
<td>中等精度</td>
<td>高音准确度</td>
<td>成像</td>
<td>被动声场</td>
<td>虚拟声场</td>
<td>降噪</td>
<td>无线延时</td>
<td>无线</td>
<td>有线</td>
<td>应用支持</td>
<td>多设备连接</td>
<td>end</td>
<td>总分</td>
<td>性价比</td>
</tr>
<tr>
<td>索尼</td>
<td>WH-1000XM2型</td>
<td>550</td>
<td></td>
<td>8</td>
<td>8</td>
<td>7.8</td>
<td>8.4</td>
<td>8.7</td>
<td>3.9</td>
<td>6.4</td>
<td>9.1</td>
<td>304</td>
<td>0</td>
<td>0</td>
<td>8.5</td>
<td>1</td>
<td>虚拟声场+更好的app支持</td>
<td>87.54</td>
<td>0.159163636</td>
</tr>
<tr>
<td>声阔</td>
<td>Q30</td>
<td>320</td>
<td></td>
<td>6.9</td>
<td>4.9</td>
<td>8.2</td>
<td>7.2</td>
<td>6.1</td>
<td>4.9</td>
<td>0</td>
<td>9.1</td>
<td>206</td>
<td>0</td>
<td>0</td>
<td>7.5</td>
<td>2</td>
<td></td>
<td>84.08</td>
<td>0.26275</td>
</tr>
<tr>
<td>声阔</td>
<td>Q35</td>
<td>440</td>
<td></td>
<td>6.8</td>
<td>6.7</td>
<td>9.1</td>
<td>6.6</td>
<td>7.6</td>
<td>5.1</td>
<td>0</td>
<td>8.2</td>
<td>206</td>
<td>0</td>
<td>0</td>
<td>7.5</td>
<td>2</td>
<td></td>
<td>85.29</td>
<td>0.193840909</td>
</tr>
<tr>
<td>声阔</td>
<td>Q45</td>
<td>450</td>
<td></td>
<td>7.7</td>
<td>7.4</td>
<td>7.1</td>
<td>6.9</td>
<td>8.7</td>
<td>3.6</td>
<td>0</td>
<td>9.2</td>
<td>214</td>
<td>0</td>
<td>0</td>
<td>7.5</td>
<td>2</td>
<td></td>
<td>87.98</td>
<td>0.195511111</td>
</tr>
<tr>
<td>索尼</td>
<td>WH-1000XM3型</td>
<td>770</td>
<td></td>
<td>8.3</td>
<td>7.2</td>
<td>9.4</td>
<td>7.9</td>
<td>7.8</td>
<td>3.7</td>
<td>6.4</td>
<td>9.8</td>
<td>225</td>
<td>0</td>
<td>0</td>
<td>8.5</td>
<td>1</td>
<td>虚拟声场+更好的app支持</td>
<td>90.24</td>
<td>0.117194805</td>
</tr>
<tr>
<td>声阔</td>
<td>Q20</td>
<td>200</td>
<td></td>
<td>6.8</td>
<td>5.4</td>
<td>8.5</td>
<td>7.4</td>
<td>8.4</td>
<td>4.5</td>
<td>0</td>
<td>7.6</td>
<td>362</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td></td>
<td>70.78</td>
<td>0.3539</td>
</tr>
<tr>
<td></td>
<td>S1</td>
<td>500</td>
<td></td>
<td>6.5</td>
<td>8.6</td>
<td>6.6</td>
<td>6</td>
<td>8.5</td>
<td>4.8</td>
<td>0</td>
<td>7.5</td>
<td>275</td>
<td>0</td>
<td>0</td>
<td>7.5</td>
<td>2</td>
<td></td>
<td>80.99</td>
<td>0.16198</td>
</tr>
</tbody>
</table>
</div>
<h3 id="2-声阔Q35-的声音"><a href="#2-声阔Q35-的声音" class="headerlink" title="2.声阔Q35 的声音"></a>2.声阔Q35 的声音</h3><p>最终选择了soundcore的Q35，从数据上来看，q35的几项和声音有关的属性如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>品牌</th>
<th>型号</th>
<th>声音还原程度</th>
<th>低音</th>
<th>中等精度</th>
<th>高音准确度</th>
<th>成像</th>
<th>被动声场</th>
<th>虚拟声场</th>
</tr>
</thead>
<tbody>
<tr>
<td>声阔</td>
<td>Q35</td>
<td>6.8</td>
<td>6.7</td>
<td>9.1</td>
<td>6.6</td>
<td>7.6</td>
<td>5.1</td>
<td>0</td>
</tr>
</tbody>
</table>
</div>
<p>拥有<strong>较为优秀的的中频和高频精准度</strong>，虽然说低音较差，不过我本身就不怎么挺摇滚低音炮，所以说对我来说影响不是很大。</p>
<p>其实吧，如果真的要说性价的话，索尼的耳机的优势很明显，但是最终还是因为它<strong>只支持单设备</strong>连接和延时较高而被劝退了。<br>其实还有一点就是价格，我的基础预算是300，因为这个haylou也不过就是250的价格买的，我就是想买个同价位音质更好的而已，没必要让我的预算翻倍……</p>
<p>不过说起来，只支持单设备链接是否有点过于nt了……</p>
<h3 id="3-声阔Q35-的降噪"><a href="#3-声阔Q35-的降噪" class="headerlink" title="3.声阔Q35 的降噪"></a>3.声阔Q35 的降噪</h3><p>听说还是十分不错的……反正目前东西还没有到，但看数据而言是十分优秀的。</p>
<p>最终我以350的价格购买到了一个女大学生的99新的耳机，她说基本上只用过一两次。（这个价格基本上可以说是做慈善了……）</p>
<p>还去研究了一下，耳机线，这次买了个两米长的线，这下应该不用再担心线不够长了哈哈哈</p>
<hr>
<h2 id="四、耳机实际上耳体验"><a href="#四、耳机实际上耳体验" class="headerlink" title="四、耳机实际上耳体验"></a>四、耳机实际上耳体验</h2><p>音质确实和原本的相比要好上不少，降噪的效果也是不错的</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>脑叶公司：十分矛盾的底层设计</title>
    <url>/2024/02/06/%E8%84%91%E5%8F%B6%E5%85%AC%E5%8F%B8%EF%BC%9A%E5%8D%81%E5%88%86%E7%9F%9B%E7%9B%BE%E7%9A%84%E5%BA%95%E5%B1%82%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>[[<strong>_未完成]]<br>[[_</strong>]]</p>
<h3 id="脑叶公司：十分矛盾的底层设计"><a href="#脑叶公司：十分矛盾的底层设计" class="headerlink" title="脑叶公司：十分矛盾的底层设计"></a>脑叶公司：十分矛盾的底层设计</h3><span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>未完成</tag>
      </tags>
  </entry>
  <entry>
    <title>英语四级单词，词组，用法积累</title>
    <url>/2023/11/12/%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7%E5%8D%95%E8%AF%8D%EF%BC%8C%E8%AF%8D%E7%BB%84%EF%BC%8C%E7%94%A8%E6%B3%95%E7%A7%AF%E7%B4%AF/</url>
    <content><![CDATA[<p>[[<strong>_]]<br>[[_</strong>]]<br>[[___]]</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>Admonition插件使用手册</title>
    <url>/2023/12/03/2.Reference/Admonition%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<p>admonition是一款obsidian中的插件，可以支持更多类型的引用的生成，其中包含了很多的个性化生成，但是这对你来说无关紧要</p>
<p>详细信息可以取他们的官网查看<a href="https://plugins.javalent.com/admonitions/beginner/types">admontion使用指南</a> </p>
<span id="more"></span>
<h3 id="以下是一些示例"><a href="#以下是一些示例" class="headerlink" title="以下是一些示例"></a>以下是一些示例</h3><p>![[Pasted image 20231203091649.png]]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qwe</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">This is the content of the admonition tip.</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">asd</span><br></pre></td></tr></table></figure>
<p>总而言之更好看了www</p>
]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2023/11/22/2.Reference/GTD%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>志愿者服务平台</title>
    <url>/2023/11/28/2.Reference/%E5%BF%97%E6%84%BF%E8%80%85%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>[[___大学]] </p>
<h3 id="志愿者服务平台"><a href="#志愿者服务平台" class="headerlink" title="志愿者服务平台"></a>志愿者服务平台</h3><h4 id="1-网址："><a href="#1-网址：" class="headerlink" title="1.网址："></a>1.网址：</h4><p><a href="http://ihuster.hust.edu.cn:81/myvolunteeractivities">志愿者服务平台 </a></p>
<h4 id="2-功能："><a href="#2-功能：" class="headerlink" title="2.功能："></a>2.功能：</h4><p>生成档案，生成志愿工时记录证明</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩</title>
    <url>/2023/11/06/2.Reference/%E6%88%91%E9%99%A2%E5%B8%88%E7%94%9F%E5%9C%A8%E7%AC%AC%E5%8D%81%E5%85%AB%E5%B1%8A%E2%80%9C%E6%8C%91%E6%88%98%E6%9D%AF%E2%80%9D%E7%AB%9E%E8%B5%9B%E2%80%9C%E6%8F%AD%E6%A6%9C%E6%8C%82%E5%B8%85%E2%80%9D%E4%B8%93%E9%A1%B9%E8%B5%9B%E5%92%8C%E2%80%9C%E9%BB%91%E7%A7%91%E6%8A%80%E2%80%9D%E5%B1%95%E7%A4%BA%E6%B4%BB%E5%8A%A8%E4%B8%AD%E5%86%8D%E8%8E%B7%E4%BD%B3%E7%BB%A9/</url>
    <content><![CDATA[<p>[[___新闻]]</p>
<p>[[___大学]]</p>
<h4 id="2023-09-30"><a href="#2023-09-30" class="headerlink" title="2023-09-30"></a>2023-09-30</h4><h3 id="我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩"><a href="#我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩" class="headerlink" title="我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩"></a>我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩</h3><p>我院<strong>刘小涛老师</strong>参与指导的项目《航空发动机材料超高周荷载频率与疲劳寿命预测研究》获得了“揭榜挂帅”专项赛国家级特等奖。针对航空发动机叶片疲劳合格率及疲劳寿命不足等关键问题，该项目团队创新性提出了优化热加工、调控微观组织以及模型驱动精准表面强化的新方案。基于此，团队成功制备了合格率高且疲劳性能优异的航空发动机用钛合金叶片。项目研究所形成的方案不仅具有高效率，低成本，低能耗等显著优势，更为高寿命航空发动机钛合金的成形和叶片加工工艺的优化提供了坚实的科学指导与理论基础。</p>

<p style="display:none"> 

</p><p><img src="/2023/11/06/2/3.Source/img/我院师生在第十八届“挑战杯”竞赛“揭榜挂帅”专项赛和“黑科技”展示活动中再获佳绩-1.jpg" alt title="1"></p>
<span id="more"></span>
<p>（通讯员 岳天宇）近日，由共青团中央、中国科协、教育部、全国学联主办的第十八届“挑战杯”全国大学生课外学术科技作品竞赛“揭榜挂帅”专项赛和“黑科技”展示活动圆满落幕。我院师生团队在“揭榜挂帅”专项赛中获得国家级特等奖2项、二等奖1项，在“黑科技”展示活动中获得“行星”级作品1项、“卫星”级作品1项，再获佳绩！<br>“揭榜挂帅”专项赛国家级特等奖项目《钢铁生产长流程极致能效搜索方法与智能化系统》是由殷亚军老师、黄亮老师和河南科技大学王爱琴老师指导，宋迎晨、刘可卓、陈众、易文珏、廖迎凯、张有程、刘昊、朱汉逸、许晋昊和王才加尚等10名同学共同完成的。该项目基于重构的长流程钢铁生产能耗计算模型评估了不同极致能效技术对钢铁生产的影响，构建了一种针对长流程钢铁生产节能策略推荐的数学评估模型，并基于此开发了钢铁极致能效解决方案推荐系统，为企业进行节能技术的多维度分析评估和极致能效解决方案的科学推荐提供了一种可靠的判据。实现了长流程钢铁生产领域节能策略模型零的突破，有利于极致能效技术的推广和钢铁企业节能目标的实现，具有重大的理论指导价值和工程应用价值。</p>
<p>“揭榜挂帅”专项赛国家级二等奖项目《基于PTZ摄像机的高精度告警定位方法研究》是由董选普老师、刘鑫旺老师和曹华堂老师指导，周楚昊、李贝贝、蓝晟宁、王坤、尹正豪、郭笑宇和李嘉苗等7名同学共同完成的。该项目基于PTZ摄像机提出了一种针对周围区域明火实现高精度识别、定位和告警的方法。主要通过YOLOv7网络模型进行烟雾识别和监测，并使用DEM数据自动解析实际火源的地理位置。该方法对于告警目标具有极快的响应速度和较小的定位误差，有效预防森林火灾的产生和蔓延。</p>
<p>“黑科技”展示活动“行星”级作品《电化学芯片及综合测试表征系统的开发应用》是由刘友文老师和翟天佑老师指导，干晓娟、陈建强、高锐坚、杨镇鸿、王浩云、王晗、赵阳和邓瑶等8名同学共同完成的。该作品是一套具有变革性的、能对电化学基本物理化学规律实现精细探究的综合测试表征平台。本作品包含电化学芯片，高精度测试平台以及原位表征平台三个部分，能够精准地测试出微小结构的催化剂性能，同时对催化剂进行原位表征，深入探究电催化反应机理。该作品可以实现反应活性可视化、微区电化学性能测定、电化学反应动力学研究、异相电荷转移反应研究等功能。</p>
<p>“黑科技”展示活动“卫星”级作品《均匀激光3D打印复杂单晶涡轮叶片的装备设计与工艺研究》是由魏青松老师指导，张振武、戚磊一、郑可盈、袁以宁、许文贺、沈沐宇和高海瑞等7名同学共同完成的。本作品面向复杂单晶涡轮叶片制备的国家重要战略需求，围绕“聚焦光斑能量分布机制”、“熔池传热-传质机理”和“组织-高温性能调控规律”三个科学问题，采用“光学设计+算法开发+数值模拟+工艺优化”相结合的方法，在现有激光3D打印装备的基础上，改进光路系统和扫描算法，通过数值模拟和工艺试验获得晶粒定向生长的最优工艺参数，并成形出高50 mm的复杂结构涡轮叶片验证整体方案的可行性。</p>
<p>据悉，本届“揭榜挂帅”专项赛参赛学校学生提交近2000个作品项目，最终来自全国230余所高校的700余件作品入围终审。终审决出特等奖105个、一等奖122个、二等奖132个、三等奖140个，获“特等奖”的作品团队将进入后续举行的“擂台赛”，全力冲刺“竞榜”，争夺“擂主”。全国组委会同期举办“黑科技”展示活动，引领学生提出具有前瞻性、创新性、应用性的实物或技术。经过评审，全国共有99件作品评定为“星系”级作品、181件作品评定为“恒星”级作品、267件作品评定为“行星”级作品、330件作品评定为“卫星”级作品。</p>
]]></content>
      <tags>
        <tag>大学</tag>
        <tag>新闻</tag>
      </tags>
  </entry>
  <entry>
    <title>网易校招信息</title>
    <url>/2023/11/12/2.Reference/%E7%BD%91%E6%98%93%E6%A0%A1%E6%8B%9B%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>[[<strong>_新闻]]<br>[[_</strong>游戏策划]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;网易校招信息&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;网易&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;游戏策划&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;数值策划&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;岗位描述&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;在雷火，你可以：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[12,14]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;参与设计游戏中的各种玩法，和团队成员进行有效沟通，共同完成游戏开发；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[14,16]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;为游戏内各个玩法等进行难度、奖励等数值设计，达成设计目的；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[16,18]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;根据世界设定和玩家体验规划的要求，负责游戏主要关卡/副本的规划、设定、制作跟进-测试验证、调整优化及相关文档的制作；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[18,20]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;体验自身项目及行业内各类游戏产品，收集用户数据进行分析，总结设计思路并优化方案、持续进行跟进。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;岗位要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[22,24]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[22,23],&quot;index&quot;:1},&quot;v&quot;:&quot;1. 具备良好的逻辑思维、数学计算和语言表达能力；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;2.保持自我学习的热情，并善于分析和总结；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[26,28]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[26,27],&quot;index&quot;:3},&quot;v&quot;:&quot;3. 拥有良好的沟通、协作和抗压能力；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;4.热爱游戏，有丰富的手机、PC、或主机游戏经历，对热门游戏如数家珍，并对至少某一类型游戏有深入体验和认知。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;关卡策划&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;岗位描述&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;在雷火，你可以在虚拟世界里为你的玩家创造各种趣味和惊喜，打造不一样的人生副本。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;1.根据世界观设定、玩家体验规划的要求，负责游戏关卡/副本的规划，产出相关文档并维护，利用引擎工具制作关卡原型，跟进制作、测试验证并进行调整优化；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;2.根据任务大纲，创造有吸引力的关卡体验流程与关卡风格，提出需要的美术资源、玩法内容和程序功能，并协调上下游部门跟进任务需求，对任务最终表现效果负责；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;3.了解主机游戏玩家需求，基于玩家反馈和游戏测试对关卡和任务线进行不断优化，设计有趣且引人入胜的关卡和任务。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;岗位要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;1.热爱游戏，有丰富的游戏经历，对游戏大作有独立和深入的见解，对玩家需求有较好的洞察和把控能力；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;2.良好的沟通表达、团队合作能力和抗压能力，结果导向，认真务实，有责任心；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;3.了解关卡设计流程，掌握关卡相关编辑器与引擎工具；熟悉游戏引擎的基础结构与操作；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;4.有关卡制作经验者加分，请务必附上原创作品和相关材料。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;战斗策划&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;岗位描述&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;在雷火，你可以和国内外顶尖游戏制作者一起，将你脑海中刺激的战斗场面在游戏中实现，不断打磨升级，创造前所未有的战斗手感和极致的战斗表现力。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;1、设计战斗机制：参与设计基础战斗机制、技能以及维护战斗的平衡；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;2、扩展战斗玩法：创造并改进玩法，并丰富玩家体验内容；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;3、提升战斗表现：协同程序、美术相关团队进行战斗表现的制作，优化战斗手感提升战斗表现力。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;岗位要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;我们希望你符合以下描述：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;1、具备优秀的沟通表达能力，具备团队合作精神，踏实负责，善于思考和学习；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;2、热爱游戏，有丰富的游戏经历，熟悉某一类型的游戏，并有1-2款游戏的深度经验；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;3、对游戏战斗、英雄技能、打击体验、竞技对抗、职业平衡等有丰富的经验和感悟；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;4、，了解创作的艰辛与趣味。请务必附上原创作品和相关材料。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;游戏测试工程师&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;职位描述&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;您可以：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[82,84]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;加入国内最顶级的游戏研发团队，享受规范和优质的培训体系，获得飞速成长的机会；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[84,86]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;为不同的平台创造和开发世界一流的游戏，尤其是当前最热的移动平台；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[86,88]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;破坏游戏规则，通过游戏的深度体验，精准的Bug定位，帮助团队创造最有趣的游戏；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[88,90]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;深度体验游戏，钻研游戏的各种设计理念，将兴趣融入工作。&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;任职资格&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;我们希望您符合以下任意两条或以上的描述：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[94,96]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;2024年毕业，本科或以上学历，专业不限；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[96,98]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;资深游戏爱好者，对各类游戏有深刻的理解，具备丰富的游戏经验。游戏高端玩家优先；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[98,100]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;良好的逻辑思维能力和学习能力，以及强烈的解决问题的意愿；&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[100,102]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;良好的沟通和团队协作能力，能清晰、准确的在团队中传达自己的想法。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;具备以下条件尤佳：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;具备扎实的计算机基础，掌握至少一门编程语言，熟悉数据结构、算法、操作系统和网络等知识。&quot;}]}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[106,107]},&quot;v&quot;:&quot;总结&quot;}],&quot;p&quot;:{}}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>

### 网易校招信息

- 网易

    - 游戏策划

        - 数值策划

            - 岗位描述

                - 在雷火，你可以：

                - - 参与设计游戏中的各种玩法，和团队成员进行有效沟通，共同完成游戏开发；

                - - 为游戏内各个玩法等进行难度、奖励等数值设计，达成设计目的；

                - - 根据世界设定和玩家体验规划的要求，负责游戏主要关卡/副本的规划、设定、制作跟进-测试验证、调整优化及相关文档的制作；

                - - 体验自身项目及行业内各类游戏产品，收集用户数据进行分析，总结设计思路并优化方案、持续进行跟进。

            - 岗位要求

                - 1. 具备良好的逻辑思维、数学计算和语言表达能力；

                - 2.保持自我学习的热情，并善于分析和总结；

                - 3. 拥有良好的沟通、协作和抗压能力；

                - 4.热爱游戏，有丰富的手机、PC、或主机游戏经历，对热门游戏如数家珍，并对至少某一类型游戏有深入体验和认知。

        - 关卡策划

            - 岗位描述

                - 在雷火，你可以在虚拟世界里为你的玩家创造各种趣味和惊喜，打造不一样的人生副本。

                - 1.根据世界观设定、玩家体验规划的要求，负责游戏关卡/副本的规划，产出相关文档并维护，利用引擎工具制作关卡原型，跟进制作、测试验证并进行调整优化； 

                - 2.根据任务大纲，创造有吸引力的关卡体验流程与关卡风格，提出需要的美术资源、玩法内容和程序功能，并协调上下游部门跟进任务需求，对任务最终表现效果负责；

                - 3.了解主机游戏玩家需求，基于玩家反馈和游戏测试对关卡和任务线进行不断优化，设计有趣且引人入胜的关卡和任务。

            - 岗位要求

                - 1.热爱游戏，有丰富的游戏经历，对游戏大作有独立和深入的见解，对玩家需求有较好的洞察和把控能力；

                - 2.良好的沟通表达、团队合作能力和抗压能力，结果导向，认真务实，有责任心； 

                - 3.了解关卡设计流程，掌握关卡相关编辑器与引擎工具；熟悉游戏引擎的基础结构与操作；

                - 4.有关卡制作经验者加分，请务必附上原创作品和相关材料。

        - 战斗策划

            - 岗位描述

                - 在雷火，你可以和国内外顶尖游戏制作者一起，将你脑海中刺激的战斗场面在游戏中实现，不断打磨升级，创造前所未有的战斗手感和极致的战斗表现力。

                - 1、设计战斗机制：参与设计基础战斗机制、技能以及维护战斗的平衡；

                - 2、扩展战斗玩法：创造并改进玩法，并丰富玩家体验内容；

                - 3、提升战斗表现：协同程序、美术相关团队进行战斗表现的制作，优化战斗手感提升战斗表现力。

            - 岗位要求

                - 我们希望你符合以下描述：

                - 1、具备优秀的沟通表达能力，具备团队合作精神，踏实负责，善于思考和学习；

                - 2、热爱游戏，有丰富的游戏经历，熟悉某一类型的游戏，并有1-2款游戏的深度经验；

                - 3、对游戏战斗、英雄技能、打击体验、竞技对抗、职业平衡等有丰富的经验和感悟；

                - 4、，了解创作的艰辛与趣味。请务必附上原创作品和相关材料。

        - 游戏测试工程师

            - 职位描述

                - 您可以：

                    -  - 加入国内最顶级的游戏研发团队，享受规范和优质的培训体系，获得飞速成长的机会；

                    -  - 为不同的平台创造和开发世界一流的游戏，尤其是当前最热的移动平台； 

                    -  - 破坏游戏规则，通过游戏的深度体验，精准的Bug定位，帮助团队创造最有趣的游戏；

                    -  - 深度体验游戏，钻研游戏的各种设计理念，将兴趣融入工作。

            - 任职资格

                - 我们希望您符合以下任意两条或以上的描述：

                    -  - 2024年毕业，本科或以上学历，专业不限；

                    -  - 资深游戏爱好者，对各类游戏有深刻的理解，具备丰富的游戏经验。游戏高端玩家优先；

                    -  - 良好的逻辑思维能力和学习能力，以及强烈的解决问题的意愿；

                    -  - 良好的沟通和团队协作能力，能清晰、准确的在团队中传达自己的想法。

                -  具备以下条件尤佳：

                    -  - 具备扎实的计算机基础，掌握至少一门编程语言，熟悉数据结构、算法、操作系统和网络等知识。

### 总结

        - 有原创作品或原创游戏开发经历

        - 有关卡制作经验者加分

        - 掌握至少一门编程语言，熟悉数据结构、算法、操作系统和网络等知识。


</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>新闻</tag>
        <tag>游戏策划</tag>
      </tags>
  </entry>
  <entry>
    <title>1金1银2铜,我院学子在第九届互联网+大赛省赛中创造佳绩</title>
    <url>/2023/11/06/1.Archieve/1%E9%87%911%E9%93%B62%E9%93%9C-%E6%88%91%E9%99%A2%E5%AD%A6%E5%AD%90%E5%9C%A8%E7%AC%AC%E4%B9%9D%E5%B1%8A%E4%BA%92%E8%81%94%E7%BD%91-%E5%A4%A7%E8%B5%9B%E7%9C%81%E8%B5%9B%E4%B8%AD%E5%88%9B%E9%80%A0%E4%BD%B3%E7%BB%A9/</url>
    <content><![CDATA[<p>[[___新闻]]</p>
<p>通讯员 岳天宇）7月30日，第九届中国国际“互联网+”大学生创新创业大赛湖北省复赛现场赛在湖北工业大学落下帷幕，我院参赛团队获得1金1银2铜的好成绩。</p>
<p>本次大赛以“我敢闯，我会创”为主题，来自全国范围内的投资行业、企业和高校的96名专家担任大赛评委，湖北省共有109所高校的407个项目进入省赛复赛现场赛的比拼中，最终产生170个金奖和237个银奖。下面，就让我们领略一下我院获奖项目的风采。</p>
<span id="more"></span>
<p>金奖项目</p>
<p>项目名称：面向车身结构生产的嵌入式智造方案</p>
<p>团队成员：王欧阳旭、邓子研、聂米雪、刘泽乾、陈银冰、甘承文、刘玥、赵杰、保思琦、朱景安</p>
<p>指导老师：周华民、朱盈盈、王云明、邓前松</p>
<p>项目简介：面向当前各类车辆结构件加工的海量市场需求，以及传统检测面临的良品率低下、生产效率低、经济效益不足的问题，项目团队专注于核心硬件、核心算法两方面技术提升，匹配车辆零部件生产装配节拍，赋能车辆零部件智造加工。基于高算力、强通信，实现汽车零部件加工检测高反馈闭环控制，从材料源头、成形过程解决数据无畸变采样问题，从数学原理底层突破预测和跟踪难题，实现良率、效率跨越式增长，从而解放汽车零部件加工产线生产力，降低车辆成本，让更多的人开上质优价廉的好车。</p>
<p>银奖项目</p>
<p>项目名称：碳听科技-高灵敏低频压力探测系统破局者</p>
<p>团队成员：李华健、夏侯幸子、周昶、陈晨、刘宜帆、吴思佳、段皓蕊、马伟刚、陈健中</p>
<p>指导老师：徐鸣、卫平、郭新、张海波、杨少龙</p>
<p>项目简介：本项目立足于国家重大战略需求，面向水下低频移动物体，如舰艇、蛙人等特殊目标以及锂电池内部压力进行探测，致力于成为低频压力探测领域的破局者。团队成员历经5年发展，已从探测原理、材料制备、器件组装及信号处理等多个方面完成了全链条自主创新，申请相关发明专利12项，与中船重工702所、武汉普惠海洋光电技术有限公司等企业开展了实质性合作，收获了行业内的认可。并且团队成员秉持从教育中来，到教育中去的理念，构建了省级水下低频探测研究平台作为实践育人基地，发挥学科优势，培养了交叉学科30余位本硕博人才。</p>
<p>铜奖项目</p>
<p>项目名称：智纤增材-连续碳纤维机器人辅助激光增材制造</p>
<p>团队成员：王志豪、贺夕纯、欧阳鑫怡、黄雅欣、周维、张驰、何流、王烨珍、谭佳、何建英、郑彤、颜语、熊艳苹</p>
<p>指导老师：闫春泽、史玉升、杨磊</p>
<p>项目简介：作为替代金属的下一代材料，连续碳纤维复合材料具有比强度高，寿命长等优点，被广泛应用于航空航天、交通运输等多个领域。而增材制造是一种将三维模型进行计算机切片后分层制造的方法。现在常以FDM的形式使用连续碳纤维进行增材制造。但FDM存在层间结合差、精度低等缺点。从以上背景和需求出发，开发了机器人辅助激光增材制造系统，利用六轴机械臂和两轴变位机进行连续碳纤维的增材制造。同时，开发配套可定制离线编程软件，优化成型工艺，实现了增材制造自动化处理流程。与国内外连续碳纤维增材制造领域一流厂商或高校对比，各项技术指标均处于国际一流、国内领先水平。</p>
<p>项目名称：春风拂面：无源寒地科技护脸</p>
<p>团队成员：何子成、李嘉欣、吴嘉威、梁军、王恺庆、周子康、汪全</p>
<p>指导老师：陶光明、周华民、周宁、侯冲</p>
<p>项目简介：春风拂面护脸基于热学-材料-结构-纺织技术的跨领域多学科协同创新，通过三维结构织物的创新设计和非对称空气通道的构筑调控，有效抑制面部的热传导、热对流和热辐射损失，实现较低的气体交换压力差以保证充足摄氧量，同时缓冲寒冷干燥空气对肺部的损害，减少紫外辐射对面部皮肤的危害，成功研发了具有无源保暖、透气舒适、紫外防护等特点的无源寒地科技护脸，实现了该技术“从0到1”的原始创新。</p>
<p>据悉，中国国际“互联网+”大学生创新创业大赛是覆盖全国所有高校、面向全体大学生、影响最大的高校双创盛会。本届“互联网+”湖北省复赛参赛高校覆盖面和学生参与度均为历年最高。全省共有9.75万个项目，43.06万名大中专学生报名参加。</p>
]]></content>
      <tags>
        <tag>大学</tag>
        <tag>新闻</tag>
      </tags>
  </entry>
  <entry>
    <title>打完游戏后只用15s就进入学习状态</title>
    <url>/2023/11/12/2.Reference/%E6%89%93%E5%AE%8C%E6%B8%B8%E6%88%8F%E5%90%8E%E5%8F%AA%E7%94%A815s%E5%B0%B1%E8%BF%9B%E5%85%A5%E5%AD%A6%E4%B9%A0%E7%8A%B6%E6%80%81/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=714271644&bvid=BV1QX4y157mJ&cid=303017010&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe>
</div>

<h3 id="思维导图如下："><a href="#思维导图如下：" class="headerlink" title="思维导图如下："></a>思维导图如下：</h3>
<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;打完游戏后只用15s就进入学习状态&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;第一部分：状态分解四步法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;1、精力判断&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;（1）完全没有任何精力只想睡觉&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;→睡觉恢复精力&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;（2）有精力，能学习，但是就是不想动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;→坐直（Roy F. Baumeister）&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;（3）精力充沛&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;→进入下一步&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;2、意志力判断&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;（1）前先热身：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;我在准备学习的上一件事是什么：可以先做一些和学习有关的事情进行缓冲（可以理解为真正进入训练之前先热身）&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;（2）除了学习，我最近有没有在别的事情上进行阶段性自律：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;意志力和体力一样是有限的资源，如果有在别的事情进行消耗，那就先放下别的事，让意志力用在刀刃上&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;（3）我的周围有无干扰物：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;减少意志力用于抵抗干扰的损耗&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;3、情绪判断&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;（1）情绪垃圾桶：数独、练字&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;（2）古典音乐法&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;4、动力判断：明确接下来要做什么，做多久&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;第二部分：15秒进入法——借助小仪式进入状态&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;维克多·特纳：我们人类常常“通过仪式指明并构成状态间的过渡”。&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;1、2秒：看一眼任务清单，坐直&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;2、3秒：打开唤起音乐&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;3、10秒：倒数&quot;}]}]}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>

# 打完游戏后只用15s就进入学习状态

## 第一部分：状态分解四步法

### 1、精力判断

- （1）完全没有任何精力只想睡觉
  - →睡觉恢复精力

- （2）有精力，能学习，但是就是不想动
  - →坐直（Roy F. Baumeister）

- （3）精力充沛
  - →进入下一步

### 2、意志力判断

- （1）前先热身：
  - 我在准备学习的上一件事是什么：可以先做一些和学习有关的事情进行缓冲（可以理解为真正进入训练之前先热身）

- （2）除了学习，我最近有没有在别的事情上进行阶段性自律：
  - 意志力和体力一样是有限的资源，如果有在别的事情进行消耗，那就先放下别的事，让意志力用在刀刃上

- （3）我的周围有无干扰物：
  - 减少意志力用于抵抗干扰的损耗

### 3、情绪判断

- （1）情绪垃圾桶：数独、练字

- （2）古典音乐法

### 4、动力判断：明确接下来要做什么，做多久

## 第二部分：15秒进入法——借助小仪式进入状态

### 维克多·特纳：我们人类常常“通过仪式指明并构成状态间的过渡”。

### 1、2秒：看一眼任务清单，坐直

### 2、3秒：打开唤起音乐

### 3、10秒：倒数

</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>效率工具</tag>
        <tag>bilibili归档</tag>
      </tags>
  </entry>
  <entry>
    <title>2023.11.4数学建模讲座</title>
    <url>/2023/11/05/1.Archieve/2023-11-4%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%AE%B2%E5%BA%A7-1/</url>
    <content><![CDATA[<p>[[___数学建模]]</p>
<p>&emsp;&emsp;以下为2023-11-04 数学建模讲座的笔记及随想</p>
<blockquote>
<p>由xmind自动生成</p>
</blockquote>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;数学建模&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;数学建模就是解决实际问题的过程&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;将实际的问题转化为数学公式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;对&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;自然科学基本理论&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;理解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;研究&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[15,23]},&quot;v&quot;:&quot;&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;bullet_list&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[17,23]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;几何学（向量学）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;力学&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;简单微分方程求解理论&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;问题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;分解&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;统合&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[29,33]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;有点像拆解出函数以及设定函数之间的传参&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;科研创新的必由之路&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;数学问题求解的理论研究&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;实际上是算法理论的研究&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;一般性算法&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[41,42]},&quot;v&quot;:&quot;适合本题的特殊算法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[43,44]},&quot;v&quot;:&quot;而不只是套已有的模型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[45,46]},&quot;v&quot;:&quot;所以说机器学习的算法可能并不能滥用&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[47,48]},&quot;v&quot;:&quot;算法的流程结构&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[49,50]},&quot;v&quot;:&quot;？？？&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[51,52]},&quot;v&quot;:&quot;编程求解与结果分析&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[53,54]},&quot;v&quot;:&quot;学习&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[55,56]},&quot;v&quot;:&quot;matlab&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[57,58]},&quot;v&quot;:&quot;python&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[59,60]},&quot;v&quot;:&quot;标准模型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[61,62]},&quot;v&quot;:&quot;采用库函数进行求解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[63,64]},&quot;v&quot;:&quot;非标准模型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[65,66]},&quot;v&quot;:&quot;根据算法理论求解&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[67,68]},&quot;v&quot;:&quot;总结&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[69,70]},&quot;v&quot;:&quot;写好一篇论文&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[71,72]},&quot;v&quot;:&quot;准备好一个易读的格式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[73,74]},&quot;v&quot;:&quot;latex&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[75,76]},&quot;v&quot;:&quot;全文格式一致性&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[77,78]},&quot;v&quot;:&quot;文章要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[79,80]},&quot;v&quot;:&quot;条理清晰&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[81,82]},&quot;v&quot;:&quot;简洁明了&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[83,84]},&quot;v&quot;:&quot;图文并茂&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[85,86]},&quot;v&quot;:&quot;通俗易懂&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[87,88]},&quot;v&quot;:&quot;对于大家的要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[89,90]},&quot;v&quot;:&quot;贵在坚持&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[91,92]},&quot;v&quot;:&quot;早早组队&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[93,94]},&quot;v&quot;:&quot;熟悉基础模型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[95,96]},&quot;v&quot;:&quot;可以尝试写到BLOG里面&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[97,98]},&quot;v&quot;:&quot;多做赛题求解思路培训&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[99,100]},&quot;v&quot;:&quot;搭框架&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[101,102]},&quot;v&quot;:&quot;实际上就是我们之前干的事情&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[103,104]},&quot;v&quot;:&quot;适度参赛&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[105,106]},&quot;v&quot;:&quot;对赛题的解读&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[107,108]},&quot;v&quot;:&quot;认真阅读赛题，分析命题人的意图&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[109,110]},&quot;v&quot;:&quot;读懂各个小题之间的联系&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[111,112]},&quot;v&quot;:&quot;做到解题思路的连贯性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[115,116]},&quot;v&quot;:&quot;在之前的自我训练中，我们也可以发现题目的前后小题之间会有逻辑，前面的小题往往是后面的引导&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[117,118]},&quot;v&quot;:&quot;沙漠&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[119,120]},&quot;v&quot;:&quot;这道题中为什么个人的决策可以引申为多人的呢？&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[121,122]},&quot;v&quot;:&quot;如何理解数学模型&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[123,124]},&quot;v&quot;:&quot;从简单的数学应用题&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[125,126]},&quot;v&quot;:&quot;到复杂的大型石矶应用&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[127,128]},&quot;v&quot;:&quot;复杂化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[129,130]},&quot;v&quot;:&quot;分解成小模型&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[131,132]},&quot;v&quot;:&quot;系统化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[133,134]},&quot;v&quot;:&quot;将各个小模型之间串通&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[135,136]},&quot;v&quot;:&quot;专业化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[137,138]},&quot;v&quot;:&quot;使用专业相关知识&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[139,140]},&quot;v&quot;:&quot;赛题分类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[141,142]},&quot;v&quot;:&quot;数据类赛题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[143,144]},&quot;v&quot;:&quot;每年一道数据分类分析题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[145,146]},&quot;v&quot;:&quot;相对简单&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[147,148]},&quot;v&quot;:&quot;适合数模的初学者&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[149,150]},&quot;v&quot;:&quot;三分之二的人会选择这道题&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[151,152]},&quot;v&quot;:&quot;规划类赛题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[153,154]},&quot;v&quot;:&quot;赛题较少&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[155,156]},&quot;v&quot;:&quot;理论分散&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[157,158]},&quot;v&quot;:&quot;自然科学类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[159,160]},&quot;v&quot;:&quot;重点题型&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[161,162]},&quot;v&quot;:&quot;基础理论主要集中在&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[163,164]},&quot;v&quot;:&quot;几何题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[165,166]},&quot;v&quot;:&quot;力，力矩&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[167,168]},&quot;v&quot;:&quot;常微分，偏微分&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[169,170]},&quot;v&quot;:&quot;虽然可以用库函数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[171,172]},&quot;v&quot;:&quot;但是推荐使用基础理论求解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[173,174]},&quot;v&quot;:&quot;更具有灵活性&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[175,176]},&quot;v&quot;:&quot;尽量用最基本的理论&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[177,183]},&quot;v&quot;:&quot;&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[177,178]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;bullet_list&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[179,183]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[179,180]},&quot;v&quot;:&quot;比如说在那道炉温的题目中&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[181,182]},&quot;v&quot;:&quot;温度的变化量可以通过查已有的基础理论&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[183,184]},&quot;v&quot;:&quot;近期的任务&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[185,186]},&quot;v&quot;:&quot;2023B&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[187,188]},&quot;v&quot;:&quot;一个月内&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[189,190]},&quot;v&quot;:&quot;如何利用第二问的&quot;}]}]}],&quot;p&quot;:{}}"/>
</div>

<span id="more"></span>
<details>
<summary>显示原文本</summary>

# 数学建模

## 数学建模就是解决实际问题的过程

### 将实际的问题转化为数学公式

- 对

    - 自然科学基本理论

        - 理解

        - 研究

    - #

        - 几何学（向量学）

        - 力学

        - 简单微分方程求解理论

- 问题

    - 分解

    - 统合

    - +

        - 有点像拆解出函数以及设定函数之间的传参

- 科研创新的必由之路

### 数学问题求解的理论研究

- 实际上是算法理论的研究

    - 一般性算法

    - 适合本题的特殊算法

        - 而不只是套已有的模型

        - 所以说机器学习的算法可能并不能滥用

- 算法的流程结构

    - ？？？

### 编程求解与结果分析

- 学习

    - matlab

    - python

- 标准模型

    - 采用库函数进行求解

- 非标准模型

    - 根据算法理论求解

- 总结

### 写好一篇论文

- 准备好一个易读的格式

    - latex

    - 全文格式一致性

- 文章要求

    - 条理清晰

    - 简洁明了

    - 图文并茂

    - 通俗易懂

## 对于大家的要求

### 贵在坚持

### 早早组队

### 熟悉基础模型

- 可以尝试写到BLOG里面

### 多做赛题求解思路培训

- 搭框架

- 实际上就是我们之前干的事情

### 适度参赛

## 对赛题的解读

### 认真阅读赛题，分析命题人的意图

### 读懂各个小题之间的联系

- 做到解题思路的连贯性

    - +

        - 在之前的自我训练中，我们也可以发现题目的前后小题之间会有逻辑，前面的小题往往是后面的引导

        - 沙漠

            - 这道题中为什么个人的决策可以引申为多人的呢？

## 如何理解数学模型

### 从简单的数学应用题

### 到复杂的大型石矶应用

- 复杂化

    - 分解成小模型

- 系统化

    - 将各个小模型之间串通

- 专业化

    - 使用专业相关知识

## 赛题分类

### 数据类赛题

- 每年一道数据分类分析题

- 相对简单

    - 适合数模的初学者

- 三分之二的人会选择这道题

### 规划类赛题

- 赛题较少

- 理论分散

### 自然科学类

- 重点题型

- 基础理论主要集中在

    - 几何题

    - 力，力矩

    - 常微分，偏微分

        - 虽然可以用库函数

        - 但是推荐使用基础理论求解

            - 更具有灵活性

    - 尽量用最基本的理论

    - #

        - 比如说在那道炉温的题目中

            - 温度的变化量可以通过查已有的基础理论

## 近期的任务

### 2023B

### 一个月内

### 如何利用第二问的


</details>]]></content>
      <tags>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title>2023-12-3数模讲座记录（海底测线）</title>
    <url>/2023/12/05/1.Archieve/2023-12-3%E6%95%B0%E6%A8%A1%E8%AE%B2%E5%BA%A7%E8%AE%B0%E5%BD%95%EF%BC%88%E6%B5%B7%E5%BA%95%E6%B5%8B%E7%BA%BF%EF%BC%89/</url>
    <content><![CDATA[<p>[[___数学建模]]</p>
<h2 id="一、题目描述"><a href="#一、题目描述" class="headerlink" title="一、题目描述"></a>一、题目描述</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 国赛2023-B题</span><br><span class="line">![[2023-B题]]</span><br></pre></td></tr></table></figure>
<h2 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h2><h3 id="1-前面两道问题"><a href="#1-前面两道问题" class="headerlink" title="1.前面两道问题"></a>1.前面两道问题</h3><p>其实就是纯数学问题</p>
<p>总的来说不是特别难，只需要使用三角函数即可。</p>
<h4 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h4><ul>
<li>坡度 ：$\alpha$</li>
<li>波束的覆盖宽度：W</li>
<li>相邻两条带间重叠率：η</li>
<li>换能器开角：θ</li>
<li>水深：D</li>
<li>相邻测线间距：d</li>
<li>海底坡度：αη=1-dW</li>
<li>（测线方向与海底坡面法向在水平面上投影的夹角β）</li>
</ul>
<span id="more"></span>
<h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><p>第一题：根据正弦定理，当水深为D时，测线的宽度：<br><a href="https://www.imagehub.cc/image/1Pkz7S"><img src="https://s1.imagehub.cc/images/2023/12/05/8b4547c8460ee45a2e3038ef28faed36.png" alt="8b4547c8460ee45a2e3038ef28faed36.png"></a></p>
<script type="math/tex; mode=display">W=\frac{D\sin{\frac{\theta}{2}}}{\sin{(\frac{\pi-\theta}{2}-\alpha)}}+\frac{D\sin{\frac{\theta}{2}}}{\sin{(\frac{\pi-\theta}{2}+\alpha)}}</script><p>第二题：如图，设图中标注线段长为X</p>
<p><a href="https://www.imagehub.cc/image/1Pk7lL"><img src="https://s1.imagehub.cc/images/2023/12/05/0fbfa76c0e276dd40c7fc51f55a6f048.png" alt="0fbfa76c0e276dd40c7fc51f55a6f048.png"></a></p>
<p><a href="https://www.imagehub.cc/image/1PkFjB"><img src="https://s1.imagehub.cc/images/2023/12/05/c253a655551e1593e96d0aa38484f1a4.png" alt="c253a655551e1593e96d0aa38484f1a4.png"></a><br>化简得到：<br><a href="https://www.imagehub.cc/image/1Pkmkt"><img src="https://s1.imagehub.cc/images/2023/12/05/2d17176e16095dd4c1b1208e2c50b4cd.png" alt="2d17176e16095dd4c1b1208e2c50b4cd.png"></a></p>
<p><a href="https://www.imagehub.cc/image/1Pkqoq"><img src="https://s1.imagehub.cc/images/2023/12/05/638761b2ce79af8fafc03a5ee31d1796.png" alt="638761b2ce79af8fafc03a5ee31d1796.png"></a></p>
<p>可视化之后如下：</p>
<p><a href="https://www.imagehub.cc/image/1PkACU"><img src="https://s1.imagehub.cc/images/2023/12/05/9cc2c55dbc45944866c8386b6db9041a.png" alt="9cc2c55dbc45944866c8386b6db9041a.png"></a><br><a href="https://www.imagehub.cc/image/1PkDG0"><img src="https://s1.imagehub.cc/images/2023/12/05/a9932d4a202c31319796571586111b86.png" alt="a9932d4a202c31319796571586111b86.png"></a></p>
<h3 id="2-第三道题"><a href="#2-第三道题" class="headerlink" title="2.第三道题"></a>2.第三道题</h3><p>这道题属于单一变量优化问题，其他条件都不会变，我们只需要讨论测线的角度这一个变量即可。</p>
<h3 id="3-第四道题-初步思路"><a href="#3-第四道题-初步思路" class="headerlink" title="3.第四道题-初步思路"></a>3.第四道题-初步思路</h3><p>这道题中，地面不再是平坦的了。</p>
<p>我们知道，我们需要将其转化为之前的条带的形状会比较好计算。</p>
<p>即我们可以求测线左侧和右侧宽度的平均值，然后再对他们进行计算。</p>
<p>需要注意的是，题目给出的数据是离散的，位于格点上的，所以说实际上，我们需要对每一个点取一个近似的位置作为<strong>取样点</strong>，并且加以运算。</p>
<p><a href="https://imgse.com/i/pi61qiR"><img src="https://z1.ax1x.com/2023/12/05/pi61qiR.jpg" alt="pi61qiR.jpg"></a></p>
<p><a href="https://imgse.com/i/pi61ORx"><img src="https://z1.ax1x.com/2023/12/05/pi61ORx.jpg" alt="pi61ORx.jpg"></a></p>
<p>之后我们再在β里面求取使得测线长度最小的值</p>
<p><a href="https://imgse.com/i/pi61LJ1"><img src="https://z1.ax1x.com/2023/12/05/pi61LJ1.jpg" alt="pi61LJ1.jpg"></a></p>
<p>最后我们需要检验漏测率，这里需要注意的点其实还是数据是离散的</p>
<p><a href="https://imgse.com/i/pi61Xz6"><img src="https://z1.ax1x.com/2023/12/05/pi61Xz6.jpg" alt="pi61Xz6.jpg"></a><br>最后可以得到结果大概是117度</p>
<h3 id="4-第四题还可以优化"><a href="#4-第四题还可以优化" class="headerlink" title="4.第四题还可以优化"></a>4.第四题还可以优化</h3><p>我们发现，地图中有明显的较为陡峭的部分，也有明显比较平缓的部分，将两者看作是一种显然会造成十分大的误差，那么在这种限制之下，我们可以考虑将整块地分割为四个部分，并且对其进行分别处理。</p>
<!-- more -->
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>数学建模</tag>
      </tags>
  </entry>
  <entry>
    <title>4-4时间管理法</title>
    <url>/2023/11/20/1.Archieve/4-4%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%B3%95/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<p>这是我个人 结合多种方法，按照自己经常使用的工具制定的一个管理方法。这种方法以四象限为基础模板，将事项的状态以及事项的拆解结合到一起，是一种较为不错的时间管理工具。</p>
<h3 id="一、【4】-4时间管理法"><a href="#一、【4】-4时间管理法" class="headerlink" title="一、【4】-4时间管理法"></a>一、【4】-4时间管理法</h3><p>第一个四指的是四象限，按照【重要性】【紧迫性】可以将所有的事项分为四类</p>
<ul>
<li>重要紧迫</li>
<li>重要但是不紧迫</li>
<li>紧迫但是不重要</li>
<li>不重要不紧迫</li>
</ul>
<p>可以发现，在处理 <code>重要但是不紧迫</code> 和 <code>紧迫但是不重要</code> 这两种事情的时候，我们优先选择做<code>重要但是不紧迫</code> 的内容。实际上，这一选择符合人们关于“未雨绸缪”的设计，而人们完成 重要但是不紧迫的事情的数量的多少其实才是一个人通过这种方法获得了多少的最好指标。</p>
<h3 id="二、-4-【4】时间管理法"><a href="#二、-4-【4】时间管理法" class="headerlink" title="二、 4-【4】时间管理法"></a>二、 4-【4】时间管理法</h3><p>本来是我自己设计的，但是后面回合GTD时间管理法一对照，发现其实有许多相似之处，但是实际上我的这个更加贴近实际的运行，并且包含更加清晰地时间拆解。</p>
<h4 id="1-结构构成"><a href="#1-结构构成" class="headerlink" title="1. 结构构成"></a>1. 结构构成</h4><p>这里的4指的是事项的四种状态（虽然说其实不止四种）：</p>
<ul>
<li>A有这个想法去做</li>
<li>B思路清晰准备做</li>
<li>C事项</li>
<li>D归档<ul>
<li>已完成待归档</li>
<li>已归档</li>
</ul>
</li>
</ul>
<h4 id="2-具体操作"><a href="#2-具体操作" class="headerlink" title="2. 具体操作"></a>2. 具体操作</h4><ol>
<li>收集：每次有想法了之后，写在A区，并且按照四象限进行分类。</li>
<li>处理拆分：然后将A区，按照：【1. 重要紧迫2. 重要但是不紧迫3. 紧迫但是不重要4. 不重要不紧迫】的顺序进行拆分，想想看自己具体要怎么实现这些目标，将这些目标拆解成小的目标，并且放入B区</li>
<li>具体落地：B区一般会有两种事项构成：长期的“项目”，和短期的“事项”。对于项目，我们可以结合你的任务清单记录工具，提醒自己每天去进行跟进。对于事项，直接创建事项后续安排时间完成即可。<br> 需要注意的是<strong>尽可能地给你的项目/事项标注好时间</strong>和 <strong>完成的指标是什么</strong>，因为这样的话，你在安排时间完成的时候就可以有一个具体的参考，以及在完成事项的时候有一个具体的反馈。一定要有指标，不然的话你可能会因为自己临时定的目标过于理性，而使得完成后反而会有一种挫败感。 <br> 另外，你还要知道，拆解项目的时候项目的状态并不是一成不变的，所有项目的拆分应该随着项目的状态变化而进行调整：比如我本来预计有三轮工作，但是我发现我两轮下来就已经基本完成了，那么这个时候我们就需要对第三轮的事情进行一定的调整。</li>
<li>处理事项：预估你想要专注的时间，比对一下你在任务清单中标注的时间，你可以很轻松地设计这段时间需要干什么。</li>
<li>归档：所有完成的任务事项都需要归档，写一份文档记录你在这次事项中学到了什么东西，发现了什么问题……</li>
</ol>
<h3 id="三、结合番茄闹钟"><a href="#三、结合番茄闹钟" class="headerlink" title="三、结合番茄闹钟"></a>三、结合番茄闹钟</h3><p>在我的定义里面，番茄闹钟指的是每隔25分钟会提醒一次，之后过5分钟的时候又会提醒一次的闹钟。</p>
<p>这样可以使你对时间拥有更好的掌握感但是又尽可能的不去打乱你当前的节奏，并且使你间歇性的暂停一下，让你能够在这几分钟之内对刚刚25min做的事情进行一个快速的回顾以及为下一个25min调整状态。</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Broforce：人质解救机制</title>
    <url>/2023/11/30/1.Archieve/Broforce%EF%BC%9A%E4%BA%BA%E8%B4%A8%E8%A7%A3%E6%95%91%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<p>[[<strong>_Broforce]]<br>[[_</strong>游戏设计]]</p>
<p>在broforce中，你需要解救人质以获得额外的生命值，同时你也会更换你当前使用的角色。</p>
<p>这样，在你解救人质的时候，实际上也是面临一个开盲盒的过程。首先，选择解救人质肯定是较为好的一个选择，我们一般都会偏向于去解救，因为这样，不仅抽出来的时候是随机的，在死亡之后重生的角色也是随机的。在死亡的时候，你无法确定下一个到底是会是更顺手的还是不好用的，这总是为玩家带来惊喜，也推动着玩家继续探索。</p>
<p>在此机制的基础之上，游戏中丰富的角色也为游戏增色不少。为玩家提供了丰富的机制体验，使得玩家保有继续有玩的兴趣。</p>
<p>实际上这也遵循了精简的原则，你会发现，游戏往往在这种精简，将多种属性几何在一起的过程中，就会发生十分有意思的现象。[[将游戏的属性精简化]]</p>
]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>Broforce</tag>
      </tags>
  </entry>
  <entry>
    <title>Broforce：场景破坏元素在游戏中的独特作用</title>
    <url>/2023/11/30/1.Archieve/Broforce%EF%BC%9A%E5%9C%BA%E6%99%AF%E7%A0%B4%E5%9D%8F%E5%85%83%E7%B4%A0%E5%9C%A8%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E7%8B%AC%E7%89%B9%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<p>[[<strong>_Broforce]]<br>[[_</strong>游戏设计]]</p>
<p>可以破坏的场景给游戏增色不少，在原有的突突突玩法上拓展了极为丰富的选择，你可以选择暗度陈仓，从奇怪的地方绕过去、也可以打地道战，让敌人脚底下的方块被破坏从而从高处掉下去、也可以直接打正面战斗。</p>
<p>但是允许玩家破坏场地的同时，也给玩家带来了一定的限制。如果地形被破坏的太严重，玩家将会比较困难达到终点甚至是无法达到终点。同时，游戏中有自爆兵，地形中也有炸药桶，煤气罐等，都对玩家进行了一定的限制。</p>
]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>Broforce</tag>
      </tags>
  </entry>
  <entry>
    <title>Broforce：简单明快的横板突突突游戏</title>
    <url>/2023/11/30/1.Archieve/Broforce%EF%BC%9A%E7%AE%80%E5%8D%95%E6%98%8E%E5%BF%AB%E7%9A%84%E6%A8%AA%E6%9D%BF%E7%AA%81%E7%AA%81%E7%AA%81%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p>[[<strong>_游戏体验日记]]<br>[[_</strong>Broforce]]<br>[[___未完成]]</p>
<p>broforce对于我而言属于是高中的美好回忆了，记得当时和同学一起玩，玩得还挺爽的。</p>
<p>最近在steam平台上找到了这款游戏，看到支持远程联机，而且打折只要10+￥，于是我就立马把它买下来了。</p>
<h3 id="一、游戏构成分析"><a href="#一、游戏构成分析" class="headerlink" title="一、游戏构成分析"></a>一、游戏构成分析</h3><p>按照常规的游戏构成，对游戏的基本构成进行分析</p>
<p>首先是非戏剧元素<sup><a href="#fn_1" id="reffn_1">1</a></sup></p>
<h4 id="1-非戏剧元素"><a href="#1-非戏剧元素" class="headerlink" title="1.非戏剧元素"></a>1.非戏剧元素</h4><h5 id="1-在玩家上着手的设计"><a href="#1-在玩家上着手的设计" class="headerlink" title="1. 在玩家上着手的设计"></a>1. 在玩家上着手的设计</h5><ol>
<li><p><strong>游戏的邀请：</strong> 这部游戏在这个地方的设计并不流畅。但是是用了较为复古的风格和强有力的音效，在开局就给玩家带来了“力量感”的第一印象。</p>
</li>
<li><p><strong>游戏的人数：</strong> 可以单人，也可以多人。多人模式比单人模式好玩一些。</p>
</li>
<li><p><strong>玩家的角色：</strong> 玩家作为“解放”区域的一方，可以在开局和获得新的命数的时候随机抽取一个已经解锁角色，有概率会解锁新的角色。</p>
</li>
<li><p><strong>玩家的交互模式：</strong> 人机对抗&amp;协作游戏</p>
</li>
</ol>
<h5 id="2-游戏的目标"><a href="#2-游戏的目标" class="headerlink" title="2. 游戏的目标"></a>2. 游戏的目标</h5><p>抵达终点 / 击杀boss（营救/逃脱）</p>
<h5 id="3-玩家达成目标的途径："><a href="#3-玩家达成目标的途径：" class="headerlink" title="3. 玩家达成目标的途径："></a>3. 玩家达成目标的途径：</h5><p>玩家可以使用键盘进行输入。wasd移动，普通攻击，特殊攻击，近战攻击。具体不同的角色会有些不一样，但是大体而言就是这样的一个配置。&lt;/br&gt;其实和大部分其他同类的游戏挺像的。  </p>
<p>如果这个游戏没有地形破坏这个功能，那么可以说，这个游戏达成目标的唯一途径就是：突突突。  </p>
<p>或者是其实就是：有一点策略但是不多，大部分都是在突突突。<br>但是这个游戏有一个很有意思的部分，那就是地图是可以破坏的，而且游戏中有十分优秀的攀爬手感。<br>这样的话，玩家可以做出的选择就更多了。  </p>
<p>玩家可以选择偷渡过去，而恰好有一关中直接对抗的难度要比偷渡过去难太多；也可以选择利用地形与敌人对抗，比如破坏他们脚底下的方块，使他们从高空落下，或者引爆周围的汽油桶，制造爆炸来消灭敌人……</p>
<p>所以说我认为这个游戏里面，地形破坏是十分重要的核心机制之一</p>
<h5 id="4-规则和边界："><a href="#4-规则和边界：" class="headerlink" title="4. 规则和边界："></a>4. 规则和边界：</h5><ul>
<li>限制玩家行动：限制玩家行动的其实是你的命数。玩家的行动不会受到硬性的限制，但是你需要通过前面的路的话，就需要面对会阻拦你的敌人。&lt;/br&gt; 你可以和它进行对抗，也可以选择绕过去。  </li>
<li>定义对象：在游戏中，你作为敢死队的一员，需要前往不同的地方，达到终点并消灭敌方的首领。游戏中赋予了玩家以敢死队的身份，而对于敌人，则是恐怖分子和外星怪物。</li>
<li>定义概念<sup><a href="#fn_2" id="reffn_2">2</a></sup>：游戏中，玩家会有以下属性：剩余命数，剩余特殊技能数，除此之外，就没有其他的了。十分地干净简洁，因为游戏的根本调性是突突突，如果再让玩家去精打细算这些资源的具体分配将会给游戏带来奇怪的感受。&lt;/br&gt; 而敌人则拥有种类这一属性，实际上不同种类的敌人的行动规律是相对固定也是可预判的。</li>
<li>玩家如何学习这些东西的本质：敌人的行为逻辑作为游戏中的重要构成，是需要玩家直接面对且对玩家的游戏进程有很大的影响的。玩家可以通过观察与总结获得他们的行为逻辑。实际上这一逻辑是较为重复单一的。</li>
<li>决定结果：玩家被击杀之后命数-1，如果命数为负数，则需要重新挑战。</li>
</ul>
<h5 id="5-资源：游戏中有十分多种资源类型，可以分为四类："><a href="#5-资源：游戏中有十分多种资源类型，可以分为四类：" class="headerlink" title="5. 资源：游戏中有十分多种资源类型，可以分为四类："></a>5. 资源：游戏中有十分多种资源类型，可以分为四类：</h5><ol>
<li><p><strong>命数</strong></p>
<ol>
<li>你的命数变成负数的时候，游戏结束</li>
<li>当你被攻击时，当前角色会死亡，然后你会以任意一个已经解锁了的角色在上一个记录点重生。</li>
<li>可以通过解救人质获得命数</li>
</ol>
</li>
<li><p><strong>道具</strong></p>
<ol>
<li>属于消耗品，用一次少一次</li>
<li>可以通过打破补给箱补满道具</li>
<li>在一些情况下是解决问题的关键。<h5 id="6-冲突"><a href="#6-冲突" class="headerlink" title="6. **冲突"></a>6. **冲突</h5></li>
</ol>
</li>
</ol>
<p>玩家和人机的冲突，人机作为敌人，而玩家需要杀死敌人的首领</p>
<h5 id="7-结果"><a href="#7-结果" class="headerlink" title="7. 结果"></a>7. <strong>结果</strong></h5><p>击杀首领即可达成获胜，通关需要”解放所有的区域“</p>
<h4 id="2-戏剧元素"><a href="#2-戏剧元素" class="headerlink" title="2.戏剧元素"></a>2.戏剧元素</h4><h5 id="1-挑战"><a href="#1-挑战" class="headerlink" title="1. 挑战"></a>1. 挑战</h5><ol>
<li><p><strong>挑战因人而异</strong></p>
<ol>
<li>你可以选择硬刚</li>
<li>也可以选择智取</li>
</ol>
</li>
<li><p><strong>挑战是动态的</strong></p>
<ol>
<li>游戏中的难度随着游戏的推进不断变难，从敌人类型的变多变强，再到敌人数目的变多，分布变得更刁钻。</li>
<li>玩家需要了解一些新的敌人/新的地形元素</li>
</ol>
</li>
<li><p><strong>挑战的设计优秀：</strong></p>
<ol>
<li>这是一个需要技巧的挑战性的活动<ol>
<li>目标引导：杀死首领</li>
<li>有规则限制：不死</li>
<li>需要一定技巧：有一定的技巧</li>
</ol>
</li>
<li>人们将自己所有的技能都投入，来达到他们的目的：游戏中设计的每一部分都有它的作用，而不会出现无用的设计；玩家通过游戏学习到的东西可以被随时运用</li>
</ol>
</li>
<li><strong>专注于目前正在做的任务：</strong><ol>
<li>游戏被拆分成了一个个小的地点，地点里面又分了关卡，每个小关卡里面也有可以供玩家缓冲的地方。</li>
<li>在游戏中，玩家较容易专注于当前的短期任务，比如进入某个房间……直到下一个节点</li>
<li>有确定感，每一小部分的完成都会有明确的反馈，这让我们有明确的成就感。</li>
</ol>
</li>
<li><p><strong>个人决策在游戏中的地位</strong></p>
<ol>
<li>个人决策在游戏中起到了关键性的作用，整个游戏都是在玩家的决策影响下推进的。玩家通过这些信息做出决策，并选择最佳的策略。</li>
<li>个人决策下的偶然性：个人决策与结果强相关，但是其中仍然存在十分充分的随机元素。<ol>
<li>首先对于玩家来说，这个区域本身就是说未知的，玩家对于探索的结果会存在“好奇”。</li>
<li>其次，游戏中，敌人的行为有一定的范式，但是并不是固定的，而是相对随机的，这给玩家带来了每一关都有不一样的挑战的体验。</li>
</ol>
</li>
</ol>
</li>
<li><p><strong>失去自我意识</strong></p>
<ol>
<li>玩家不必为了自我评价或者是什么干扰自己的游玩体验。游戏的目标相对宽松，达成目标的途径有多种，基本上只要完成某个关键结果就行了。在这种设计的影响下，玩家其实不太需要注意自己的具体行为到底如何。</li>
</ol>
</li>
<li><strong>玩的潜力<sup><a href="#fn_3" id="reffn_3">3</a></sup></strong><ol>
<li>玩是一种思维的状态，而这种玩法的基本范式属于“带入类”</li>
<li>玩家的类型：竞争型。</li>
<li>参与度：是否可以引起一个人内在的思考？<strong>不能</strong><ol>
<li>如何设计才能引起屏幕外面的人的共鸣？使其代入角色？</li>
</ol>
</li>
</ol>
</li>
<li><strong>故事</strong><ol>
<li>故事预设：<ol>
<li>背景：二战</li>
<li>角色：还行，<strong>目前没有什么感想</strong><ol>
<li>角色受玩家的操控，角色是玩家在游戏中的媒介。</li>
</ol>
</li>
</ol>
</li>
<li>世界观：<ol>
<li>世界观较为单薄，毕竟是突突突游戏</li>
</ol>
</li>
</ol>
</li>
<li><strong>情节发展</strong><ol>
<li>敌人从普通人变成了怪物……</li>
</ol>
</li>
</ol>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote id="fn_1">
<sup>1</sup>. 指的是游戏中的根本核心，是游戏运作的基础<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 就是说游戏中可能有许多的概念/机制/数据但是在游戏中我们不一定要让玩家清楚的知道；我们可以将它们具象化或者隐藏化来优化游戏中的对象和概念<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>Broforce</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中string和int相互转换的常用方法</title>
    <url>/2023/12/08/1.Archieve/C++%E4%B8%ADstring%E5%92%8Cint%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>字符串操作是各种算法题中的常客，很多数据常常以字符串形式给出，其中有的需要自己转化成整数，而一些整型数据有时转换成字符串处理起来更加方便，比如判断一个整数是否是回文数，所以字符串和整数的转换是一些问题处理的基础步骤，C++ 在处理这类问题时并不像 Python 那样方便，但是也有许多方法能够实现，为了今后查找方便，整理如下。</p>
<h1 id="int-转-string"><a href="#int-转-string" class="headerlink" title="int 转 string"></a>int 转 string</h1><h2 id="通过-std-to-string-函数转换"><a href="#通过-std-to-string-函数转换" class="headerlink" title="通过 std::to_string() 函数转换"></a>通过 std::to_string() 函数转换</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">123</span>;</span><br><span class="line">    std::cout &lt;&lt; std::<span class="built_in">to_string</span>(num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">这种方式在 C++<span class="number">11</span> 中才能使用，编译时记得加上 --std=c++<span class="number">11</span> 的选项</span><br><span class="line"></span><br><span class="line">## 通过 ostringstream 转换</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">123</span>;</span><br><span class="line">    std::ostringstream ss;</span><br><span class="line">    ss &lt;&lt; num;</span><br><span class="line">    std::cout &lt;&lt; ss.<span class="built_in">str</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这是一种通过字符流的方式将整数转换成字符串，这种方式在C++11之前也可以使用</p>
<h2 id="通过-sprintf-转换"><a href="#通过-sprintf-转换" class="headerlink" title="通过 sprintf 转换"></a>通过 sprintf 转换</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">123</span>;</span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">256</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(buffer, <span class="string">&quot;%d&quot;</span>, num);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, buffer);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这是一种C语言中的转换方式，sprintf 也可以换成更安全的 snprintf 函数</p>
<h1 id="string-转-int"><a href="#string-转-int" class="headerlink" title="string 转 int"></a>string 转 int</h1><h2 id="通过-istringstream-转换"><a href="#通过-istringstream-转换" class="headerlink" title="通过 istringstream 转换"></a>通过 istringstream 转换</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;668&quot;</span>;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::istringstream <span class="title">ss</span><span class="params">(str)</span></span>;</span><br><span class="line">    ss &gt;&gt; num;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; num;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>使用 istringstream 可以从字符流中读取整数，与 ostringstream 是一种相反的操作</p>
<h2 id="使用-sscanf-来转化"><a href="#使用-sscanf-来转化" class="headerlink" title="使用 sscanf 来转化"></a>使用 sscanf 来转化</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;668&quot;</span>;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sscanf</span>(str.<span class="built_in">c_str</span>(), <span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    std::cout &lt;&lt; num;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意 sscanf 函数的第一个参数类型是 const char *，string类型的参数需要转换一下</p>
<h2 id="使用-atoi-转换"><a href="#使用-atoi-转换" class="headerlink" title="使用 atoi 转换"></a>使用 atoi 转换</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;668&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">atoi</span>(str.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>atoi 函数的头文件是 stdlib.h，同样是一个C语言中的函数</p>
<h2 id="使用方法stod"><a href="#使用方法stod" class="headerlink" title="使用方法stod"></a>使用方法stod</h2><p>该方法在C++11中被支持，十分地方便，但是需要确保给定的string是否可以转化为double，不然会抛出错误。</p>
<p>总结<br>itoa 不是c语言标准函数，在跨平台的整数转字符串的代码中不要使用这个函数<br>atoi 是一个标准函数，需要将它和 itoa 区别开来，这一点很容易记混的<br>如果是在C++环境中进行转换，推荐使用 stringstream 字符流的形式和 to_string 函数</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>float的相互转换</title>
    <url>/2023/12/08/1.Archieve/C++%EF%BC%9Astring%E5%92%8Cdouble&amp;float%E7%9A%84%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<h2 id="C-字符串与浮点数和双浮点数转换"><a href="#C-字符串与浮点数和双浮点数转换" class="headerlink" title="C ++字符串与浮点数和双浮点数转换"></a>C ++字符串与浮点数和双浮点数转换</h2><p>将字符串转换为浮点数的最简单方法是使用以下<strong>C ++ 11</strong>函数：</p>
<ul>
<li><strong>std :: stof()</strong> - 将string转换为float</li>
<li><strong>std :: stod()</strong> - 将string转换为double</li>
<li><strong>std :: stold()</strong> - 将string转换为long double。</li>
</ul>
<p>这些函数在string头文件中定义。</p>
<h3 id="示例1：C-字符串转换为浮点和双浮点数"><a href="#示例1：C-字符串转换为浮点和双浮点数" class="headerlink" title="示例1：C ++字符串转换为浮点和双浮点数"></a>示例1：C ++字符串转换为浮点和双浮点数</h3><p>示例<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;123.4567&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将字符串转换为浮点数</span></span><br><span class="line">    <span class="type">float</span> num_float = std::<span class="built_in">stof</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将字符串转换为双浮点数 double</span></span><br><span class="line">    <span class="type">double</span> num_double = std::<span class="built_in">stod</span>(str);</span><br><span class="line"></span><br><span class="line">   std:: cout&lt;&lt; <span class="string">&quot;num_float = &quot;</span> &lt;&lt; num_float &lt;&lt; std::endl;</span><br><span class="line">   std:: cout&lt;&lt; <span class="string">&quot;num_double = &quot;</span> &lt;&lt; num_double &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><strong>输出结果</strong></p>
<p>num_float = 123.457<br>num_double = 123.457</p>
<h3 id="示例2：将C-char数组转换为double"><a href="#示例2：将C-char数组转换为double" class="headerlink" title="示例2：将C ++ char数组转换为double"></a>示例2：将C ++ char数组转换为double</h3><p>我们可以使用std::atof()函数将char数组转换为double。</p>
<p>示例<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// atoi()需要cstdlib</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明和初始化字符数组</span></span><br><span class="line">    <span class="type">char</span> str[] = <span class="string">&quot;123.4567&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> num_double = std::<span class="built_in">atof</span>(str);</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;num_double = &quot;</span> &lt;&lt; num_double &lt;&lt; std::endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><strong>输出结果</strong></p>
<p>num_double = 123.457</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.cainiaojc.com/cpp/cpp-string-float-conversion.html">C++ String(字符串)和 float/double (浮点数)互转 - 菜鸟教程 (cainiaojc.com)</a></p>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++11:string和wstring之间互转换</title>
    <url>/2023/11/03/1.Archieve/C-11-string%E5%92%8Cwstring%E4%B9%8B%E9%97%B4%E4%BA%92%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<p>C++11:string和wstring之间互转换</p>
<p>今天打算做string到wstring转换时从哪里找来的，贴出代码，以防再忘记。C++11后UTF8编码转换还真是方便<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;codecvt&gt;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// convert string to wstring</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> std::wstring <span class="title">to_wide_string</span><span class="params">(<span class="type">const</span> std::string&amp; input)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		std::wstring_convert&lt;std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt;&gt; converter;</span><br><span class="line">		<span class="keyword">return</span> converter.<span class="built_in">from_bytes</span>(input);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// convert wstring to string </span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> std::string <span class="title">to_byte_string</span><span class="params">(<span class="type">const</span> std::wstring&amp; input)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">//std::wstring_convert&lt;std::codecvt_utf8_utf16&lt;wchar_t&gt;&gt; converter;</span></span><br><span class="line">		std::wstring_convert&lt;std::codecvt_utf8&lt;<span class="type">wchar_t</span>&gt;&gt; converter;</span><br><span class="line">		<span class="keyword">return</span> converter.<span class="built_in">to_bytes</span>(input);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>C++：string的运用和相关方法</title>
    <url>/2023/12/08/1.Archieve/C++%EF%BC%9Astring%E7%9A%84%E8%BF%90%E7%94%A8%E5%92%8C%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>[[___C++]] </p>
<h1 id="C-：string的运用和相关方法"><a href="#C-：string的运用和相关方法" class="headerlink" title="C++：string的运用和相关方法"></a>C++：string的运用和相关方法</h1><h2 id="一、删除std-string或std-wstring的最后一个字符："><a href="#一、删除std-string或std-wstring的最后一个字符：" class="headerlink" title="一、删除std::string或std::wstring的最后一个字符："></a>一、删除std::string或std::wstring的最后一个字符：</h2><h3 id="s-pop-back"><a href="#s-pop-back" class="headerlink" title="s.pop_back();"></a>s.pop_back();</h3><p>  从s中移走最后一个元素。在string/wstring中相当于移走最后一个char/wchar_t。这个方法算是比较简单的了。</p>
<h3 id="s-erase-s-end-1"><a href="#s-erase-s-end-1" class="headerlink" title="s.erase(s.end()-1);"></a>s.erase(s.end()-1);</h3><p>  删除s的最后一个字符</p>
<h3 id="s-s-substr-0-s-length-1"><a href="#s-s-substr-0-s-length-1" class="headerlink" title="s=s.substr(0,s.length()-1);"></a>s=s.substr(0,s.length()-1);</h3><p>  取出s从最开始到倒数第二个字符之间的字符串，赋值给s。相当于去掉最后一个字符</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>EDGE浏览器打开B站视频总是重复加载</title>
    <url>/2023/11/14/1.Archieve/EDGE%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80B%E7%AB%99%E8%A7%86%E9%A2%91%E6%80%BB%E6%98%AF%E9%87%8D%E5%A4%8D%E5%8A%A0%E8%BD%BD/</url>
    <content><![CDATA[<p>[[<strong>_杂项技术]]<br>[[_</strong>杂谈]]</p>
<p>在浏览bilibili的时候网页有的时候会刷新两遍，十分影响观看体验。</p>
<span id="more"></span>
<h3 id="一、问题发现"><a href="#一、问题发现" class="headerlink" title="一、问题发现"></a>一、问题发现</h3><p>经过检查，bilibili在被adblock检验以及触发脚本：【玩得嗨】视频解析 的时候会触发该刷新问题</p>
<h3 id="二、解决方案"><a href="#二、解决方案" class="headerlink" title="二、解决方案"></a>二、解决方案</h3><p>简单的做法：</p>
<h4 id="1-解决ad"><a href="#1-解决ad" class="headerlink" title="1.解决ad"></a>1.解决ad</h4><p>阻止adgride读取该站点的权限即可,即关闭读取所有网站的权限而是改为在特定的网站上启用。</p>
<ul>
<li>比较麻烦</li>
</ul>
<p>推荐做法：换用<code>adblock plus</code></p>
<h4 id="2-关闭【玩得嗨】"><a href="#2-关闭【玩得嗨】" class="headerlink" title="2.关闭【玩得嗨】"></a>2.关闭【玩得嗨】</h4>]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Lec来了</title>
    <url>/2023/11/04/1.Archieve/Lec%E6%9D%A5%E4%BA%86/</url>
    <content><![CDATA[<p>[[___test]]</p>
<h3 id="这是一个测试"><a href="#这是一个测试" class="headerlink" title="这是一个测试"></a>这是一个测试</h3><ul>
<li>无序列表</li>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<ol>
<li>qweq</li>
<li>撒旦士大夫打撒</li>
<li>打算发发</li>
<li>wereg</li>
</ol>
<h3 id="尝试使用图片"><a href="#尝试使用图片" class="headerlink" title="尝试使用图片"></a>尝试使用图片</h3><p><a href="https://imgse.com/i/piy22Us"><img src="https://z1.ax1x.com/2023/12/04/piy22Us.png" alt="piy22Us.png"></a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    cout&lt;&lt;a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>Edge中的键盘快捷键</title>
    <url>/2023/11/10/1.Archieve/Edge%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>
<p><a href="https://support.microsoft.com/zh-cn/microsoft-edge/microsoft-edge-%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F-50d3edab-30d9-c7e4-21ce-37fe2713cfad" title="Edge中的键盘快捷键">官网链接</a></p>
<h3 id="Microsoft-Edge-中的键盘快捷方式"><a href="#Microsoft-Edge-中的键盘快捷方式" class="headerlink" title="Microsoft Edge 中的键盘快捷方式"></a>Microsoft Edge 中的键盘快捷方式</h3><p>Edge for Windows</p>
<h3 id="键盘快捷方式是指按键或按键组合，可提供另一种方式来执行通常使用鼠标执行的操作。-下面是适用于-新版-Microsoft-Edge-和-Microsoft-Edge-for-Mac-的列表。"><a href="#键盘快捷方式是指按键或按键组合，可提供另一种方式来执行通常使用鼠标执行的操作。-下面是适用于-新版-Microsoft-Edge-和-Microsoft-Edge-for-Mac-的列表。" class="headerlink" title="键盘快捷方式是指按键或按键组合，可提供另一种方式来执行通常使用鼠标执行的操作。 下面是适用于 新版 Microsoft Edge  和 Microsoft Edge for Mac 的列表。"></a>键盘快捷方式是指按键或按键组合，可提供另一种方式来执行通常使用鼠标执行的操作。 下面是适用于 新版 Microsoft Edge  和 Microsoft Edge for Mac 的列表。</h3><p>&emsp;&emsp;因为我打算对于我个人使用网页浏览器的效率进行提升，故在这里记录一下我最近学到的几个比较好用的快捷键。<br><span id="more"></span></p>
<h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3>
<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;edge快捷键&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;收藏夹&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;该选项会改变：仅在新建页面中显示收藏夹&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Ctrl + Shift + B&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;显示或隐藏收藏夹栏&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;Alt + Shift + B&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;将焦点放在收藏夹栏中的第一项上&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;Ctrl + D&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;将当前选项卡另存为收藏夹&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;Ctrl + Shift + D&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;在新文件夹中将所有打开的标签页另存为收藏夹&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;边栏&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;Ctrl + Shift + E&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;在边栏中打开搜索&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;地址栏&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;Alt + D&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;选择地址栏中的 URL 以进行编辑&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;Ctrl + E&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;在地址栏中打开搜索查询&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;Ctrl + K&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;在地址栏中打开搜索查询&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;Ctrl + Enter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;将 www. 和 .com 分别添加到在地址栏中键入的文本的开头和末尾&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;菜单页面&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;Alt + E&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;打开“设置及更多 ”菜单&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;Alt + F&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;打开“设置及更多 ”菜单&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;Ctrl + Shift + I&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;打开开发人员工具&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;Alt + Shift + I&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;打开“发送反馈”对话框&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;Ctrl + H&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;打开历史记录&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;Ctrl + J&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;打开“下载”文件夹&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;Ctrl + L&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;选择地址栏中的 URL 以进行编辑&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;Ctrl + Shift + L&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;粘贴并搜索或粘贴并访问（如果它是 URL）&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;Ctrl + Shift + M&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;以其他用户身份登录或以来宾身份浏览&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;Ctrl + Shift + O&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;打开收藏夹&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;Alt + Shift + T&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;将焦点放在应用栏工具栏中的第一项上&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;Ctrl + Shift + Y&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;打开集合&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;Alt&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;将焦点放在“设置及更多 ”按钮上&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;小工具&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;搜索&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;Ctrl + F&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[106,107]},&quot;v&quot;:&quot;在页面上打开查找&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[108,109]},&quot;v&quot;:&quot;Ctrl + G&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[110,111]},&quot;v&quot;:&quot;跳转到下一个结果以在页面上查找&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[112,113]},&quot;v&quot;:&quot;Ctrl + Shift + G&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[114,115]},&quot;v&quot;:&quot;跳转到上一个结果以在页面上查找&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[116,117]},&quot;v&quot;:&quot;Ctrl + O&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[118,119]},&quot;v&quot;:&quot;在 Microsoft Edge 中打开计算机中的文件&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[120,121]},&quot;v&quot;:&quot;Ctrl + U&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[122,123]},&quot;v&quot;:&quot;查看源&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[124,125]},&quot;v&quot;:&quot;Ctrl + Shift + U&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[126,127]},&quot;v&quot;:&quot;开始或停止“大声朗读”&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[128,129]},&quot;v&quot;:&quot;Ctrl + Shift + Delete&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[130,131]},&quot;v&quot;:&quot;打开清除浏览数据选项&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[132,133]},&quot;v&quot;:&quot;标签页操作&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[134,135]},&quot;v&quot;:&quot;Ctrl + Shift + K&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[136,137]},&quot;v&quot;:&quot;复制当前标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[138,139]},&quot;v&quot;:&quot;Ctrl + M&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[140,141]},&quot;v&quot;:&quot;将当前标签页设为静音（切换）&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[142,143]},&quot;v&quot;:&quot;Ctrl + N&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[144,145]},&quot;v&quot;:&quot;打开新窗口&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[146,147]},&quot;v&quot;:&quot;Ctrl + Shift + N&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[148,149]},&quot;v&quot;:&quot;打开新的 InPrivate 窗口&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[150,151]},&quot;v&quot;:&quot;Ctrl + P&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[152,153]},&quot;v&quot;:&quot;打印当前页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[154,155]},&quot;v&quot;:&quot;Ctrl + Shift + P&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[156,157]},&quot;v&quot;:&quot;使用系统对话框打印&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[158,159]},&quot;v&quot;:&quot;Ctrl + R&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[160,161]},&quot;v&quot;:&quot;重新加载当前页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[162,163]},&quot;v&quot;:&quot;Ctrl + Shift + R&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[164,165]},&quot;v&quot;:&quot;重新加载当前页，忽略缓存内容&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[166,167]},&quot;v&quot;:&quot;Ctrl + S&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[168,169]},&quot;v&quot;:&quot;保存当前页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[170,171]},&quot;v&quot;:&quot;Ctrl + T&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[172,173]},&quot;v&quot;:&quot;打开新标签页并切换到该标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[174,175]},&quot;v&quot;:&quot;Ctrl + Shift + T&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[176,177]},&quot;v&quot;:&quot;重新打开上一个关闭的标签页并切换到该标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[178,179]},&quot;v&quot;:&quot;Ctrl + W&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[180,181]},&quot;v&quot;:&quot;关闭当前标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[182,183]},&quot;v&quot;:&quot;Ctrl + Shift + W&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[184,185]},&quot;v&quot;:&quot;关闭当前窗口&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[186,187]},&quot;v&quot;:&quot;Ctrl + 1, 2, ... 8&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[188,189]},&quot;v&quot;:&quot;切换到特定标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[190,191]},&quot;v&quot;:&quot;Ctrl + 9&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[192,193]},&quot;v&quot;:&quot;切换到最后一个标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[194,195]},&quot;v&quot;:&quot;Ctrl + Tab&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[196,197]},&quot;v&quot;:&quot;切换到下一个标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[198,199]},&quot;v&quot;:&quot;Ctrl + Shift + Tab&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[200,201]},&quot;v&quot;:&quot;切换到上一个标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[202,203]},&quot;v&quot;:&quot;Alt + left&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[204,205]},&quot;v&quot;:&quot;返回&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[206,207]},&quot;v&quot;:&quot;Alt + right&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[208,209]},&quot;v&quot;:&quot;前进&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[210,211]},&quot;v&quot;:&quot;不好用的&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[212,213]},&quot;v&quot;:&quot;Alt + Home&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[214,215]},&quot;v&quot;:&quot;在当前标签页中打开主页&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[216,217]},&quot;v&quot;:&quot;Esc&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[218,219]},&quot;v&quot;:&quot;停止加载页面；关闭对话框或弹出窗口&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[220,221]},&quot;v&quot;:&quot;Space&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[222,223]},&quot;v&quot;:&quot;向下滚动网页，一次滚动一个屏幕&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[224,225]},&quot;v&quot;:&quot;Shift + Space&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[226,227]},&quot;v&quot;:&quot;向上滚动网页，一次滚动一个屏幕&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[228,229]},&quot;v&quot;:&quot;带F的操作&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[230,231]},&quot;v&quot;:&quot;Alt + F4&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[232,233]},&quot;v&quot;:&quot;关闭当前窗口&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[234,235]},&quot;v&quot;:&quot;F1&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[236,237]},&quot;v&quot;:&quot;打开帮助&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[238,239]},&quot;v&quot;:&quot;F3&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[240,241]},&quot;v&quot;:&quot;查找当前标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[242,243]},&quot;v&quot;:&quot;F4&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[244,245]},&quot;v&quot;:&quot;选择地址栏中的 URL&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[246,247]},&quot;v&quot;:&quot;Ctrl + F4&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[248,249]},&quot;v&quot;:&quot;关闭当前标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[250,251]},&quot;v&quot;:&quot;F5&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[252,253]},&quot;v&quot;:&quot;重新加载当前标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[254,255]},&quot;v&quot;:&quot;Shift + F5&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[256,257]},&quot;v&quot;:&quot;重新加载当前标签页，忽略缓存内容&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[258,259]},&quot;v&quot;:&quot;F6&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[260,261]},&quot;v&quot;:&quot;将焦点移动到下一个窗格&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[262,263]},&quot;v&quot;:&quot;Shift + F6&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[264,265]},&quot;v&quot;:&quot;将焦点移动到上一个窗格&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[266,267]},&quot;v&quot;:&quot;Ctrl + F6&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[268,269]},&quot;v&quot;:&quot;将焦点移动到 Web 内容窗格&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[270,271]},&quot;v&quot;:&quot;F7&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[272,273]},&quot;v&quot;:&quot;打开或关闭插入光标浏览&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[274,275]},&quot;v&quot;:&quot;F9&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[276,277]},&quot;v&quot;:&quot;进入或退出沉浸式阅读器&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[278,279]},&quot;v&quot;:&quot;F10&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[280,281]},&quot;v&quot;:&quot;将焦点放在“设置及更多 ”按钮上&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[282,283]},&quot;v&quot;:&quot;F10 + Enter&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[284,285]},&quot;v&quot;:&quot;打开“设置及更多 ”菜单&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[286,287]},&quot;v&quot;:&quot;Shift + F10&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[288,289]},&quot;v&quot;:&quot;打开上下文菜单&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[290,291]},&quot;v&quot;:&quot;F11&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[292,293]},&quot;v&quot;:&quot;进入全屏（切换）&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[294,295]},&quot;v&quot;:&quot;F12&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[296,297]},&quot;v&quot;:&quot;打开开发人员工具&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[298,299]},&quot;v&quot;:&quot;带小键盘按键的&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[300,301]},&quot;v&quot;:&quot;PgDn&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[302,303]},&quot;v&quot;:&quot;向下滚动网页，一次滚动一个屏幕&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[304,305]},&quot;v&quot;:&quot;Ctrl + PgDn&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[306,307]},&quot;v&quot;:&quot;切换到下一个标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[308,309]},&quot;v&quot;:&quot;PgUp&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[310,311]},&quot;v&quot;:&quot;向上滚动网页，一次滚动一个屏幕&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[312,313]},&quot;v&quot;:&quot;Ctrl + PgUp&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[314,315]},&quot;v&quot;:&quot;切换到上一个标签页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[316,317]},&quot;v&quot;:&quot;Home&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[318,319]},&quot;v&quot;:&quot;转到页面顶部，将键盘焦点移动到窗格的第一项&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[320,321]},&quot;v&quot;:&quot;End&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[322,323]},&quot;v&quot;:&quot;转到页面底部，将键盘焦点移动到窗格的最后一项&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[324,325]},&quot;v&quot;:&quot;页面缩放&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[326,327]},&quot;v&quot;:&quot;Ctrl + 0&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[328,329]},&quot;v&quot;:&quot;重置页面缩放级别&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[330,331]},&quot;v&quot;:&quot;Ctrl +  (+)&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[332,333]},&quot;v&quot;:&quot;放大&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[334,335]},&quot;v&quot;:&quot;Ctrl + (-)&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[336,337]},&quot;v&quot;:&quot;缩小&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[338,339]},&quot;v&quot;:&quot;文本操作&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[340,341]},&quot;v&quot;:&quot;Ctrl + Shift + V&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[342,343]},&quot;v&quot;:&quot;不带格式粘贴&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[344,345]},&quot;v&quot;:&quot;选择&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[346,347]},&quot;v&quot;:&quot;Tab&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[348,349]},&quot;v&quot;:&quot;转到下一个制表位&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[350,351]},&quot;v&quot;:&quot;Shift + Tab&quot;}]}]}"/>
</div>

<!--more-->
<details>
<summary>查看原文</summary>
# edge快捷键

## 收藏夹

### 该选项会改变：仅在新建页面中显示收藏夹

- Ctrl + Shift + B

    - 显示或隐藏收藏夹栏

- Alt + Shift + B

    - 将焦点放在收藏夹栏中的第一项上

### Ctrl + D

- 将当前选项卡另存为收藏夹

### Ctrl + Shift + D

- 在新文件夹中将所有打开的标签页另存为收藏夹

## 边栏

### Ctrl + Shift + E

- 在边栏中打开搜索

## 地址栏

### Alt + D

- 选择地址栏中的 URL 以进行编辑

### Ctrl + E

- 在地址栏中打开搜索查询

### Ctrl + K

- 在地址栏中打开搜索查询

### Ctrl + Enter

- 将 www. 和 .com 分别添加到在地址栏中键入的文本的开头和末尾

## 菜单页面

### Alt + E

- 打开“设置及更多 ”菜单

### Alt + F

- 打开“设置及更多 ”菜单

### Ctrl + Shift + I

- 打开开发人员工具

### Alt + Shift + I

- 打开“发送反馈”对话框

### Ctrl + H

- 打开历史记录 

### Ctrl + J

- 打开“下载”文件夹 

### Ctrl + L

- 选择地址栏中的 URL 以进行编辑

### Ctrl + Shift + L

- 粘贴并搜索或粘贴并访问（如果它是 URL）

### Ctrl + Shift + M

- 以其他用户身份登录或以来宾身份浏览

### Ctrl + Shift + O

- 打开收藏夹 

### Alt + Shift + T

- 将焦点放在应用栏工具栏中的第一项上

### Ctrl + Shift + Y

- 打开集合

### Alt

- 将焦点放在“设置及更多 ”按钮上

## 小工具

### 搜索

- Ctrl + F

    - 在页面上打开查找

- Ctrl + G

    - 跳转到下一个结果以在页面上查找

- Ctrl + Shift + G

    - 跳转到上一个结果以在页面上查找

### Ctrl + O

- 在 Microsoft Edge 中打开计算机中的文件

### Ctrl + U

- 查看源

### Ctrl + Shift + U

- 开始或停止“大声朗读”

### Ctrl + Shift + Delete

- 打开清除浏览数据选项

## 标签页操作

### Ctrl + Shift + K

- 复制当前标签页

### Ctrl + M

- 将当前标签页设为静音（切换）

### Ctrl + N

- 打开新窗口

### Ctrl + Shift + N

- 打开新的 InPrivate 窗口

### Ctrl + P

- 打印当前页

### Ctrl + Shift + P

- 使用系统对话框打印

### Ctrl + R

- 重新加载当前页

### Ctrl + Shift + R

- 重新加载当前页，忽略缓存内容

### Ctrl + S

- 保存当前页

### Ctrl + T

- 打开新标签页并切换到该标签页

### Ctrl + Shift + T

- 重新打开上一个关闭的标签页并切换到该标签页

### Ctrl + W

- 关闭当前标签页

### Ctrl + Shift + W

- 关闭当前窗口

### Ctrl + 1, 2, ... 8

- 切换到特定标签页

### Ctrl + 9

- 切换到最后一个标签页

### Ctrl + Tab

- 切换到下一个标签页

### Ctrl + Shift + Tab

- 切换到上一个标签页

### Alt + left

- 返回

### Alt + right

- 前进

### 不好用的

- Alt + Home

    - 在当前标签页中打开主页

### Esc

- 停止加载页面；关闭对话框或弹出窗口

### Space

- 向下滚动网页，一次滚动一个屏幕

### Shift + Space

- 向上滚动网页，一次滚动一个屏幕

## 带F的操作

### Alt + F4

- 关闭当前窗口

### F1

- 打开帮助

### F3

- 查找当前标签页

### F4

- 选择地址栏中的 URL

### Ctrl + F4

- 关闭当前标签页

### F5

- 重新加载当前标签页

### Shift + F5

- 重新加载当前标签页，忽略缓存内容

### F6

- 将焦点移动到下一个窗格

### Shift + F6

- 将焦点移动到上一个窗格

### Ctrl + F6

- 将焦点移动到 Web 内容窗格

### F7

- 打开或关闭插入光标浏览

### F9

- 进入或退出沉浸式阅读器

### F10

- 将焦点放在“设置及更多 ”按钮上

### F10 + Enter

- 打开“设置及更多 ”菜单

### Shift + F10

- 打开上下文菜单

### F11

- 进入全屏（切换）

### F12

- 打开开发人员工具

## 带小键盘按键的

### PgDn

- 向下滚动网页，一次滚动一个屏幕

### Ctrl + PgDn

- 切换到下一个标签页

### PgUp

- 向上滚动网页，一次滚动一个屏幕

### Ctrl + PgUp

- 切换到上一个标签页

### Home

- 转到页面顶部，将键盘焦点移动到窗格的第一项

### End

- 转到页面底部，将键盘焦点移动到窗格的最后一项

## 页面缩放

### Ctrl + 0

- 重置页面缩放级别

### Ctrl +  (+)

- 放大

### Ctrl + (-)

- 缩小

## 文本操作

### Ctrl + Shift + V

- 不带格式粘贴

## 选择

### Tab

- 转到下一个制表位

### Shift + Tab

-     转到上一个制表位


</details>

<h3 id="然后下面是我认为会常用到的："><a href="#然后下面是我认为会常用到的：" class="headerlink" title="然后下面是我认为会常用到的："></a>然后下面是我认为会常用到的：</h3><h4 id="最常用的"><a href="#最常用的" class="headerlink" title="最常用的"></a>最常用的</h4><ul>
<li>Ctrl + D<br>  将当前选项卡另存为收藏夹</li>
<li>Ctrl + Shift + D<br>  在新文件夹中将所有打开的标签页另存为收藏夹</li>
<li>Alt + Shift + B<br>  将焦点放在收藏夹栏中的第一项上</li>
<li>Ctrl + F<br>  在页面上打开查找</li>
<li>Ctrl + Shift + Delete<br>  打开清除浏览数据选项<br>-Ctrl + Shift + E<br>  在边栏中打开搜索</li>
</ul>
<h4 id="使用以提高效率的"><a href="#使用以提高效率的" class="headerlink" title="使用以提高效率的"></a>使用以提高效率的</h4><ul>
<li>Ctrl + H<br>  打开历史记录 </li>
<li>Ctrl + J<br>  打开“下载”文件夹 </li>
<li>Ctrl + Shift + O<br>  打开收藏夹 </li>
<li>Ctrl + Shift + Y<br>  打开集合</li>
</ul>
<h3 id="标签页操作"><a href="#标签页操作" class="headerlink" title="标签页操作"></a>标签页操作</h3><ul>
<li><p>操作页面</p>
<ul>
<li><p>Ctrl + M</p>
<ul>
<li>将当前标签页设为静音（切换）</li>
</ul>
</li>
<li><p>Ctrl + P</p>
<ul>
<li>打印当前页</li>
</ul>
</li>
<li><p>Ctrl + S</p>
<ul>
<li>保存当前页</li>
</ul>
</li>
<li><p>Ctrl + R</p>
<ul>
<li>重新加载当前页</li>
</ul>
</li>
<li><p>Ctrl + Shift + R</p>
<ul>
<li>重新加载当前页，忽略缓存内容</li>
</ul>
</li>
<li><p>Esc</p>
<ul>
<li>停止加载页面；关闭对话框或弹出窗口</li>
</ul>
</li>
</ul>
</li>
<li><p>关闭页面</p>
<ul>
<li><p>Ctrl + N</p>
<ul>
<li>打开新窗口</li>
</ul>
</li>
<li><p>Ctrl + W</p>
<ul>
<li>关闭当前标签页</li>
</ul>
</li>
<li><p>Ctrl + Shift + W</p>
<ul>
<li>关闭当前窗口</li>
</ul>
</li>
</ul>
</li>
<li><p>新建页面</p>
<ul>
<li><p>Ctrl + Shift + N</p>
<ul>
<li>打开新的 InPrivate 窗口</li>
</ul>
</li>
<li><p>Ctrl + Shift + T</p>
<ul>
<li>重新打开上一个关闭的标签页并切换到该标签页</li>
</ul>
</li>
<li><p>Ctrl + T</p>
<ul>
<li>打开新标签页并切换到该标签页</li>
</ul>
</li>
<li><p>Ctrl + Shift + K</p>
<ul>
<li>复制当前标签页</li>
</ul>
</li>
</ul>
</li>
<li><p>切换页面</p>
<ul>
<li><p>Ctrl + 1, 2, … 8</p>
<ul>
<li>切换到特定标签页</li>
</ul>
</li>
<li><p>Ctrl + 9</p>
<ul>
<li>切换到最后一个标签页</li>
</ul>
</li>
<li><p>Ctrl + Tab</p>
<ul>
<li>切换到下一个标签页</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：for循环</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9Afor%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h3 id="简单for循环"><a href="#简单for循环" class="headerlink" title="简单for循环"></a>简单for循环</h3><p>for循环用来循环处理数据。<br>例：输出1~100的和</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clear</span><br><span class="line">&gt;&gt; sum = 0;</span><br><span class="line">&gt;&gt; for i = 1:100</span><br><span class="line">       sum = sum +i;</span><br><span class="line">   end</span><br><span class="line">&gt;&gt; sum</span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">        5050</span><br></pre></td></tr></table></figure>
<p>解释：i从1到100，每次增加一个，该共循环100次<br>注意：分号的位置；不能使用“+=”符号；每写一层循环，必须以end结尾</p>
<h3 id="带有步长的for循环"><a href="#带有步长的for循环" class="headerlink" title="带有步长的for循环"></a>带有步长的for循环</h3><p>例：输出1到10之间的奇数和</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;&gt; clear</span><br><span class="line">&gt;&gt; sum = 0;</span><br><span class="line">&gt;&gt; for i = 1:2:10</span><br><span class="line">       sum = sum + i;</span><br><span class="line">   end</span><br><span class="line">&gt;&gt; sum</span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">    25</span><br></pre></td></tr></table></figure>
<p>解释：i = 1:2:10中间的2表示步长，表示从1到10，每次增加2，即1，3，5，7，9五个数之和；步长也可以为负数</p>
<h3 id="对向量和矩阵的遍历"><a href="#对向量和矩阵的遍历" class="headerlink" title="对向量和矩阵的遍历"></a>对向量和矩阵的遍历</h3><ol>
<li>对向量的遍历</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clear</span><br><span class="line">&gt;&gt; A = rand(1,4);</span><br><span class="line">&gt;&gt; for i = A</span><br><span class="line">       i</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    0.9572</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    0.4854</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    0.8003</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    0.1419</span><br></pre></td></tr></table></figure>
<p>解释：rand函数用于随机生成0~1之间的数，rand(1,4)生成1*4的列向量。</p>
<ol>
<li>对矩阵的遍历</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A = magic(4);</span><br><span class="line">&gt;&gt; A</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">    16     2     3    13</span><br><span class="line">     5    11    10     8</span><br><span class="line">     9     7     6    12</span><br><span class="line">     4    14    15     1</span><br><span class="line"></span><br><span class="line">&gt;&gt; for i = A;</span><br><span class="line">       i</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    16</span><br><span class="line">     5</span><br><span class="line">     9</span><br><span class="line">     4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">     2</span><br><span class="line">    11</span><br><span class="line">     7</span><br><span class="line">    14</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line">    10</span><br><span class="line">     6</span><br><span class="line">    15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i =</span><br><span class="line"></span><br><span class="line">    13</span><br><span class="line">     8</span><br><span class="line">    12</span><br><span class="line">     1</span><br></pre></td></tr></table></figure>
<p>解释：magic(n)函数用于生成任意一行或一列或主副对角线之和相等的方阵，对矩阵的循环遍历是依次取出矩阵中的每一列元素</p>
<h3 id="break和continue的使用"><a href="#break和continue的使用" class="headerlink" title="break和continue的使用"></a>break和continue的使用</h3><p>break用于终止离它最近的一层for循环；<br>continue用于跳过离它最近的一层for循环，接着执行下一次循环</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x = 1;</span><br><span class="line">&gt;&gt; for i = 1:2:10</span><br><span class="line">       if i &gt; 7</span><br><span class="line">          break</span><br><span class="line">       else</span><br><span class="line">          x = x* i</span><br><span class="line">       end</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">    15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">   105</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; sum = 0;</span><br><span class="line">&gt;&gt; for i = 1:6</span><br><span class="line">       if i == 4</span><br><span class="line">          continue</span><br><span class="line">       else</span><br><span class="line">          sum = sum + i</span><br><span class="line">       end</span><br><span class="line">   end;</span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">     1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">     6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">    11</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum =</span><br><span class="line"></span><br><span class="line">    17</span><br></pre></td></tr></table></figure>
<h3 id="多层for循环"><a href="#多层for循环" class="headerlink" title="多层for循环"></a>多层for循环</h3><p>for循环可以按照需要进行嵌套。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; for i = 1:2:6</span><br><span class="line">       for j = 1:3</span><br><span class="line">           y = i * j</span><br><span class="line">       end</span><br><span class="line">   end</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">    15</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：函数</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>函数——是编程的核心概念之一，是能够完成相对独立功能的代码封装成的模块。</p>
<p>在主程序中通过函数名和实参调用它，通过接口（即函数的输入、输出参数）来实现“通讯”。所以在调用函数时，你只要知道“被调用的函数是用来做什么的”，以及“如何对应它的输入、输出参数”就行了。</p>
<span id="more"></span>
<p>关于形参（形式参数）和实参（实际参数）：函数定义中的参数就是形参，只是用来限定函数所接收的数据类型的，“泛指该数据类型下任一元素”；函数调用中的参数就是实参，是“特指的具体数值”来代入函数体执行代码。例如（C语言）：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line"></span><br><span class="line">&#123; <span class="keyword">if</span> (x &gt;= y)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> x;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> y; &#125;</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">max(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">max(a,b);</span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure>
<p>其中，x，y是形参，2, 3，a, b是实参。  </p>
<p>使用函数的好处：增加程序的可读性（函数可独立放在主程序之外）和重用性（一个函数可以多次被调用）。</p>
<p>Matlab的自定义函数，常用的有：m文件定义函数、inline（内联）函数、匿名函数。</p>
<h2 id="一、m文件定义函数（m-函数）"><a href="#一、m文件定义函数（m-函数）" class="headerlink" title="一、m文件定义函数（m-函数）"></a>一、m文件定义函数（m-函数）</h2><h3 id="1-Matlab函数的基本结构"><a href="#1-Matlab函数的基本结构" class="headerlink" title="1. Matlab函数的基本结构"></a>1. Matlab函数的基本结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function[输出形参表: output1, ...,outptn] = 函数名(输入形参表: input1, ... , inputn)</span><br><span class="line"></span><br><span class="line">注释说明部分</span><br><span class="line">函数体代码部分</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p><strong>说明</strong>：function：表示编写的是一个函数；</p>
<p>输出形参表，即函数的返回值，各返回值间用逗号隔开；（不需要像C语言那样，通过return到返回值来赋值，outp_args相应的参数可以直接使用）</p>
<p>函数名：需要和m文件名保持一致</p>
<p>输入形参列表：即函数的各输入参数，用逗号隔开；</p>
<p>函数体：完成函数的具体功能，是根据具体需要编写的；通过使用“函数的输入参数”、“自定义变量”、“流程控制结构”来实现；</p>
<p>end：表示此函数结束，也可省略。</p>
<h3 id="2-函数调用"><a href="#2-函数调用" class="headerlink" title="2. 函数调用"></a><strong>2. 函数调用</strong></h3><p>定义完的函数保存为同函数名的m文件，放置在Matlab的当前路径之下（或修改当前路径为m-函数文件所在路径），然后就和使用Matlab自带的函数一样，直接在命令窗口或程序代码中使用该函数就是调用它了。调用函数时，只需要知道函数是完成什么功能的，以及它的输入参数、输出参数。</p>
<p>函数调用的一般格式为：</p>
<p>[输出实参表]=函数名(输入实参表)</p>
<p>注1：函数中遇return语句时，将退出函数体，此函数调用结束；</p>
<p>注2：函数体里面也可以定义一个或几个函数，称为子函数；注意：子函数只能存在于主函数体内，不独立存在；子函数在主函数体内的位置可以任意，不影响使用；子函数只能被主函数以及其他位于同一主函数体下的子函数调用，但子函数“句柄”例外；</p>
<p>注3：在调用函数时，Matlab用两个永久变量nargin和nargout分别记录调用该函数时的输入实参和输出实参的个数。只要在函数文件中包含这两个变量，就可以准确地知道该函数文件被调用时的输入输出参数个数，从而决定函数如何进行处理。</p>
<p><strong>例**</strong>1** 函数（子函数）定义与调用示例，求向量的最大、最小值。</p>
<p>编写m-函数文件：max_min_values.m</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function [max,min] = max_min_values(X)</span><br><span class="line"></span><br><span class="line">%输入参数X为数值向量，返回其最大值和最小值</span><br><span class="line"></span><br><span class="line">max=mysubfun1(X);</span><br><span class="line"></span><br><span class="line">min=mysubfun2(X);</span><br><span class="line"></span><br><span class="line">function r=mysubfun1(X) %子函数1</span><br><span class="line"></span><br><span class="line">x1=sort(X, &#x27;descend&#x27;);</span><br><span class="line"></span><br><span class="line">r=x1(1);</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">function r=mysubfun2(X)  %子函数2</span><br><span class="line"></span><br><span class="line">x1=sort(X);</span><br><span class="line"></span><br><span class="line">r=x1(1);</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>调用函数（命令窗口）：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A = [34,56,23,11,2,39];</span><br><span class="line"></span><br><span class="line">[m,n]=max_min_values(A)</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong>： m = 56</p>
<p>n = 2</p>
<h2 id="二、内联函数"><a href="#二、内联函数" class="headerlink" title="二、内联函数"></a>二、内联函数</h2><p>可以让用户编写简单的函数而不需要创建M文件。语法格式：</p>
<p>f=inline(‘函数表达式’, ‘变量1’, ‘变量2’, ……)</p>
<p>调用方式：y=f(实参列表)</p>
<p>注意：实参列表顺序应与inline()定义中形参列表的顺序一致。</p>
<p>这种函数定义方式是将它作为一个内部函数调用。好处是，它是基于Matlab的数值运算内核的，所以它的运算速度较快，程序效率更高。缺点是，该方法只能对数值进行代入，不支持符号代入，且对定义后的函数不能进行求导等符号运算。</p>
<p>内联函数示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=inline(&#x27;x^2+y&#x27;,&#x27;x&#x27;,&#x27;y&#x27;)</span><br><span class="line"></span><br><span class="line">z=f(2,3)</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong>： f = Inline function: f(x,y) = x^2 + y  </p>
<p>z = 7</p>
<h2 id="二、匿名函数"><a href="#二、匿名函数" class="headerlink" title="二、匿名函数"></a>二、匿名函数</h2><p><strong>1.匿名函数基本语法</strong></p>
<p>匿名函数具有内联的所有优点，并且效率比更高。匿名函数的主要功能是：</p>
<p>（1）可以代替“将函数编写为单独的m-文件”；</p>
<p>（2）可以实现符号函数的赋值运算；</p>
<p>（3）很方便地对含参变量函数进行操作。</p>
<p>基本格式：</p>
<p>f=@(参数1, 参数2, …) 函数表达式</p>
<p>其中，@为句柄操作符，可以定义指向函数的句柄，函数句柄，可以理解成函数的“代号”，适用于函数名比较长，用“代号”代替函数操作更方便。</p>
<p>匿名函数示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=@(x,y)x^2+y^2;</span><br><span class="line"></span><br><span class="line">f(2,3)</span><br><span class="line"></span><br><span class="line">a=1:5;</span><br><span class="line"></span><br><span class="line">b=5:-1:1;</span><br><span class="line"></span><br><span class="line">c=0.1:0.1:0.5;</span><br><span class="line"></span><br><span class="line">g=@(x,y)x.^2+y.^2+c;</span><br><span class="line"></span><br><span class="line">g(a,b)</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong>： ans = 13  </p>
<p>ans = 26.1000 20.2000 18.3000 20.4000 26.5000</p>
<p>也可以定义二重匿名函数：例如，</p>
<p>f=@(a, b) @(x) a*x+b;</p>
<p>其中，“a, b”是外层变量，“x”是内层变量。</p>
<p>这样理解：每个“@”符号后面括号里的变量的作用域一直到表达式的结尾。例如对于“a=2, b=3”, f(2, 3)是以x为变量的匿名函数：</p>
<p>(f(2, 3))(x)=2*x+3</p>
<p>类似的可以定义多重匿名函数。</p>
<p><strong>2. 匿名函数的应用</strong></p>
<p><strong>(1) 求解参数方程</strong></p>
<p><strong>例**</strong>2** 对带参数a的参数方程：</p>
<p>$e^x+x^a+x^{\sqrt{x}}=100$e^x+x^a+x^{\\sqrt{x}}=100</p>
<p>要求针对a在[0,2]上的不同取值求解方程，并绘制方程的解x与a的关系的图像。</p>
<p><strong>代码</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=@(a) @(x) exp(x)+x^a+x^(sqrt(x))-100;</span><br><span class="line"></span><br><span class="line">%相当于(f(a))(x)=exp(x)+x^a+x^(sqrt(x))-100</span><br><span class="line"></span><br><span class="line">format long</span><br><span class="line"></span><br><span class="line">fzero(f(1),4) % a=1时，求解方程的根x，初始值为4</span><br><span class="line"></span><br><span class="line">A=0:0.01:2;</span><br><span class="line"></span><br><span class="line">x=@(a) fzero(f(a),4); %带着参数a求解方程的根x，得到x=x(a)</span><br><span class="line"></span><br><span class="line">X=@(A) arrayfun(@(a) x(a),A);</span><br><span class="line"></span><br><span class="line">% x(a)只能接受标量a，处理成能接受向量A</span><br><span class="line"></span><br><span class="line">Y=X(A);</span><br><span class="line"></span><br><span class="line">plot(A,Y)</span><br><span class="line"></span><br><span class="line">xlabel(&#x27;a&#x27;)</span><br><span class="line"></span><br><span class="line">ylabel(&#x27;x&#x27;)</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong>：ans = 4.315274301739397  </p>
<p><img src="https://pic4.zhimg.com/v2-0b758d9bdf605aa9305f321a2c090487_b.png" alt></p>
<p><strong>注</strong>：f(x)只能接受标量的自变量x，arrayfun函数对f做向量化处理使得f作用到向量自变量X上得到F(X). 语法：</p>
<p>F=arrayfun(f, X)</p>
<p>相当于用f作用到向量X的每个分量上。示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=@(x) 2*x;  %f(x)=2*x</span><br><span class="line"></span><br><span class="line">F=@(X) arrayfun(f,X);  %F(X)=2*X</span><br><span class="line"></span><br><span class="line">F(1:4)</span><br></pre></td></tr></table></figure>
<p>输出：ans = 2 4 6 8  </p>
<p><strong>(2)</strong> <strong>“显式”表示隐函数</strong></p>
<p>隐函数一般无法给出显式表达式，但借助匿名函数和求根函数fzero()可以实现“已知隐函数表达式，对于给定的自变量x，通过数值方法求出因变量y”。</p>
<p><strong>例**</strong>4<strong> </strong>“**显式”表示下列隐函数：</p>
<p>$z=\sin\big((zx-0.5)^2+2xy^2-\frac{z}{10}\big)\exp\Big\{-\big[x-0.5-\exp(-y+z)\big]^2+y^2-\frac{z}{5}+3 \Big\}$z=\\sin\\big((zx-0.5)^2+2xy^2-\\frac{z}{10}\\big)\\exp\\Big\\{-\\big[x-0.5-\\exp(-y+z)\\big]^2+y^2-\\frac{z}{5}+3 \\Big\\}</p>
<p>其“显式表示”为：</p>
<p>z=@(x,y) fzero(@(z) z-sin((z*x-0.5)^2+2*x*y^2-z/10) *exp(-((x-0.5-exp(-y+z))^2+y^2-z/5+3)),rand)</p>
<p>相当于求解满足该隐函数方程的z=z(x,y), 其中rand生成随机数作为初始值。</p>
<p><strong>代码：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">z=@(x,y) fzero(@(z) z-sin((z*x-0.5)^2+2*x*y^2-z/10) *exp(-((x-0.5-exp(-y+z))^2+y^2-z/5+3)),rand);</span><br><span class="line"></span><br><span class="line">z(2,0.5) %求x=2, y=0.5时的z值</span><br><span class="line"></span><br><span class="line">%绘制z(x,y)的图像</span><br><span class="line"></span><br><span class="line">[X,Y]=meshgrid(-1:0.1:7,-2:0.1:2);</span><br><span class="line"></span><br><span class="line">Z=arrayfun(@(x,y) z(x,y),X,Y);</span><br><span class="line"></span><br><span class="line">surf(X,Y,Z)</span><br><span class="line"></span><br><span class="line">xlabel(&#x27;x&#x27;)</span><br><span class="line"></span><br><span class="line">ylabel(&#x27;y&#x27;)</span><br><span class="line"></span><br><span class="line">zlabel(&#x27;z&#x27;)</span><br><span class="line"></span><br><span class="line">title(&#x27;函数z(x,y)的图像&#x27;)</span><br></pre></td></tr></table></figure>
<p><strong>运行结果</strong>：ans = 0.016721201334182  </p>
<p><img src="https://pic3.zhimg.com/v2-01f2a7d3dcef6b49c1db61d1e8f178ee_b.png" alt></p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ol>
<li><p>张志涌，精通Matlab2011a, 北京航空航天大学出版社  </p>
</li>
<li><p>吴鹏, MATLAB高效编程技巧与应用25个案例分析, 北京航空航天大学出版社</p>
</li>
</ol>
<p>作者：张敬信<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<p><a href="https://zhuanlan.zhihu.com/p/25530879">【Matlab基础】04. 自定义函数 - 知乎 (zhihu.com)</a></p>
]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：函数返回多个值</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9A%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%A4%9A%E4%B8%AA%E5%80%BC/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h3 id="Matlab：函数返回多个值"><a href="#Matlab：函数返回多个值" class="headerlink" title="Matlab：函数返回多个值"></a>Matlab：函数返回多个值</h3><p>在 MATLAB 中，函数可以返回多个值。要返回多个值，可以使用中括号将它们括起来，并用逗号分隔。以下是一个简单的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function [output1, output2] = myFunction(input1, input2)</span><br><span class="line">    % function code here</span><br><span class="line">    output1 = someValue1;</span><br><span class="line">    output2 = someValue2;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>在这个例子中，函数 <code>myFunction</code> 接受两个输入参数 <code>input1</code> 和 <code>input2</code>，并返回两个输出值 <code>output1</code> 和 <code>output2</code>。在函数的结尾处，使用 <code>output1</code> 和 <code>output2</code> 变量来存储要返回的值。</p>
<p>要调用这个函数并获取返回的值，可以使用以下语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[output1, output2] = myFunction(input1, input2);</span><br></pre></td></tr></table></figure>
<p>这将调用函数 <code>myFunction</code> 并将输入参数 <code>input1</code> 和 <code>input2</code> 传递给它。函数将计算输出值 <code>output1</code> 和 <code>output2</code>，并将它们分别赋值给变量 <code>output1</code> 和 <code>output2</code>。</p>
<h3 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h3><p>在 Matlab 中，可以通过在函数定义行中使用多个输入参数来实现函数接受多个输入。以下是一个简单的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function output = myFunc(input1, input2, input3)</span><br><span class="line">    % 在函数体内处理输入参数</span><br><span class="line">    output = input1 + input2 + input3;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：数组</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9A%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h2 id="（一）基本运算与矩阵输入"><a href="#（一）基本运算与矩阵输入" class="headerlink" title="（一）基本运算与矩阵输入"></a>（一）基本运算与矩阵输入</h2><h3 id="1-创建数组"><a href="#1-创建数组" class="headerlink" title="1 创建数组"></a>1 创建数组</h3><p>一维数组称为<strong>向量</strong>，二维数组称为<strong>矩阵</strong><br>可以使用中括号“[ ]”，直接输入数值来创建数组，也可以通过MATLAB内置函数来创建特殊数组</p>
<h4 id="1-1-直接创建"><a href="#1-1-直接创建" class="headerlink" title="1.1 直接创建"></a>1.1 直接创建</h4><p>元素间使用<strong>空格</strong>或者<strong>英文逗号</strong>间隔，使用<strong>英文分号</strong>执行换行操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;A=[1 2 3;4 5 6;7 8 9]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     1     2     3</span><br><span class="line">     4     5     6</span><br><span class="line">     7     8     9</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="1-2-内置函数创建特殊数组"><a href="#1-2-内置函数创建特殊数组" class="headerlink" title="1.2 内置函数创建特殊数组"></a>1.2 内置函数创建特殊数组</h4><ul>
<li><strong>zeros(m,n)</strong> ——创建m×n阶全零矩阵</li>
<li><strong>ones(m,n)</strong> ——创建m×n阶全幺阵</li>
<li><strong>rand(m,n)</strong> ——生成一个由介于 0 和 1 之间的均匀分布的随机数组成的 m×n 矩阵</li>
<li><strong>randi(imax,n)</strong> ——生成一个元素在区间 [1,imax] 的均匀离散分布的伪随机整数的 n×n 矩阵</li>
<li><strong>magic(n)</strong> ——生成n×n阶魔方矩阵</li>
<li><strong>diag(A)</strong> ——返回一个列向量，其元素为由矩阵A的对角线元素</li>
<li><strong>diag(V)</strong> ——V是一个向量（行向量、列向量结果相同），返回一个对角矩阵，其对角元素为向量V的元素</li>
</ul>
<p><strong>zeros(m,n)</strong> ——创建m×n阶全零矩阵</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; zeros(2,3)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     0     0     0</span><br><span class="line">     0     0     0</span><br></pre></td></tr></table></figure>
<p><strong>ones(m,n)</strong> ——创建m×n阶全幺阵</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; ones(2,3)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     1     1     1</span><br><span class="line">     1     1     1</span><br></pre></td></tr></table></figure>
<p><strong>rand(m,n)</strong> ——生成一个由介于 0 和 1 之间的均匀分布的随机数组成的 m×n 矩阵</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; rand(2,3)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    0.7655    0.1869    0.4456</span><br><span class="line">    0.7952    0.4898    0.6463</span><br></pre></td></tr></table></figure>
<p><strong>randi(imax,n)</strong> ——生成一个元素在区间 [1,imax] 的均匀离散分布的伪随机整数的 n×n 矩阵</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; randi(5,3)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3     2     5</span><br><span class="line">     1     5     2</span><br><span class="line">     1     2     5</span><br></pre></td></tr></table></figure>
<p><strong>magic(n)</strong> ——生成n×n阶魔方矩阵</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br></pre></td></tr></table></figure>
<p><strong>diag(A)</strong> ——返回一个列向量，其元素为由矩阵A的对角线元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; diag(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8</span><br><span class="line">     5</span><br><span class="line">     2</span><br></pre></td></tr></table></figure>
<p><strong>diag(V)</strong> ——V是一个向量（行向量、列向量结果相同），返回一个对角矩阵，其对角元素为向量V的元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[1 2 3];</span><br><span class="line">&gt;&gt; diag(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     1     0     0</span><br><span class="line">     0     2     0</span><br><span class="line">     0     0     3</span><br><span class="line"></span><br><span class="line">&gt;&gt; diag(A&#x27;)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     1     0     0</span><br><span class="line">     0     2     0</span><br><span class="line">     0     0     3</span><br></pre></td></tr></table></figure>
<h3 id="2-数组索引-Index"><a href="#2-数组索引-Index" class="headerlink" title="2 数组索引(Index)"></a>2 数组索引(Index)</h3><p>数组中的每个元素都有<strong>两个属性</strong>：<br>1）元素的值<br>2）元素在数组中的位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**注意：MATLAB数组索引从1开始！而不是0！！**</span><br></pre></td></tr></table></figure>
<p>以三阶魔方矩阵 <strong>A=[8 1 6;3 5 7;4 9 2]</strong> 为例</p>
<ul>
<li><strong>A(id)</strong> ——按列索引数组第id个元素</li>
<li><strong>A(m,n)</strong> ——返回数组A第m行第n列对应的元素</li>
<li><strong>A([l m n])</strong> ——返回一个行向量，元素为数组A第l、m、n个元素</li>
<li><strong>A(l m; p q)</strong> ——返回一个2×2阶矩阵，其元素第一行为数组A第l、m个元素，第二行为数组A第p、q个元素</li>
<li><strong>A(m, : )</strong> ——返回一个行向量，其元素为数组A第m行元素</li>
<li><strong>A(:, n)</strong> ——返回一个列向量，其元素为数组A第n列元素</li>
<li><strong>A([m n], p)</strong> ——返回数组A第m行、第n列与第p行相交的元素</li>
</ul>
<p><strong>A(id)</strong> ——按列索引数组第id个元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line"></span><br><span class="line">&gt;&gt; A(6)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     9</span><br></pre></td></tr></table></figure>
<p><strong>A(m,n)</strong> ——返回数组A第m行第n列对应的元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A(2,3)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     7</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>A([l m n])</strong> ——返回一个行向量，元素为数组A第l、m、n个元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A([1,3,5])</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8     4     5</span><br></pre></td></tr></table></figure>
<p><strong>A(l m; p q)</strong> ——返回一个2×2阶矩阵，其元素第一行为数组A第l、m个元素，第二行为数组A第p、q个元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A([1 3;1 3])</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8     4</span><br><span class="line">     8     4</span><br></pre></td></tr></table></figure>
<p><strong>A([m,n], [p,q])</strong> ——返回一个2×2阶矩阵，其元素为数组A第m行、第n行与第p列、第q列相交的元素，即[m,n]代表行(row)，[p,q]代表列(col)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A([1 3],[1 3])</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8     6</span><br><span class="line">     4     2</span><br></pre></td></tr></table></figure>
<p><strong>A(m,:)</strong> ——返回一个行向量，其元素为数组A第m行元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A(2,:)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3     5     7</span><br></pre></td></tr></table></figure>
<p><strong>A(:, n)</strong> ——返回一个列向量，其元素为数组A第n列元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A(:,2)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     1</span><br><span class="line">     5</span><br><span class="line">     9</span><br></pre></td></tr></table></figure>
<p><strong>A([m n], p)</strong> —— 返回数组A第m行、第n列与第p行相交的元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A([1 3], 2)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     1</span><br><span class="line">     9</span><br></pre></td></tr></table></figure>
<h3 id="3-数组运算"><a href="#3-数组运算" class="headerlink" title="3 数组运算"></a>3 数组运算</h3><h4 id="3-1-等差数组"><a href="#3-1-等差数组" class="headerlink" title="3.1 等差数组"></a>3.1 等差数组</h4><p><strong>A(l: m: n)</strong> ——生成一个<strong>等差数组</strong>，首项=l，等差=m(默认为1)，尾项=n</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[1:9]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     1     2     3     4     5     6     7     8     9</span><br><span class="line"></span><br><span class="line">&gt;&gt; B=[1:2:9]</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     1     3     5     7     9</span><br><span class="line"></span><br><span class="line">&gt;&gt; C=[1:2:5; 2:4]</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">     1     3     5</span><br><span class="line">     2     3     4</span><br></pre></td></tr></table></figure>
<h4 id="3-2-数组串联（合并）"><a href="#3-2-数组串联（合并）" class="headerlink" title="3.2 数组串联（合并）"></a>3.2 数组串联（合并）</h4><p><strong>C=[A B] ，C=[A; B]</strong> ——将<strong>维度一致</strong>的两个数组合并为一个数组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=[1 2; 3 4]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     1     2</span><br><span class="line">     3     4</span><br><span class="line"></span><br><span class="line">&gt;&gt; B=[5 6; 7 8]</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     5     6</span><br><span class="line">     7     8</span><br><span class="line"></span><br><span class="line">&gt;&gt; C=[A B]</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">     1     2     5     6</span><br><span class="line">     3     4     7     8</span><br><span class="line"></span><br><span class="line">&gt;&gt; C=[A;B]</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">     1     2</span><br><span class="line">     3     4</span><br><span class="line">     5     6</span><br><span class="line">     7     8</span><br></pre></td></tr></table></figure>
<h4 id="3-3-删除元素（删除某一行、某一列）"><a href="#3-3-删除元素（删除某一行、某一列）" class="headerlink" title="3.3 删除元素（删除某一行、某一列）"></a>3.3 删除元素（删除某一行、某一列）</h4><p><strong>A(m)=[ ]</strong> ——删除数组A第m个元素，并返回一个行向量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line"></span><br><span class="line">&gt;&gt; A(3)=[]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     3     1     5     9     6     7     2</span><br></pre></td></tr></table></figure>
<p><strong>A(m, :)=[ ]</strong> ——返回删除数组A第m行后缩短的数组（列操作同理）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line">&gt;&gt; A(2,:)=[]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     4     9     2</span><br></pre></td></tr></table></figure>
<h4 id="3-4-数组操作"><a href="#3-4-数组操作" class="headerlink" title="3.4 数组操作"></a>3.4 数组操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组操作符：+  -  *   /   ^   .   &#x27;</span><br></pre></td></tr></table></figure>
<p><strong>1. 数组A与标量a</strong></p>
<ul>
<li><strong>A+a, A-a</strong> ——数组A的每个元素加 a、减 a</li>
<li><strong>A*a</strong> ——数组A每个元素乘 a</li>
<li>A.*a ——数组A每个元素乘 a</li>
<li><strong>A/a</strong> ——数组A每个元素除以 a</li>
<li><strong>A./a</strong> ——数组A每个元素除以 a</li>
<li><strong>A^a</strong> ——a个数组A相乘</li>
<li><strong>A.^a</strong> ——数组A的每个元素进行a次方</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line"></span><br><span class="line">&gt;&gt; a=2;</span><br><span class="line">&gt;&gt; A+a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    10     3     8</span><br><span class="line">     5     7     9</span><br><span class="line">     6    11     4</span><br><span class="line"></span><br><span class="line">&gt;&gt; A-a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     6    -1     4</span><br><span class="line">     1     3     5</span><br><span class="line">     2     7     0</span><br><span class="line"></span><br><span class="line">&gt;&gt; A*a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    16     2    12</span><br><span class="line">     6    10    14</span><br><span class="line">     8    18     4</span><br><span class="line"></span><br><span class="line">&gt;&gt; A.*a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    16     2    12</span><br><span class="line">     6    10    14</span><br><span class="line">     8    18     4</span><br><span class="line"></span><br><span class="line">&gt;&gt; A/a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    4.0000    0.5000    3.0000</span><br><span class="line">    1.5000    2.5000    3.5000</span><br><span class="line">    2.0000    4.5000    1.0000</span><br><span class="line"></span><br><span class="line">&gt;&gt; A./a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    4.0000    0.5000    3.0000</span><br><span class="line">    1.5000    2.5000    3.5000</span><br><span class="line">    2.0000    4.5000    1.0000</span><br><span class="line">    </span><br><span class="line">&gt;&gt; A^a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    91    67    67</span><br><span class="line">    67    91    67</span><br><span class="line">    67    67    91</span><br><span class="line"></span><br><span class="line">&gt;&gt; A.^a</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    64     1    36</span><br><span class="line">     9    25    49</span><br><span class="line">    16    81     4</span><br></pre></td></tr></table></figure>
<p><strong>2. 数组与数组</strong></p>
<ul>
<li><strong>A+B, A-B</strong> ——数组A、B对应元素向加减</li>
<li><strong>A*B</strong> ——数组A左乘数组B</li>
<li>A.*B ——数组A与数组B对应元素相乘</li>
<li><strong>A/B</strong> ——A/B≈A_inv(B)，其中A_inv(B)中的B必须为方阵</li>
<li><strong>A./B</strong> ——数组A除以数组B的对应元素</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line"></span><br><span class="line">&gt;&gt; B=randi(5,3)</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     1     4     1</span><br><span class="line">     3     5     5</span><br><span class="line">     5     4     5</span><br><span class="line"></span><br><span class="line">&gt;&gt; A+B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     9     5     7</span><br><span class="line">     6    10    12</span><br><span class="line">     9    13     7</span><br><span class="line"></span><br><span class="line">&gt;&gt; A-B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     7    -3     5</span><br><span class="line">     0     0     2</span><br><span class="line">    -1     5    -3</span><br><span class="line"></span><br><span class="line">&gt;&gt; A*B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    41    61    43</span><br><span class="line">    53    65    63</span><br><span class="line">    41    69    59</span><br><span class="line"></span><br><span class="line">&gt;&gt; A.*B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8     4     6</span><br><span class="line">     9    25    35</span><br><span class="line">    20    36    10</span><br><span class="line"></span><br><span class="line">&gt;&gt; A/B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">   -0.8750   -1.0000    2.3750</span><br><span class="line">   -0.8125    2.0000   -0.4375</span><br><span class="line">    2.6250   -1.0000    0.8750</span><br><span class="line"></span><br><span class="line">&gt;&gt; A./B</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    8.0000    0.2500    6.0000</span><br><span class="line">    1.0000    1.0000    1.4000</span><br><span class="line">    0.8000    2.2500    0.4000</span><br></pre></td></tr></table></figure>
<p><strong>3.矩阵运算</strong></p>
<ul>
<li><ul>
<li><strong>B’</strong> ——矩阵B转置</li>
</ul>
</li>
<li><strong>rank(B)</strong> ——矩阵B的秩</li>
<li><strong>inv(A)</strong> ——方阵A求逆</li>
<li><strong>det()</strong> ——方阵A的行列式</li>
<li><strong>size(A)</strong> —— [[matlab：获取数组的大小]]返回一个行向量，其元素是 A 的相应维度的长度，即A的大小</li>
<li><strong>length(A)</strong> ——返回A中最大维度的长度。对于向量，长度仅仅是元素数量。对于具有更多维度的数据，长度为 max(size(X))。空数组的长度为零。</li>
<li><strong>D=eig(A)</strong> ——返回方阵A的特征值D</li>
<li><strong>[V D]=eig(A)</strong> ——返回方阵A的特征值D和特征向量V</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A=magic(3)</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     8     1     6</span><br><span class="line">     3     5     7</span><br><span class="line">     4     9     2</span><br><span class="line">     </span><br><span class="line">&gt;&gt; A&#x27;</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     8     3     4</span><br><span class="line">     1     5     9</span><br><span class="line">     6     7     2</span><br><span class="line"></span><br><span class="line">&gt;&gt; rank(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line">     </span><br><span class="line">&gt;&gt; inv(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    0.1472   -0.1444    0.0639</span><br><span class="line">   -0.0611    0.0222    0.1056</span><br><span class="line">   -0.0194    0.1889   -0.1028</span><br><span class="line"></span><br><span class="line">&gt;&gt; det(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">  -360</span><br><span class="line"></span><br><span class="line">&gt;&gt; size(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3     3</span><br><span class="line"></span><br><span class="line">&gt;&gt; length(A)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">     3</span><br><span class="line"></span><br><span class="line">&gt;&gt; D=eig(A)</span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">   15.0000</span><br><span class="line">    4.8990</span><br><span class="line">   -4.8990</span><br><span class="line"></span><br><span class="line">&gt;&gt; [V D]=eig(A)</span><br><span class="line"></span><br><span class="line">V =</span><br><span class="line"></span><br><span class="line">   -0.5774   -0.8131   -0.3416</span><br><span class="line">   -0.5774    0.4714   -0.4714</span><br><span class="line">   -0.5774    0.3416    0.8131</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">   15.0000         0         0</span><br><span class="line">         0    4.8990         0</span><br><span class="line">         0         0   -4.8990</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：条件与循环</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9A%E6%9D%A1%E4%BB%B6%E4%B8%8E%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<p>一、语法知识</p>
<p>1、循环控制语句：</p>
<p>1）for~end：用于要求重复多次执行for与end之间的程序语句。允许嵌套。其一般格式为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for 变量 = 起始值 ：增量 ：终点</span><br><span class="line"></span><br><span class="line">	程序语句</span><br><span class="line"></span><br><span class="line">end 	%一般要输出循环运算结果，还应在end后加“，变量名”，运行时按enter键</span><br></pre></td></tr></table></figure>
<p>2）while~end：与c++类似，while也不规定循环次数，其终止时刻由while后面的条件表达式决定，若条件成立，则重复执行while与end之间的程序语句，否则结束循环。其一般格式为<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while 条件表达式</span><br><span class="line"></span><br><span class="line">	程序语句</span><br><span class="line"></span><br><span class="line">end 		  %与for~end语句类似，要想输出运算结果，在end后加“，变量名”，再按enter键</span><br></pre></td></tr></table></figure><br>2、条件选择语句</p>
<p>1）if~end：其一般格式为<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 逻辑表达式</span><br><span class="line"></span><br><span class="line">	程序语句</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><br>2）if~elseif~···~else~end：elseif~else是进一步的if条件语句，其一般格式为<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if 逻辑表达式1</span><br><span class="line"></span><br><span class="line">   程序语句1</span><br><span class="line"></span><br><span class="line">elseif 逻辑表达式2</span><br><span class="line"></span><br><span class="line">  程序语句2</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">  程序语句n</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">【注意：在多分支条件选择语句中，if和elseif是互相独立且互相排斥的条件选择语句，else后的语句执行的条件是先前所有的条件语句均不成立】</span><br></pre></td></tr></table></figure>
<p>3）switch~end：开关语句是一种多分支条件选择语句，他执行特定选择语句，当且仅当变量或表达式的值相符。其一般格式为<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">switch 表达式</span><br><span class="line">	</span><br><span class="line">	case值1</span><br><span class="line">	程序语句</span><br><span class="line">	</span><br><span class="line">	case值2</span><br><span class="line">	程序语句</span><br><span class="line">	</span><br><span class="line">	······</span><br><span class="line">	</span><br><span class="line">	otherwise</span><br><span class="line">	程序语句</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab：在函数里使用“全局变量”</title>
    <url>/2023/12/08/1.Archieve/Matlab%EF%BC%9A%E5%9C%A8%E5%87%BD%E6%95%B0%E9%87%8C%E4%BD%BF%E7%94%A8%E2%80%9C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E2%80%9D/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h3 id="Matlab：在函数里使用“全局变量”"><a href="#Matlab：在函数里使用“全局变量”" class="headerlink" title="Matlab：在函数里使用“全局变量”"></a>Matlab：在函数里使用“全局变量”</h3><p>函数里的变量自在函数内有效, 那么如何在函数内调用外部的变量呢?</p>
<ol>
<li>全局变量 global<br>global可以定义全局变量, 但要注意先定义, 再赋值. 否则会有警告:</li>
</ol>
<blockquote>
<p>Warning: The value of local variables may have been changed to match the globals. Future versions of <a href="https://so.csdn.net/so/search?q=MATLAB&amp;spm=1001.2101.3001.7020">MATLAB</a> will require that you declare a variable to be global before you use that variable.</p>
</blockquote>
<p>并且需要在你写的函数里面声明使用全局变量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global x</span><br><span class="line">x=5;</span><br><span class="line"></span><br><span class="line">subfunc % 输出为5</span><br><span class="line"></span><br><span class="line">function output=subfunc</span><br><span class="line">global x % 在使用全局变量时, 要先声明</span><br><span class="line">output=x;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">clear global x % 清除全局变量</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol>
<li>使用子函数</li>
</ol>
<p>子函数默认可以调用其母函数中所有的变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> main</span><br><span class="line">x=5;</span><br><span class="line">subfunc</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> output=subfunc</span><br><span class="line"></span><br><span class="line">output=x;</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>执行 main, 输出5. 子函数共享父函数的变量</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/yq_forever/article/details/112284579">Matlab之在函数里使用外部变量:全局变量和嵌套函数_matlab function 模块如何引用外部变量_Regnaiq的博客-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2023/10/27/1.Archieve/My-New-Post/</url>
    <content><![CDATA[<p>[[___test]]</p>
<h2 id="这只是个尝试"><a href="#这只是个尝试" class="headerlink" title="这只是个尝试"></a>这只是个尝试</h2><h3 id="1-markdown支持基本的文字"><a href="#1-markdown支持基本的文字" class="headerlink" title="1.markdown支持基本的文字"></a>1.markdown支持基本的文字</h3><p>比如： <strong>加粗</strong></p>
<h3 id="2-使用更多的定制化功能"><a href="#2-使用更多的定制化功能" class="headerlink" title="2.使用更多的定制化功能"></a>2.使用更多的定制化功能</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">创建代码格</span><br></pre></td></tr></table></figure>
<blockquote>
<p>创建引用格</p>
<ul>
<li>a,b,c.<br>感觉挺好用的。 </li>
</ul>
</blockquote>
<pre><code>    可以尝试缩进
</code></pre><h3 id="3-分条列点"><a href="#3-分条列点" class="headerlink" title="3.分条列点"></a>3.分条列点</h3><ul>
<li>1.啊吧啊吧吧</li>
<li>2.阿八八八</li>
</ul>
<h3 id="4-引用图片"><a href="#4-引用图片" class="headerlink" title="4.引用图片"></a>4.引用图片</h3><p><img src="https://www.hust.edu.cn/images/22/ct1.png" alt="Tux, the Linux mascot"></p>
<h3 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h3><hr>
<hr>
<hr>
<h3 id="6-引用链接"><a href="#6-引用链接" class="headerlink" title="6.引用链接"></a>6.引用链接</h3><p>这是一个链接 <strong><a href="https://markdown.com.cn" title="最好的markdown教程">Markdown语法</a></strong></p>
<p><a href="https://markdown.com.cn">https://markdown.com.cn</a><br><a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x66;&#97;&#x6b;&#101;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#111;&#x6d;">&#x66;&#97;&#x6b;&#101;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#111;&#x6d;</a></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>WINDOWS-11-22H2-新特性和变化详解</title>
    <url>/2023/11/13/1.Archieve/WINDOWS-11-22H2-%E6%96%B0%E7%89%B9%E6%80%A7%E5%92%8C%E5%8F%98%E5%8C%96%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>[[<strong>_设备]]<br>[[_</strong>效率工具]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;WINDOWS-11-22H2-新特性和变化详解&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;UI变化&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;快捷设置窗口的音乐可以调整设备的详细内容了&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;文件管理器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;ui变化&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;现在文件可以直接在底下拖拽到别的应用打开了&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;c+s+v&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;复制文件路径&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;多任务&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;alt+tab   ui变化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;加了个毛玻璃效果&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;分屏&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;显示背景以便于识别&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;储存空间的ui改了&quot;}]}]}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>
### WINDOWS-11-22H2-新特性和变化详解

#### UI变化

#### 快捷设置窗口的音乐可以调整设备的详细内容了

#### 文件管理器

##### ui变化

##### 现在文件可以直接在底下拖拽到别的应用打开了

##### c+s+v


- 复制文件路径

#### 多任务

##### alt+tab   ui变化

- 加了个毛玻璃效果

##### 分屏

- 显示背景以便于识别

#### 设置

##### 储存空间的ui改了

</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>效率工具</tag>
        <tag>设备</tag>
      </tags>
  </entry>
  <entry>
    <title>PLAN：备考-四级英语</title>
    <url>/2023/10/31/1.Archieve/PLAN%EF%BC%9A%E5%A4%87%E8%80%83-%E5%9B%9B%E7%BA%A7%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="70e51c8d6386b4a29cc3764f454cb91748dab5e02ec7c47ecf3cdcd6bf5ef2f7">e236de9be9a592a0152d0d7f6b18eec6bd2e02dee9dfc07d7a687148e1ed06d0febe699edd8d83176fcfaae44d3b9b94d35118b43b551e930e560793e426c856e9462f2545ce5a40c52c82bc9dc6d7825c02010b19769945d70bcf84adecce0757580e7e8fcce5739cfd1a4937710950aba6958e506dd735e5b478cc3961160882984c5d79e4b302b983c17178b23907c790904e344d7633b1098a59587f22956950a17d5ccacaa97314ab40492a9ba6bd61a4b4dc16510a029b197c2d03b7bd66e2d127938c94b2c234cd365c69f63db96b49927f7ae3a4031eb1184bdb85243e47461c0f6a83ffadb1895a540d5c0640549b8802610c17c058cd95e66c8787c0a705d92fc2e1243db0981f6e71f0b2bc6711489b8361592363f4b05cb12cd90fdb518e5be0af412c82f004c883c575becc995ccfb3f03862d3bbb7484b3486dd8e1063e4593f7e7238e0ba0515c2c60b08d0f29036ae49f6e70d3ff598b9f0a5b37199ce0d8176761eac948bd0767d71bc5470647a4ac583c3f3dc5538a960ba30f4238d8804cae9427ad427c6953f2412680775152eaf0c413c859e43e3d20c2e59b9b4d40aa7925e8e2c427bcde8f4c16454b57ac366e031884810d8894f557c38a743314606aa6f15b9294ed105bb01d09b1a7313953dd9b123ba45326109d5fc4d4739876188149f72b0cfb965e0d93d1f83ae7af622ab0e1cb33e91b5f926b0331f69dd66380f03b7fa670fbd6d85308a181f280a3187128738e35fe67e9ba8561123ee0e8ea69013fc5cea4d3bf1fd9a6fe4e4a660cf8511c805d2687eb140dea7125be324c6e0c1984afe872cc482501c2fd3254c39c8019f4786338226934ea591f5691f04b98605928578423f3cde8550709d2d1b4586c21582129dc2eb79cdfc94fc76f7f2c1c508b6834d0a9303dc1a0064f4fbe0875f17a7a06c76c1768aede9c2af711f611e521d168668c6970ea3dd53cbdaa267c70e185db15415607fd63f933e2602c3f52ba750c6000e85d55b5d0decfed4cc1174d1c9a8884f035ab0877424d36e77402b08025251880c0606f832014efb6f266c18dde603b993d5291949c1abebf2a3936838617f972a76cde666647acb66cbdaaee1c8aec4845f54358e6d925f59fed8826c0d324874c26fc7f51b9cf1b893f77604e97a4cc7fec077ea5d3adc252a0f7e1c44b7481892389abc83de9865023523dc0eaba1f7bed5ff081a66de5f6f946bad7d85697de8391218063aff24c616adf3f934432a6bf18ba67f46937c5b7c9ba9085bc8822bf83a6a2e22a618d6bd1120e438d62effc757ddb5791f8a5ad8abda5502633a39980a623da676b55f2443e01b20b5ce510ad6cd954ed2dd560b5581e36962042701b2e95d1fe047de69ec9fa0a2fa23331a1e0ff8fcb72ed3498cca280344a838070887bf1f6c0d99393af25fd549a39c5361205a993424634ed9b0705dcb852da18b0350069f0deac1c4b2255cc4328a149b64aa6bdf35e9407a8e10a84e4ab2ee75562c117bebb54bc68e3357d8b36b2f571a5bf0c83c0eb37b39feffb8494df1328f6dedf99cdd3d11eed063ca36e360bf730d7711a8c67c26cb94940390591fd64dc1e52b33790c098b07e5d6fbbfe6558c2622e4814bd6c24e7ea15d92b55e1795bc9a6cbedf32dd3cd51542282c52cbfb6652f0a42463019a0e04c5c3918e0237d70308c52a234a50705b59776edaa1034e82151910fe1f0098ee9fdaef7fa63b1a07990dbb22c4e66af20e88d41f84891d5c65ecd5266b3e316522e590d15efa34bb5a2ba07922fbaf37d0221616ed56a03848782e943d060242196e30cb56e056fb25734d676c5bb32e1a5bd3fe7f862e03bb0bf0bb00f7922a212f97f0b99ede17e15d8156d39d6ab471bac44a66f310641c080f4068fe29ca0af259425a7bce8d4ec1fc8461d6d91189af98a7f07cbc7873548614f01f1ebd7119febd41e6ada82d20449d58680cefb38a58728ee8c9530a22cf599b6f4613ea9fe5673209fe35ba1383264f8b6fc6f15d98701bd6f87476e89052c5bc12fca470a9d930424c0c1bd9d4ed7b7e76a57a291125336344624faac489d0a6808f882afb69eb3c444b858e0b41cb46f1a81061428fb4093f2907ec83e5cb9a11fe12c64620f499c2e77d5dbd262e90f37a8356f5909b0ae11dc1f5cda90dd1fea59e89aff4aeb56bd43f9b38d2e25d1ab1373f011da195a2c694812c68c014991fabca072656c50cbc89a5c282bb96f4599e4c14978a4cd4afef26af32f12d8dc743d658ce4aea62012ea6928266f562dabd4507ef88117fd5067f46f31dd57dd3eb011ddba66c09a7301d4a2170a26f3e209e71dede64e38bae1e79250e51479623ec2bf0591345adffded62e517c4dd3e542c177c2767744ee165c99b55f0f3f5c5140cb4d3ee81ecd4798608c9b83a2aa5d9469e0c1351b562a03915120d0db97fba67d8462a86ef6619bc367e41477ec31536a445c421b7ad832a13371030aa9a772534f98952d412d7a0320d09b69c2a7f7a4cb4e1b96dd15115a666b132300aac3c4658cf548d0f7197d5757e265038331d6a1f529e21b03b14b4a7d1dd1932a8d4d96b1396ede24eb2f3b13858b06ab155d40c03fd3b6bbf4a8364753ebece36df5ca23f006994c08ff88b40535a662f15cbd6b7a74d4948412789e834752567100956ff5436358c907aac155938c969cb7a52c8d5c219e16ba329d7c26a7ae1cb6a4d39eed5a71531bf7a2418865c7b8a602ad0622879a14bb544cc8a99625d36cf658a3be1c23221b9b65a9f373a3e32e255a6be6c253e105de907fb7253b26587fd4803eb7df9972b4fd36b49728fc5d0b2b420999db0c79ea3d9b273be6aa319f09db015da66ebf5c42ce22d45b31f27b30ac4053a3536ec4b4ffe26d0470b412f93dc96ec915f6f42637456b170eef6495742e019731f9e9bc5a59f7af4adb2e23da4c05434ca89b6a9edb2048d4136d6dca681cf3518c00191147bb10073f36d41300101803d5eae8ffb3bf36361e28c18f3d0843c4f5c8455a8c42b350727b684c10b65b5ddc7c7cd392e79c9997778cd73a204e44fdfd49b8a36fbb286de0ea1b095684947b2b2ac24972b8dc1b81b3c91de1155a0a549cc1a1de4a43736d5e67275fdc57b1811667c12b3e06250a7cabb61ea0545bd8704ec4fffc6abf2ee9ab82b9ec01a45381117eae329862165308956f934a35eb587eee245c8656553f47fd00900934db17e3fe922c36ebdcbc731bf939eb4379361b91d956a2534ceefe32f136c7a90bc3d1c8bc071be165cce4f751cd03abd62058b2a59d779625354054cab873b4e62f1f5e44a7580282331a6a42450cfd7c4752299936a294af0ed0f1cc60c5be409948d788efd9413767b3a35c3f1d47d151ce03cd464f2dfa5143c99866b7794f29e239158060daa65cfb5280065b84e88a873e47cb6d3968da1618079fed36a95deda4d30585324a6c0488b98512f76875b96dc229f4c4f4970c858e38662d45cf20feb9117c9bd3fb1975d45ebb1920bbcee49f0b7c98960978813a4180256d1619506bb943ff467d187975a58f035c5f9d06105eb51dd1b07a3a3b90b9f721ebd136d813f4e046d3cd4e577a43a3bcf21c2b1962441c8b103e95851115c4193dc4906b4ba83577618bfbffa17a1be7d0f7a4101c07d99bc38ffdf3ce6f32bef28ee2e47d31ef23ddc9c98dfbe0987e30898fe401b2775a887f41c4eacb7670a796f0dcba33c068005df7d13cdaa645fabd610c7f71253a00b92b7d5b89d306064e2528585433712982948e7a193b01490260f72406dfddb1ebf8d8955d3d9d3ff2ae5ef275631a8d865434351b6ba784</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密�?.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>大学</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>js-函数构造</title>
    <url>/2023/11/25/1.Archieve/js-%E5%87%BD%E6%95%B0%E6%9E%84%E9%80%A0/</url>
    <content><![CDATA[<p>[[___JS]]</p>
<h3 id="普通函数的构造"><a href="#普通函数的构造" class="headerlink" title="普通函数的构造"></a>普通函数的构造</h3><h3 id="自启动函数"><a href="#自启动函数" class="headerlink" title="自启动函数"></a>自启动函数</h3><p>其实就是 js中页面加载完成立即执行函数<sup><a href="#fn_1" id="reffn_1">1</a></sup></p>
<h4 id="一、javascript"><a href="#一、javascript" class="headerlink" title="一、javascript"></a>一、javascript</h4><ol>
<li>直接在标签里写</li>
</ol>
<p><body onload="func()"></body></p>
<ol>
<li>js中window.onload调用    //整个window加载完成后执行<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">/* window.onload调用*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span>=func <span class="comment">//不要括号</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">fun1</span>();</span><br><span class="line">    <span class="title function_">fun2</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>二、jQuery   //document加载完成后就执行   </p>
<ol>
<li><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">  alert();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>注：document执行顺序大于window大于onload</p>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://blog.csdn.net/weixin_43394109/article/details/84787264#:~:text=%E4%B8%80.javascript1.%E7%9B%B4%E6%8E%A5%E5%9C%A8%E6%A0%87%E7%AD%BE%E9%87%8C%E5%86%99%3Cbody%20onload%3D%22func%20%28%29%22%3E%3C%2Fbody%3E2.js%E4%B8%ADwindow.onload%E8%B0%83%E7%94%A8%20%2F%2F%E6%95%B4%E4%B8%AAwindow%E5%8A%A0%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E6%89%A7%E8%A1%8Cfunction%20func,%28%29%20%7B%20%2F%2A%20window.onload%E8%B0%83%E7%94%A8%2A%2F%7Dwindow.onload%3Dfunc%20%2F%2F%E4%B8%8D%E8%A6%81%E6%8B%AC%E5%8F%B7window.onload%3Df..._js%E5%9C%A8%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%AF%95%E5%90%8E%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0">js中页面加载完成立即执行函数的写法_js在启动完毕后执行函数-CSDN博客</a> <a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>Zettelkasten笔记系统的搭建</title>
    <url>/2023/11/10/1.Archieve/Zettelkasten%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>

<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=90978812&cid=155358422&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe>
</div>


<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;p&quot;:{}}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>

</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>bilibili归档</tag>
      </tags>
  </entry>
  <entry>
    <title>js-radio表单结构</title>
    <url>/2023/11/25/1.Archieve/js-radio%E8%A1%A8%E5%8D%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>[[___JS]]</p>
<h3 id="js-radio表单结构"><a href="#js-radio表单结构" class="headerlink" title="js-radio表单结构"></a>js-radio表单结构</h3><p>该类型下面有以下方法：</p>
<h4 id="1-radioObject-click"><a href="#1-radioObject-click" class="headerlink" title="1. radioObject.click()"></a>1. radioObject.click()</h4><p>click() 方法用于在单选按钮上模拟一次鼠标点击：</p>
<h4 id="2-radioObject-checked"><a href="#2-radioObject-checked" class="headerlink" title="2. radioObject.checked"></a>2. radioObject.checked</h4><p>这个是直接改变按钮的状态，而不触发click事件（有点像将链接标记为已经按过，但是）。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>将nodeList像数组一样进行操作</title>
    <url>/2023/11/25/1.Archieve/js-%E5%B0%86nodeList%E5%83%8F%E6%95%B0%E7%BB%84%E4%B8%80%E6%A0%B7%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>[[___JS]]<br>因为divs是nodeList而不是array<br><strong>nodeList是只读的，反映的是文档节点的实时结构</strong>;<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(divs instanceof Array);; //false</span><br><span class="line">console.log(divs instanceof NodeList);//true</span><br></pre></td></tr></table></figure><br>要想把nodeList像数组一样操作，得先把divs转换为array；<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var divsArray = Array.prototype.slice.call(divs,0);</span><br></pre></td></tr></table></figure></p>
<p>然后，交换“位置”，注意，<strong>这只是交换两个节点对象在数组中的位置，而不是在DOM中的位置</strong>；<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&quot;before:&quot;,divsArray);//[div#test, div#test2] </span><br><span class="line">var temp = divsArray[0];</span><br><span class="line">divsArray[0] = divsArray[1];</span><br><span class="line">divsArray[1] = temp;</span><br><span class="line">console.log(&quot;after:&quot;,divsArray);//[div#test2, div#test] </span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<hr>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>js-获取标签元素data-xxx属性值的方法</title>
    <url>/2023/11/25/1.Archieve/js-%E8%8E%B7%E5%8F%96%E6%A0%87%E7%AD%BE%E5%85%83%E7%B4%A0data-xxx%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>[[___JS]]</p>
<h3 id="js-获取标签元素data-xxx属性值的方法"><a href="#js-获取标签元素data-xxx属性值的方法" class="headerlink" title="js-获取标签元素data-xxx属性值的方法"></a>js-获取标签元素data-xxx属性值的方法</h3><p>标签上有两个属性<code>data-id</code> 和 <code>data-user-name</code>, 需要通过js去获取</p>
<p>个人认为较为好用的方法为：使用getAttribute/setAttribute/removeAttribute ，较为直观和易读。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> user = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#user&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-id&quot;</span>)); <span class="comment">// 666</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-user-name&quot;</span>)); <span class="comment">// Tom</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> user.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-id&quot;</span>)); <span class="comment">// string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值</span></span><br><span class="line">user.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-id&quot;</span>, <span class="number">777</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增属性</span></span><br><span class="line">user.<span class="title function_">setAttribute</span>(<span class="string">&quot;data-age&quot;</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除属性</span></span><br><span class="line">user.<span class="title function_">removeAttribute</span>(<span class="string">&quot;data-user-name&quot;</span>);</span><br><span class="line"><span class="comment">// &lt;div id=&quot;user&quot; data-id=&quot;777&quot; data-age=&quot;23&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/mouday/article/details/124921672">js: 获取标签元素data-*属性值的方法_js获取元素指定属性值的方法_彭世瑜的博客-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab：三角函数的运用</title>
    <url>/2023/12/08/1.Archieve/matlab%EF%BC%9A%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%90%E7%94%A8/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<h3 id="matlab：三角函数的运用"><a href="#matlab：三角函数的运用" class="headerlink" title="matlab：三角函数的运用"></a>matlab：三角函数的运用</h3><p>matlab里三角函数有sin,cos,tan,csc,sec和cot,是弧度制；<br>如，sin(pi/2)=1；</p>
<p>sind,cosd,tand是角度制；<br>如，sind(90)=1；</p>
<p>asin,acos,atan是弧度制反三角函数；</p>
<p>asind,acosd,atand是角度制反三角函数；</p>
<p>sinh,cosh,tanh是双曲函数</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab：停止、报错：控制程序的走向</title>
    <url>/2023/12/08/1.Archieve/matlab%EF%BC%9A%E5%81%9C%E6%AD%A2%E3%80%81%E6%8A%A5%E9%94%99%EF%BC%9A%E6%8E%A7%E5%88%B6%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%B5%B0%E5%90%91/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<blockquote>
<p>在写脚本的时候用到这些功能并不多，但是偶尔还是需要用到，每次都得重新查……这次整理一下记录几个常见的控制程序走停的函数pause、input、error、warning、quit、exit、。</p>
</blockquote>
<span id="more"></span>
<h1 id="matlab：停止、报错：控制程序的走向"><a href="#matlab：停止、报错：控制程序的走向" class="headerlink" title="matlab：停止、报错：控制程序的走向"></a>matlab：停止、报错：控制程序的走向</h1><h2 id="一、停止"><a href="#一、停止" class="headerlink" title="一、停止"></a>一、停止</h2><h3 id="1、pause"><a href="#1、pause" class="headerlink" title="1、pause"></a><strong>1、pause</strong></h3><p>在执行脚本文件过程中可以让脚本暂停；<br>用法：<br>①pause：暂停，等待用户按下任意键继续；<br>②pause(n)：暂停n秒，然后继续。</p>
<h3 id="2、input"><a href="#2、input" class="headerlink" title="2、input"></a><strong>2、input</strong></h3><p>input()也可以让脚本暂停，等待用户输入后继续执行脚本；<br>用法：<br>① y = input(‘请输入：’); 只能输入数字；<br>② y = input(‘请输入：’, ‘s’)； 将输入转化为字符串；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reply = input(&#x27;Do you want more? Y/N [Y]:&#x27;,&#x27;s&#x27;);</span><br><span class="line">       if isempty(reply)</span><br><span class="line">          reply = &#x27;Y&#x27;;</span><br><span class="line">       end</span><br></pre></td></tr></table></figure>
<h2 id="二、报错"><a href="#二、报错" class="headerlink" title="二、报错"></a>二、报错</h2><h3 id="3、error-warning"><a href="#3、error-warning" class="headerlink" title="3、error/warning"></a><strong>3、error</strong>/<strong>warning</strong></h3><p>报错并退出当前脚本；<br>用法：<br>error(’ 报错提示’)；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error(&#x27;输入不符合要求&#x27;)</span><br><span class="line">warning(&#x27;输入不符合要求&#x27;)</span><br></pre></td></tr></table></figure>
<p>两者用法相似，不过error会终止执行脚本，warning并不会。  </p>
<h3 id="4、quit、exit"><a href="#4、quit、exit" class="headerlink" title="4、quit、exit"></a><strong>4、quit、exit</strong></h3><p>quit和exit的功能是一样的，都是退出matlab，注意与error的区别，error只是退出执行脚本，而quit和exit直接推出了matlab程序。</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab：动态数组、队列、堆栈、容器</title>
    <url>/2023/12/08/1.Archieve/matlab%EF%BC%9A%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E3%80%81%E9%98%9F%E5%88%97%E3%80%81%E5%A0%86%E6%A0%88%E3%80%81%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<p>[[___matlab]]</p>
<blockquote>
<p>一直以为matlab中没有动态数组，或者类似C++的vector容器的数据结构。其实不然，matlab的数组就是一个动态数组，它可以当作vector，或者队列等数据结构使用。</p>
</blockquote>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array = 1:10;</span><br><span class="line">array =1     2     3     4     5     6     7     8     9    10</span><br><span class="line">array(1) = [];</span><br><span class="line">array =2     3     4     5     6     7     8     9    10</span><br><span class="line">array(end) = [];</span><br><span class="line">array =2     3     4     5     6     7     8     9</span><br><span class="line">array(end+1) = 10;</span><br><span class="line">array =2     3     4     5     6     7     8     9    10</span><br></pre></td></tr></table></figure>
<p>上面的例子可以看出，只要令数组的某一个元素为[]，就相当于删除了数组中该元素。array(1) = [] 这条语句，就类似于队列的pop()操作，array(end) = [] 相当于堆栈的pop()操作，而array(end+1)  = 10 就相当于push()操作。</p>
<p>2. 数组的一些操作技巧</p>
<p>2.1 在数组中找到某个特定元素的索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = [1 2 3 3 4 5];</span><br><span class="line">i = find(a==3)</span><br><span class="line">i =</span><br><span class="line">	2     3</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://blog.csdn.net/tyl532667325/article/details/98473750">matlab动态数组、队列、堆栈、容器_matlab 堆栈-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab：获取数组的大小</title>
    <url>/2023/12/08/1.Archieve/matlab%EF%BC%9A%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E5%A4%A7%E5%B0%8F/</url>
    <content><![CDATA[<blockquote>
<p>在<a href="https://so.csdn.net/so/search?q=MATLAB&amp;spm=1001.2101.3001.7020">MATLAB</a>的编程环境下，和数学上的矩阵是一个意义（<strong>坐标索引从 1 开始</strong>）。我们多使用矩阵和向量这两个数学意义上的数据结构。</p>
<p>所以以下把多维（除一维）数组称为矩阵，一维数组称为数组或向量。对于那种每一维的长度不同的多维数组，在matlab和数学研究中，我们一会给它补0，变成矩阵。<br>1、1*n的矩阵是一维数组（向量）<br>2、 m*n的矩阵是m（m&gt;1）维数组</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">这里提供了三种比较常用的办法，其一般使用场景如下：</span><br><span class="line">- size（） 矩阵(二维)</span><br><span class="line">- length（）数列(一维)</span><br><span class="line">- ndims() 高维矩阵(三维)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="1-size"><a href="#1-size" class="headerlink" title="1 size()"></a>1 size()</h2><h3 id="1-1-功能"><a href="#1-1-功能" class="headerlink" title="1.1 功能"></a>1.1 功能</h3><p>主要用来获得矩阵的各个维数的大小，或者指定维数的大小。</p>
<h3 id="1-2-语法"><a href="#1-2-语法" class="headerlink" title="1.2 语法"></a>1.2 语法</h3><p><code>size()</code>：获取矩阵的行数和列数</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">d = <span class="built_in">size</span>(X)</span><br><span class="line">[m,n] = <span class="built_in">size</span>(X)</span><br><span class="line">m = <span class="built_in">size</span>(X,dim)</span><br><span class="line">[d1,d2,d3,...,dn] = <span class="built_in">size</span>(X)</span><br></pre></td></tr></table></figure>
<ol>
<li><code>s = size(A)</code>,当只有一个输出参数时，返回一个行向量，该行向量的第一个元素是矩阵的行数<code>r</code>，第二个元素是矩阵的列数<code>c</code>。即<code>s = [r, c]</code></li>
<li><code>[r, c] = size(A)</code>,当有两个输出参数时，size函数将矩阵的行数<code>r</code>返回到第一个输出变量，将矩阵的列数<code>c</code>返回到第二个输出变量。</li>
<li>如果在size函数的输入参数中再添加一项，并用1或2为该项赋值，则size将返回矩阵的行数或列数。<br>其中：<br><code>r = size(A,1)</code>：返回的时数组A的<strong>行数</strong><br><code>c = size(A,2)</code> ：返回的时数组A的<strong>列数</strong></li>
</ol>
<h2 id="2-length"><a href="#2-length" class="headerlink" title="2 length()"></a>2 length()</h2><h3 id="2-1-功能"><a href="#2-1-功能" class="headerlink" title="2.1 功能"></a>2.1 功能</h3><p>用来获得数组长度，即一维数组的长度或者多维数组中最大的维数行数或列数中的较大值</p>
<h3 id="2-2-语法"><a href="#2-2-语法" class="headerlink" title="2.2 语法"></a>2.2 语法</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">numberOfElements = <span class="built_in">length</span>(array)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>length()</code>和<code>size()</code>使用区别：一般情况下，<br>获取一维数组的长度用<code>length()</code>函数；<br>获取多维数组的维数大小用<code>size()</code>。</p>
</blockquote>
<h2 id="3-numel"><a href="#3-numel" class="headerlink" title="3 numel()"></a>3 numel()</h2><h3 id="3-1-功能"><a href="#3-1-功能" class="headerlink" title="3.1 功能"></a>3.1 功能</h3><p>计算一个数组所有的元素数或指定下标的元素总数。</p>
<h3 id="3-2-语法"><a href="#3-2-语法" class="headerlink" title="3.2 语法"></a>3.2 语法</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n = <span class="built_in">numel</span>(A)</span><br><span class="line">n = <span class="built_in">numel</span>(A, index1, index2, ...indexn)</span><br></pre></td></tr></table></figure>
<h2 id="4-ndims"><a href="#4-ndims" class="headerlink" title="4 ndims()"></a>4 ndims()</h2><h3 id="4-1-功能"><a href="#4-1-功能" class="headerlink" title="4.1 功能"></a>4.1 功能</h3><p>获取矩阵的维数</p>
<blockquote>
<p>一般来说，多维数组我们用数学意义上的矩阵来理解。多维矩阵，从数学意义上来理解，即矩阵的元素不是数字。</p>
</blockquote>
<h3 id="4-2-语法"><a href="#4-2-语法" class="headerlink" title="4.2 语法"></a>4.2 语法</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n = <span class="built_in">ndims</span>(A)</span><br></pre></td></tr></table></figure>
<h3 id="4-3-例子"><a href="#4-3-例子" class="headerlink" title="4.3 例子"></a>4.3 例子</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n1 =  <span class="built_in">ndims</span>( [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>] );   <span class="comment">% n1 = 2  二维矩阵</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">cat</span>( <span class="number">3</span>,[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>],[<span class="number">5</span> <span class="number">6</span> <span class="number">7</span>;<span class="number">8</span> <span class="number">9</span> <span class="number">10</span>] );</span><br><span class="line">n2 = <span class="built_in">ndims</span>(a)       <span class="comment">% n2 = 3 三维矩阵</span></span><br><span class="line"><span class="comment">% a 是构造的三维矩阵，第一层是[1 2 3;4 5 6]，第二层是[5 6 7;8 9 10]</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="built_in">size</span>(a)        <span class="comment">% n3 = [2,3,2]，即2行3列2层。</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
  </entry>
  <entry>
    <title>python中的图像处理工具</title>
    <url>/2023/11/23/1.Archieve/python%E4%B8%AD%E7%9A%84OCR%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>[[<strong>_python]]<br>[[_</strong>图形处理]]</p>
<h3 id="python中的OCR工具"><a href="#python中的OCR工具" class="headerlink" title="python中的OCR工具"></a>python中的OCR工具</h3><p><em>此内容是直接询问ai + 查询相关资料学习到的，只能说ai确实改变了原有的常规学习方式</em></p>
<p>在python中可以很好地实现图片的处理以及进行OCR文字识别，所以说我们选择使用python进行文字的识别。</p>
<p>为了实现我们的目标，我们需要使用到OpenCV库来处理图像，并使用Tesseract OCR进行字符识别。</p>
<h4 id="预备工作"><a href="#预备工作" class="headerlink" title="预备工作"></a>预备工作</h4><p>Tesseract OCR 除了需要import还需要下载他们的本地工具，我们可以在他们的github上找到适用于window的安装程序</p>
<p><a href="https://pypi.org/project/pytesseract/">pytesseract · PyPI</a> | 查看python库详情</p>
<p><code>pip import pytesseract</code> 安装库</p>
<p>然后在  <a href="https://tesseract-ocr.github.io/tessdoc/Installation.html">Introduction | tessdoc (tesseract-ocr.github.io)</a> 里面找到你想要的版本，会跳转到相应的下载位置。</p>
<p>下载完成之后将下载位置的基础目录加入PATH 然后重启电脑。</p>
<p>关于的详细运用可以看看<a href="https://www.bilibili.com/video/BV1Pi4y157Eh/">tesseract-ocr，基本安装配置，以及python中如何使用？_哔哩哔哩_bilibili</a> </p>
<h4 id="过程分析"><a href="#过程分析" class="headerlink" title="过程分析"></a>过程分析</h4><p>在这里我们的目标是将原有图片截取所需部分，然后进行文字的识别</p>
<p>在这里先是使用<code>cv2</code> 进行图片处理，然后对于处理后的图片使用了<code>pytesseract</code> 作为文字识别的工具，调用了<code>pytesseract.image_to_string(img, lang=&#39;eng&#39;, config=&#39;--psm 6&#39;)</code> 进行文字识别</p>
<h4 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment"># plt 用于显示图片</span></span><br><span class="line"><span class="comment"># 读取图片</span></span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;test.jpg&#x27;</span>)</span><br><span class="line"><span class="comment"># 定义要提取的区域，这里我们假设我们要从左上角开始，提取50x50的矩形区域</span></span><br><span class="line">top_left_x = <span class="number">100</span></span><br><span class="line">top_left_y = <span class="number">100</span></span><br><span class="line">dx = <span class="number">50</span></span><br><span class="line">dy = <span class="number">50</span></span><br><span class="line">bottom_right_x = top_left_x + dx</span><br><span class="line">bottom_right_y = top_left_y + dy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取区域</span></span><br><span class="line">crop_img = img[top_left_y:bottom_right_y, top_left_x:bottom_right_x]</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 将灰度转换为黑白，提高识别率</span></span><br><span class="line">gray = cv2.cvtColor(crop_img, cv2.COLOR_BGR2GRAY)</span><br><span class="line">thresh = cv2.threshold(gray, <span class="number">0</span>, <span class="number">255</span>, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 使用Tesseract进行字符识别</span></span><br><span class="line">data = pytesseract.image_to_string(thresh, lang=<span class="string">&#x27;eng&#x27;</span>, config=<span class="string">&#x27;--psm 6&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 如果有多个区域需要识别，可以将上述代码放在循环中</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<hr>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://www.bilibili.com/video/BV1Pi4y157Eh/">tesseract-ocr，基本安装配置，以及python中如何使用？_哔哩哔哩_bilibili</a> </p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>python</tag>
        <tag>图形处理</tag>
      </tags>
  </entry>
  <entry>
    <title>python中输出到txt</title>
    <url>/2023/11/23/1.Archieve/python%E4%B8%AD%E8%BE%93%E5%87%BA%E5%88%B0txt/</url>
    <content><![CDATA[<p>[[___python]]</p>
<p>在实际操作中，我们常常会从文件中输入和输出，在这个时候我们就需要调用相关的函数进行读取和写入操作，在下面就记录几种较为常用的方式</p>
<span id="more"></span>
<h3 id="使用open"><a href="#使用open" class="headerlink" title="使用open()"></a>使用open()</h3><p>open函数可以打开任意格式的文件并且进行读写操作，这个的好处是，可以来回在多个文件之间切换。<br>在实际使用的时候需要注意的是，在程序写入完成之后，需要记得将文件关闭，不然的话数据不会实际写入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;使用print函数输出&quot;</span>, file=f)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<h3 id="使用with-open-as-file-的方式"><a href="#使用with-open-as-file-的方式" class="headerlink" title="使用with open() as file:的方式"></a>使用<code>with open() as file:</code>的方式</h3><p>在找不到文件对应的路径/无法创建文件的时候，执行open()函数往往会报错，在这个时候我们往往会选择使用with，with会尝试打开，如果失败则不会执行其后的指令。且使用with会在结束之后自动将文件关闭。</p>
<p>实际上，这两者等价：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(ret)</span><br></pre></td></tr></table></figure></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">	file.write(ret)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">	f.close()</span><br></pre></td></tr></table></figure>
<p>但是前者明显更加清晰易读</p>
<hr>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1>]]></content>
      <tags>
        <tag>编程</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>不要在大学里做的事情——来自父亲的教诲</title>
    <url>/2023/10/30/1.Archieve/%E4%B8%8D%E8%A6%81%E5%9C%A8%E5%A4%A7%E5%AD%A6%E9%87%8C%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85%E2%80%94%E2%80%94%E6%9D%A5%E8%87%AA%E7%88%B6%E4%BA%B2%E7%9A%84%E6%95%99%E8%AF%B2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="822f8729b668c05d582dd3b678c424e901f23f922e0ea17e90d8cc85655ee24d">e236de9be9a592a0152d0d7f6b18eec6bd2e02dee9dfc07d7a687148e1ed06d0c2c0ead49b6154b02b41b2cfdcc4b5a58c7563fe56fadffcd9463c1cceaee1efe40eeb38eb372b2f1a81ec9315331a6f9fe89bfc50d129e29810924fbef0b9e952a8fb41de1fc1b17311541a3552b55fd43b4ec49408e3275a5056afab19c51ab0ffcda84602f2c42bdc20218d336fe9cff397849a733e0ab65aec598004e5019b340e69970ce5372df95451d06a91a5dd5cb5444f33b1d9ffa9c50fa32194078f93922520a2e2baaf983351dd4b1c0b7aa0be5c29eb2cb3e1be8a094682af4994b297160e52b10920c88e757276656e88c78dbf006ba824b6d2fa3acac6c088c4b7e4ef0ccafe855a99c24393972abbbc25a896c5027a0b43e4d608a0c6672961fbb5221094bd5f1167a0c2f37696172376ca5b32f9c5bc537c80c5e6150eb902760e506bf826c06e2dacf48093f26ee72423d142410cfb642ad213b0f4864b47f04dc61a0e6b51848067ed1a6808a3cd29aec6e9bc1213d0ab81e1e5e382ca12c04ff4641c809bcae0175cd9da6e6fda81289084c8ae53768a6f7d7e3dc4b2c5a6cd3c33ec3b4cc71e90977306b85a34394712dc4a239959b99ad0a6d64059cb56d2532d5e57a0752449ebfa91c49aa504025bd6733bb18e9f650dc78a3a69b8ce4bb3872076e3ead823f190162cb7760e5289c6b288d462d36cfb3f25663eff1880e8cba1cf1a629672c4d5bc4d5284005a20f5e47d0cad0742642f1b7c5ce8ff23ca04e9f79dc8ac5655ae21bf11d9acce3b09ba5481fa621983677f3e65633c2ad24aef01e8469aff019695c8ed77c4c0f4e3db2280bb97efac098c68a61f9afd49b9c264c77fb7f583210b684efa4130ffb8b5bebba5553ea6e79bc9bbf7c8b453b71acc1f4757241b4f5ff2d3845094e2406b2307edc24288bb50ad80e9524d94cc5600a663501b7f90eadcd2e1fa2602bd8cc04b1b12452ca5266d38cc6f3a1b1f6cf860f02351b75822a807604c0bdeffb91a0140bb2ac2497adb80f64c6ab4ca6d256d911ec6cb72ad6c9cc43ca738d8477b102ba5a17db298a6958f181388d9939316fb43c78a26922bb7e05cf79f932cb9c2aa7f7f1122153ef96ab8666f1e382ced87d8bbc5d04ce7c29bb63d79645ee56639a2fd3150d1e56d810ecea3f313733ce1bc512f1f603574e91a9eb3292821caf199ee1ca23c2f2a49aaf3109c27a274950a194ae5db78253f5a6a27fe880b4953a77d24061cf1f1a8ecf8b38465994e9c8e686124e2ae1b10cb1e9b988624e74825a9d0158155fa34289b11c8bdfac407432ffde728e5d3ea7774a49cb42489c9eb44ef65d1cfcc0b8692f1452c99a1b89d80963d2987c67c85ff3d3024473b36714da46b738416088bc6e1be6345d35975ca2c0e0727b0defd9cba630abfb3a321319dbeec3387d19b6625aaac2c30a3f8927ed5c780b2454b479ee2d1f4a3e5d71f003e34e448b87d1999641d2801d0eb903e5ce47eecb9c6b3324176ebac7bc33b603d38d8087d5c49e3e1a6d0e7fd08d51f1cc0d447a83327fd26d6b50d592ea27983aa83ab56b332e9261f54ff9ee38607ea3cadacb7b64131b171eb93098e9df1997e7d86cc0dcef22b8fc28137051d4a04144937759ab59f94c0229a6aa235fad9ac5fac26a9f54ca091d14c8a8d86587920d5f352df901170e637fc8125263b12f876f205b444137426b68c0ddd00f6ca86b8448b12906873e775dfad46dd974c68b8f2fedecc5719d51439db5948e83689528d5c91a5916bbcf36f337cb76fb63a07f909d0350dd112423785bface2e17e2e6d53cfb6717d8f039517abbc169d75d02d7dec1e9ea9910b98f0bf6f075fdace6cb1efda2561ff3d8f9035c4ee149d9bd10feca11150203ae5229a82a69f00d4186ede2ea822a0984dc3468499d04d110a779258132ba48e3b5669578a9fb8a0e7063ea009656d3ab1e71b591fde1f93a3b0aee6ed3a6064dd3da356eb873d909ce4c7c88b511a617fcd4a7928ce358326281b2b0fbcfae5b1d7e64b3058c44e2b3271fc2c91f273569eb59b6aee9af94e23982d731d083c86e78d6438e433a2da</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密�?.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>个人争取免试规划</title>
    <url>/2023/10/29/1.Archieve/%E4%B8%AA%E4%BA%BA%E4%BA%89%E5%8F%96%E5%85%8D%E8%AF%95%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="9fa46d71eeeee86b6f6484d343bd671a132bbbbf118ae3f90aafad217af090c9"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密�?.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>大学</tag>
        <tag>XLXZ</tag>
        <tag>免试研究生</tag>
      </tags>
  </entry>
  <entry>
    <title>使用C++处理表格数据</title>
    <url>/2023/11/07/1.Archieve/%E4%BD%BF%E7%94%A8C-%E5%A4%84%E7%90%86%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<p>&emsp;&emsp;使用C++<strong>写入数据</strong>或者<strong>读取表格数据</strong>然后转化为<code>vector&lt;vector&lt;string&gt;&gt;</code>,代码如下：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 写文件</span></span><br><span class="line">	ofstream outFile;</span><br><span class="line">	outFile.<span class="built_in">open</span>(<span class="string">&quot;data.csv&quot;</span>, ios::out); <span class="comment">// 打开模式可省略</span></span><br><span class="line">	outFile &lt;&lt; <span class="string">&quot;name&quot;</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="string">&quot;age&quot;</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="string">&quot;hobby&quot;</span> &lt;&lt; endl;</span><br><span class="line">	outFile &lt;&lt; <span class="string">&quot;Mike&quot;</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="number">18</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="string">&quot;paiting&quot;</span> &lt;&lt; endl;</span><br><span class="line">	outFile &lt;&lt; <span class="string">&quot;Tom&quot;</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="number">25</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="string">&quot;football&quot;</span> &lt;&lt; endl;</span><br><span class="line">	outFile &lt;&lt; <span class="string">&quot;Jack&quot;</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="number">21</span> &lt;&lt; <span class="string">&#x27;,&#x27;</span> &lt;&lt; <span class="string">&quot;music&quot;</span> &lt;&lt; endl;</span><br><span class="line">	outFile.<span class="built_in">close</span>();</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 读文件</span></span><br><span class="line">	<span class="function">ifstream <span class="title">inFile</span><span class="params">(<span class="string">&quot;data.csv&quot;</span>, ios::in)</span></span>;</span><br><span class="line">	string lineStr;</span><br><span class="line">	vector&lt;vector&lt;string&gt;&gt; strArray;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">getline</span>(inFile, lineStr))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 打印整行字符串</span></span><br><span class="line">		cout &lt;&lt; lineStr &lt;&lt; endl;</span><br><span class="line">		<span class="comment">// 存成二维表结构</span></span><br><span class="line">		<span class="function">stringstream <span class="title">ss</span><span class="params">(lineStr)</span></span>;</span><br><span class="line">		string str;</span><br><span class="line">		vector&lt;string&gt; lineArray;</span><br><span class="line">		<span class="comment">// 按照逗号分隔</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">getline</span>(ss, str, <span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">			lineArray.<span class="built_in">push_back</span>(str);</span><br><span class="line">		strArray.<span class="built_in">push_back</span>(lineArray);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;最后读取的结果保存在<code>strArray</code>里面。</p>
<p>&emsp;&emsp;注意，该方法通过分辨<code>,</code>来进行分割，所以说处理字符串类型的数据的时候注意不应该包含<code>,</code></p>
<blockquote>
<p>&emsp;&emsp;另外，一件比较有趣的事情：我现在才知道循环中定义的变量会在循环结束后自动垃圾回收🧐</p>
</blockquote>
]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>主题团日</title>
    <url>/2023/11/05/1.Archieve/%E4%B8%BB%E9%A2%98%E5%9B%A2%E6%97%A5/</url>
    <content><![CDATA[<p>[[___大学]]</p>
<p>主题团日相关材料省流<br>你也可以到我的blog里面查看🥰<br><strong><a href="https://xiaolinxiaozhu.github.io/2023/11/05/主题团日/" title="XLXZ&#39;s BLOG">XLXZ’s BLOG</a></strong></p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;主题团日活动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;附件1&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;主题解析&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;1.党的传承&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;各支部可组织团员青年学习、宣传党的二十大精神，进行党史学习，开展宣讲活动；组织社会实践，如走进红色实践地、访谈红色人物等活动；创新活动形式，如演唱红歌、表演红色话剧等，引导团员青年分享红色感悟、坚守红色信念、体悟红色精神。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;2.科技创新&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;各支部可组织团员青年参与“求是杯”大学生课外学术科技作品竞赛、“科技强国”大学生创意作品竞赛、“创新驱动”青年科普作品竞赛、大学生科技节等青年创新创业活动，要积极组织支部成员参与各类科研竞赛，开展科技创新活动，不断提高创新创业素养与能力；调研我校历年来取得的重大科技创新成果；走进与专业有关的行业企业、科研院所开展调研，深入科研一线开展学习实践，面对面与优秀科技工作者深入交流，充分发掘各行业科技创新前沿中的中国故事和学校故事，在实践中强化爱国之志，激发爱国之情，坚定科技报国的理想信念。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;3.医疗，健康类科普&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;各支部，特别是医学专业支部，可组织团员青年结合自身专业特色开展相关实践，可组织团员青年开展健康普查、流行性疾病防治、医学知识普及、应急知识宣教、巡回医疗、乡（村）医疗站建设、基层卫生人员培训等服务活动，提高人民群众对突发公共卫生事件认知水平和预防自救互救能力，为建设健康中国，增进人民健康福祉贡献青春力量。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;4.组织志愿服务&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;以支部为单位，组织动员团员青年聚焦扶贫支教、环境保护、社区治理、大型赛会等，鼓励结合所学专业开展志愿服务，&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;如&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;开展义诊志愿服务的医学类志愿服务、&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;关注孤独症儿童社会康复的社会工作类志愿服务等&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;开展法律援助和基层普法的法学类志愿服务&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;5.民族团结&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;各支部可组织团员青年走访调研，参观爱国主义、民族团结进步教育基地；开展特色宣传活动，引导广大团员学习了解民族团结故事、民族文化等并积极宣传民族团结思想，传播民族特色文化，为推进民族团结进步事业贡献青春力量。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;7.文化自信自强&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;各支部可组织团员青年通过了解非遗知识、展演民俗风情、制作文化宣传短视频、开展文化艺术下乡等方式弘扬优秀传统文化；创新多媒体艺术、利用新媒体平台推广创意文化，让更多人了解中华文化，增强文化自信，坚定文化信仰。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;8.环境保护&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[41,42]},&quot;v&quot;:&quot;各支部可组织团员青年开展志愿服务，助力环境保护；从身边小事做起，积极践行绿色低碳的生活方式；积极参与节能降碳技术研发和推广应用；开展社会实践调查，了解环境保护现状，为生态文明建设建言献策；开展科普知识宣讲、普及生态环保理念，展现建设美丽中国的青春担当。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[43,44]},&quot;v&quot;:&quot;9.社区活动，基层治理&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[45,46]},&quot;v&quot;:&quot;各支部可组织团员青年就近就便结对社区，以改善群众身边、房前屋后人居环境的实事小事为切入点，开展志愿服务等活动。也鼓励深入社区，围绕社区生态环保、红色物业、法治宣传等开展共同缔造社区调研等活动，了解民生民情，服务社区需求。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[47,48]},&quot;v&quot;:&quot;10.学习榜样精神&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[49,50]},&quot;v&quot;:&quot;各支部可组织团员青年开展专题学习讨论、榜样践行活动，深入挖掘榜样事迹，弘扬榜样精神；前往实践地寻访，慰问抗战老兵、抗疫先锋、时代楷模、大国工匠等，争做时代先锋。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[51,52]},&quot;v&quot;:&quot;11.团支部自拟主题。&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[53,54]},&quot;v&quot;:&quot;各团支部根据自身专业特色及兴趣自拟主题，要求贴合专业内容，发挥专业优势。鼓励各团支部从小切口入手，从小事做起，将特色团日活动与支部成员学习、工作、生活紧密结合，发挥育人实效。&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[55,56]},&quot;v&quot;:&quot;附件2&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[57,58]},&quot;v&quot;:&quot;赛区&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[59,60]},&quot;v&quot;:&quot;第一赛区：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[61,62]},&quot;v&quot;:&quot;软件学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[63,64]},&quot;v&quot;:&quot;新闻与信息传播学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[65,66]},&quot;v&quot;:&quot;材料科学与工程学院&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[67,68]},&quot;v&quot;:&quot;A&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[69,70]},&quot;v&quot;:&quot;哲学学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[71,72]},&quot;v&quot;:&quot;电子信息与通信学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[73,74]},&quot;v&quot;:&quot;人工智能与自动化学院&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[75,76]},&quot;v&quot;:&quot;第二赛区：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[77,78]},&quot;v&quot;:&quot;环境科学与工程学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[79,80]},&quot;v&quot;:&quot;法学院&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[81,82]},&quot;v&quot;:&quot;A&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[83,84]},&quot;v&quot;:&quot;生命科学与技术学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[85,86]},&quot;v&quot;:&quot;光学与电子信息学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[87,88]},&quot;v&quot;:&quot;经济学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[89,90]},&quot;v&quot;:&quot;人文学院&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[91,92]},&quot;v&quot;:&quot;附件3&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[93,94]},&quot;v&quot;:&quot;特色团日重点事项说明&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[95,96]},&quot;v&quot;:&quot;（一）特色团日活动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[97,98]},&quot;v&quot;:&quot;开展时期为一学年&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[99,100]},&quot;v&quot;:&quot;所有新生团支部必须开展&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[101,102]},&quot;v&quot;:&quot;（二）鼓励合办特色团日&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[103,104]},&quot;v&quot;:&quot;以合理开展活动为准则，合办支部不超过3个。各支部选择一个主题开展活动，鼓励创新，扩大特色团日活动影响力。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[105,106]},&quot;v&quot;:&quot;（三）加减分项&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[107,108]},&quot;v&quot;:&quot;1.投稿加分&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[109,110]},&quot;v&quot;:&quot;积极向“华中大理想青年”微信公众号投稿（内容关于特色团日活动开展）并被采用的团支部将给予0.3分总分加成，&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[111,112]},&quot;v&quot;:&quot;积极向“华科大团委组织部”官方QQ公众号投稿（内容关于特色团日活动开展）并被采用的团支部将给予0.1分总分加成。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[113,114]},&quot;v&quot;:&quot;宣传负责人：周星雨1332764886@qq.com&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[115,116]},&quot;v&quot;:&quot;2.承办本科生校十佳特色团日答辩会&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[117,118]},&quot;v&quot;:&quot;获得0.5分总分加成&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[119,120]},&quot;v&quot;:&quot;由该院系进入答辩会的团支部平均分配。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[121,122]},&quot;v&quot;:&quot;3.团支部提交有关其&lt;em&gt;寒假期间开展冬日暖阳活动&lt;/em&gt;的证明（如视频、图片、文字材料等）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[123,124]},&quot;v&quot;:&quot;校团委组织部将根据支部提交的材料进行评审，根据活动开展情况&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[125,126]},&quot;v&quot;:&quot;最高0.5分的加分&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[127,128]},&quot;v&quot;:&quot;4.迟交计划书、总结书扣0.5分，迟交其他材料扣0.3分，如发现伪造活动材料等情况，扣1分。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[129,130]},&quot;v&quot;:&quot;（四）宣传材料要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[131,132]},&quot;v&quot;:&quot;各团支部可根据自身的实际情况制作宣传横幅或者海报&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[133,134]},&quot;v&quot;:&quot;要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[135,136]},&quot;v&quot;:&quot;横幅右下方打印：“xx、xx、xx班团支部特色团日 主办方：校团委组织部”&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[137,138]},&quot;v&quot;:&quot;海报在合适的位置打印“主办方：校团委组织部”。&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[139,140]},&quot;v&quot;:&quot;附件4&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[141,142]},&quot;v&quot;:&quot;奖项设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[143,144]},&quot;v&quot;:&quot;（一）个人奖项设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[145,146]},&quot;v&quot;:&quot;校团委组织部根据各院系推荐的优秀个人进行评审，评选出十位“特色团日活动优秀个人”。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[147,148]},&quot;v&quot;:&quot;（二）团支部奖项设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[149,150]},&quot;v&quot;:&quot;风标交流答辩会前十名获得“特团风标”称号，并颁发证书。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[151,152]},&quot;v&quot;:&quot;校十佳特色团日答辩会前十五名获得“优秀特色团日”称号，并颁发证书。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[153,154]},&quot;v&quot;:&quot;校十佳特色团日答辩会前十名获得“十佳特色团日”称号，并颁发证书。&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[155,156]},&quot;v&quot;:&quot;（三）本科生赛区奖项设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[157,158]},&quot;v&quot;:&quot;依据各赛区内入围校十佳答辩会的团支部占所在赛区支部数量比例进行优秀赛区评选，排名前两名的赛区获得“优秀赛区奖”，奖项由赛区内各院系共享。获得“优秀赛区奖”的赛区，赛区负责人所在院系团委组织部长年度考评中可获得加分。&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[159,160]},&quot;v&quot;:&quot;附件5&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[161,162]},&quot;v&quot;:&quot;活动计划书规范&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[163,164]},&quot;v&quot;:&quot;6.弘扬中华体育精神，推进体育强国建设。体育是提高人民健康水平的重要途径，是满足人民群众对美好生活向往、促进人的全面发展的重要手段，是促进经济社会发展的重要动力，是展示国家文化软实力的重要平台。党的二十大报告指出：广泛开展全民健身活动，加强青少年体育工作，促进群众体育和竞技体育全面发展，加快建设体育强国。各支部可组织团员青年开展体育知识科普讲座，宣扬中华体育精神；创新体育文化产品，助推体育文化产业融合发展；普及开展传统体育项目，挖掘运动项目文化精髓，助力体育强国建设。&quot;}]}"/>
</div>

<details>
<summary>下拉菜单</summary>

# 主题团日活动

## 附件1

### 主题解析

- 1.党的传承

    - 各支部可组织团员青年学习、宣传党的二十大精神，进行党史学习，开展宣讲活动；组织社会实践，如走进红色实践地、访谈红色人物等活动；创新活动形式，如演唱红歌、表演红色话剧等，引导团员青年分享红色感悟、坚守红色信念、体悟红色精神。

- 2.科技创新

    - 各支部可组织团员青年参与“求是杯”大学生课外学术科技作品竞赛、“科技强国”大学生创意作品竞赛、“创新驱动”青年科普作品竞赛、大学生科技节等青年创新创业活动，要积极组织支部成员参与各类科研竞赛，开展科技创新活动，不断提高创新创业素养与能力；调研我校历年来取得的重大科技创新成果；走进与专业有关的行业企业、科研院所开展调研，深入科研一线开展学习实践，面对面与优秀科技工作者深入交流，充分发掘各行业科技创新前沿中的中国故事和学校故事，在实践中强化爱国之志，激发爱国之情，坚定科技报国的理想信念。

- 3.医疗，健康类科普

    - 各支部，特别是医学专业支部，可组织团员青年结合自身专业特色开展相关实践，可组织团员青年开展健康普查、流行性疾病防治、医学知识普及、应急知识宣教、巡回医疗、乡（村）医疗站建设、基层卫生人员培训等服务活动，提高人民群众对突发公共卫生事件认知水平和预防自救互救能力，为建设健康中国，增进人民健康福祉贡献青春力量。

- 4.组织志愿服务

    - 以支部为单位，组织动员团员青年聚焦扶贫支教、环境保护、社区治理、大型赛会等，鼓励结合所学专业开展志愿服务，

    - 如

        - 开展义诊志愿服务的医学类志愿服务、

        - 关注孤独症儿童社会康复的社会工作类志愿服务等

        - 开展法律援助和基层普法的法学类志愿服务

- 5.民族团结

    - 各支部可组织团员青年走访调研，参观爱国主义、民族团结进步教育基地；开展特色宣传活动，引导广大团员学习了解民族团结故事、民族文化等并积极宣传民族团结思想，传播民族特色文化，为推进民族团结进步事业贡献青春力量。

- 7.文化自信自强

    - 各支部可组织团员青年通过了解非遗知识、展演民俗风情、制作文化宣传短视频、开展文化艺术下乡等方式弘扬优秀传统文化；创新多媒体艺术、利用新媒体平台推广创意文化，让更多人了解中华文化，增强文化自信，坚定文化信仰。

- 8.环境保护

    - 各支部可组织团员青年开展志愿服务，助力环境保护；从身边小事做起，积极践行绿色低碳的生活方式；积极参与节能降碳技术研发和推广应用；开展社会实践调查，了解环境保护现状，为生态文明建设建言献策；开展科普知识宣讲、普及生态环保理念，展现建设美丽中国的青春担当。

- 9.社区活动，基层治理

    - 各支部可组织团员青年就近就便结对社区，以改善群众身边、房前屋后人居环境的实事小事为切入点，开展志愿服务等活动。也鼓励深入社区，围绕社区生态环保、红色物业、法治宣传等开展共同缔造社区调研等活动，了解民生民情，服务社区需求。

- 10.学习榜样精神

    - 各支部可组织团员青年开展专题学习讨论、榜样践行活动，深入挖掘榜样事迹，弘扬榜样精神；前往实践地寻访，慰问抗战老兵、抗疫先锋、时代楷模、大国工匠等，争做时代先锋。 

- 11.团支部自拟主题。

    - 各团支部根据自身专业特色及兴趣自拟主题，要求贴合专业内容，发挥专业优势。鼓励各团支部从小切口入手，从小事做起，将特色团日活动与支部成员学习、工作、生活紧密结合，发挥育人实效。

## 附件2

### 赛区

- 第一赛区：

    - 软件学院

    - 新闻与信息传播学院

    - 材料科学与工程学院

        - A

    - 哲学学院

    - 电子信息与通信学院

    - 人工智能与自动化学院

- 第二赛区：

    - 环境科学与工程学院

    - 法学院

        - A

    - 生命科学与技术学院

    - 光学与电子信息学院

    - 经济学院

    - 人文学院

## 附件3

### 特色团日重点事项说明

- （一）特色团日活动

    - 开展时期为一学年

    - 所有新生团支部必须开展

- （二）鼓励合办特色团日

    - 以合理开展活动为准则，合办支部不超过3个。各支部选择一个主题开展活动，鼓励创新，扩大特色团日活动影响力。

- （三）加减分项

    - 1.投稿加分

        - 积极向“华中大理想青年”微信公众号投稿（内容关于特色团日活动开展）并被采用的团支部将给予0.3分总分加成，

        - 积极向“华科大团委组织部”官方QQ公众号投稿（内容关于特色团日活动开展）并被采用的团支部将给予0.1分总分加成。

        - 宣传负责人：周星雨1332764886@qq.com

    - 2.承办本科生校十佳特色团日答辩会

        - 获得0.5分总分加成

        - 由该院系进入答辩会的团支部平均分配。

    - 3.团支部提交有关其*寒假期间开展冬日暖阳活动*的证明（如视频、图片、文字材料等）

        - 校团委组织部将根据支部提交的材料进行评审，根据活动开展情况

        - 最高0.5分的加分

    - 4.迟交计划书、总结书扣0.5分，迟交其他材料扣0.3分，如发现伪造活动材料等情况，扣1分。

- （四）宣传材料要求

    - 各团支部可根据自身的实际情况制作宣传横幅或者海报

    - 要求

        - 横幅右下方打印：“xx、xx、xx班团支部特色团日 主办方：校团委组织部”

        - 海报在合适的位置打印“主办方：校团委组织部”。

## 附件4

### 奖项设置

- （一）个人奖项设置

    - 校团委组织部根据各院系推荐的优秀个人进行评审，评选出十位“特色团日活动优秀个人”。

- （二）团支部奖项设置

    - 风标交流答辩会前十名获得“特团风标”称号，并颁发证书。

    - 校十佳特色团日答辩会前十五名获得“优秀特色团日”称号，并颁发证书。

    - 校十佳特色团日答辩会前十名获得“十佳特色团日”称号，并颁发证书。

- （三）本科生赛区奖项设置

    - 依据各赛区内入围校十佳答辩会的团支部占所在赛区支部数量比例进行优秀赛区评选，排名前两名的赛区获得“优秀赛区奖”，奖项由赛区内各院系共享。获得“优秀赛区奖”的赛区，赛区负责人所在院系团委组织部长年度考评中可获得加分。

## 附件5

### 活动计划书规范

## 6.弘扬中华体育精神，推进体育强国建设。体育是提高人民健康水平的重要途径，是满足人民群众对美好生活向往、促进人的全面发展的重要手段，是促进经济社会发展的重要动力，是展示国家文化软实力的重要平台。党的二十大报告指出：广泛开展全民健身活动，加强青少年体育工作，促进群众体育和竞技体育全面发展，加快建设体育强国。各支部可组织团员青年开展体育知识科普讲座，宣扬中华体育精神；创新体育文化产品，助推体育文化产业融合发展；普及开展传统体育项目，挖掘运动项目文化精髓，助力体育强国建设。


</details>]]></content>
      <tags>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>关于MarkDown的吐槽</title>
    <url>/2023/10/29/1.Archieve/%E5%85%B3%E4%BA%8EMarkDown%E7%9A%84%E5%90%90%E6%A7%BD/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>[[___hexo]]</p>
<p>这是一篇杂谈。</p>
<p>&emsp;&emsp;怎么说呢，我从最近开始使用markdown来构建我的blog</p>
<p>&emsp;&emsp;但是，我还是更加习惯xmind的那种整理模式。</p>
<p>&emsp;&emsp;毕竟那个东西是树状的，在信息的传递上比起线性的列表式的markdown有着天然的优势。</p>
<p>&emsp;&emsp;不过在线性记录的载体上，markdown算是比较方便且好看的载体。但是还是很麻烦，我连首行缩进都无法统一设置，还得使用<code>&amp;emsp;&amp;emsp;我的文本</code>进行编辑。</p>
<p>&emsp;&emsp;之前也明确过了，我使用markdown来构建blog，其中的blog更多是为了记录学业&amp;技术方面相关的东西</p>
<p>&emsp;&emsp;比如说用来记录我之前踩过的坑啊，或者想到的一些有趣的东西~</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>关于hexo与hugo</title>
    <url>/2023/11/02/1.Archieve/%E5%85%B3%E4%BA%8Ehexo%E4%B8%8Ehugo/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>[[___hexo]]</p>
<p>偶然间看到了还有其他的几个离线网页生成器，就好奇地去看了一眼~   </p>
<h3 id="hmmm省流：我懒而且不贪那点速度"><a href="#hmmm省流：我懒而且不贪那点速度" class="headerlink" title="hmmm省流：我懒而且不贪那点速度"></a>hmmm省流：我懒而且不贪那点速度</h3><p>所以说我选择：就使用hexo就ok</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用JS脚本编写HUST华中科技大学军理线上作业简易自动填充助手</title>
    <url>/2023/11/25/1.Archieve/%E4%BD%BF%E7%94%A8JS%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99HUST%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%86%9B%E7%90%86%E7%BA%BF%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AE%80%E6%98%93%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E5%8A%A9%E6%89%8B/</url>
    <content><![CDATA[<p>[[___JS]]</p>
<h3 id="〇、前情提要"><a href="#〇、前情提要" class="headerlink" title="〇、前情提要"></a>〇、前情提要</h3><p>今天在填写HUST华中科技大学军理线上作业的时候，看着满屏幕的选择题，我望了望手中的答案，突然想到，有没有先人已经做好了的脚本可以使用呢？</p>
<p>然后在油叉上面找了找发现了这个：<br><a href="https://greasyfork.org/zh-CN/scripts/445342-hust%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%86%9B%E7%90%86%E7%BA%BF%E4%B8%8A%E4%BD%9C%E4%B8%9A%E7%AE%80%E6%98%93%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E5%8A%A9%E6%89%8B">HUST华中科技大学军理线上作业简易自动填充助手 (greasyfork.org)</a> </p>
<p>这是它的github页面：<br><a href="https://github.com/gongchen618/HUST-MT-Helper">HUST-MT-Helper</a> </p>
<p>在尝试安装并使用之后，我发现并不能正常使用，主要原因是<strong>华中科技大学出版社的官网更新了，原有的域名和内容编排都发生了变化</strong>，于是我就开始尝试自己将其中的js代码进行改写。</p>
<p>具体改写过程在这里不再赘述，但是想要在这里记录一下自己所遇到的几个问题，以及学到的几个知识。</p>
<span id="more"></span>
<h3 id="一、最大的感触"><a href="#一、最大的感触" class="headerlink" title="一、最大的感触"></a>一、最大的感触</h3><h4 id="1-对于JavaScript的第一印象"><a href="#1-对于JavaScript的第一印象" class="headerlink" title="1.对于JavaScript的第一印象"></a>1.对于JavaScript的第一印象</h4><p>对于感觉js有点像就是对于html的源代码进行检索，编辑，操作……本身就提供了相当多的接口来使用，使用起来相对轻松。</p>
<p>基本语法和C++基本一致，除了在函数声明上和另外一些我暂时看不懂的东西上有所区别，基本上是相同的。</p>
<h4 id="2-弱类型语言"><a href="#2-弱类型语言" class="headerlink" title="2.弱类型语言"></a>2.弱类型语言</h4><p>JavaScript是一个弱类型语言，在定义变量时，变量类型由其储存的内容决定。</p>
<p>其实结合后面的另外一点，感觉JavaScript在存储数据方面更像是存取指针，而不是引用具体的实例。</p>
<h4 id="3-在JavaScript中数据类型有些不一样"><a href="#3-在JavaScript中数据类型有些不一样" class="headerlink" title="3.在JavaScript中数据类型有些不一样"></a>3.在JavaScript中数据类型有些不一样</h4><p>和常规的语言相比，JavaScript的运行依赖于html文件，在很多操作上比起引用更像是指针。</p>
<p>比如这样的DOM结构：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;a2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>我之前想的是这样交换：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> divs = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> temp;</span><br><span class="line"></span><br><span class="line">temp = divs[<span class="number">0</span>];</span><br><span class="line">divs[<span class="number">0</span>] = divs[<span class="number">1</span>];</span><br><span class="line">divs[<span class="number">1</span>] = temp;</span><br></pre></td></tr></table></figure></p>
<p>但是实际上这将不进行交换。原因如下：</p>
<p>![[js-将nodeList像数组一样进行操作]]</p>
<h4 id="4-得利于Edge提供的良好的开发者工具，debug十分地便捷"><a href="#4-得利于Edge提供的良好的开发者工具，debug十分地便捷" class="headerlink" title="4.得利于Edge提供的良好的开发者工具，debug十分地便捷"></a>4.得利于Edge提供的良好的开发者工具，debug十分地便捷</h4><p>可以将js挂载到网页中，然后使用edge开发者工具对代码进行debug调试</p>
<p>最大的优点是数据类型会以悬浮窗的形式显示出来，而数据的具体数据及其变化情况会以旁批的形式标注出来。</p>
<h3 id="二、其他的一些知识点"><a href="#二、其他的一些知识点" class="headerlink" title="二、其他的一些知识点"></a>二、其他的一些知识点</h3><h4 id="1-获取标签元素data-属性值的方法"><a href="#1-获取标签元素data-属性值的方法" class="headerlink" title="1. 获取标签元素data-*属性值的方法"></a>1. 获取标签元素data-*属性值的方法</h4><p>在JavaScript 如果直接使用 <code>a.data-id</code> 会被理解为两数相减<code>a.data - id</code><br>这个时候就需要换一种读取方式。</p>
<p>![[js-获取标签元素data-xxx属性值的方法]]</p>
<h4 id="2-radio表单结构"><a href="#2-radio表单结构" class="headerlink" title="2. radio表单结构"></a>2. radio表单结构</h4><p>![[js-radio表单结构]]</p>
<h4 id="3-js-里面的函数构造"><a href="#3-js-里面的函数构造" class="headerlink" title="3.js 里面的函数构造"></a>3.js 里面的函数构造</h4><p>![[js-函数构造]]</p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>关于举办华中科技大学第二届“科技强国”大学生创意作品竞赛暨“青创+”系列成长活动的通知</title>
    <url>/2023/11/08/1.Archieve/%E5%85%B3%E4%BA%8E%E4%B8%BE%E5%8A%9E%E5%8D%8E%E4%B8%AD%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%B1%8A%E2%80%9C%E7%A7%91%E6%8A%80%E5%BC%BA%E5%9B%BD%E2%80%9D%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%88%9B%E6%84%8F%E4%BD%9C%E5%93%81%E7%AB%9E%E8%B5%9B%E6%9A%A8%E2%80%9C%E9%9D%92%E5%88%9B-%E2%80%9D%E7%B3%BB%E5%88%97%E6%88%90%E9%95%BF%E6%B4%BB%E5%8A%A8%E7%9A%84%E9%80%9A%E7%9F%A5/</url>
    <content><![CDATA[<p>[[___新闻]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;【关于举办华中科技大学第二届“科技强国”大学生创意作品竞赛暨“青创+”系列成长活动的通知】&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;现决定举办华中科技大学第二届“科技强国”大学生创意作品竞赛暨“青创+”系列成长活动&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;有关事项通知&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;一、活动主题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;科技强国 创意未来&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;二、活动时间&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;2023年11月——2024年4月&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;三、组织机构&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;主办单位：共青团华中科技大学委员会、启明学院、工程实践创新中心、华中科技大学科技园、华中科技大学企业孵化器、湖北青创园（光谷）示范园、华中科技大学启明星空创客空间、新闻与信息传播学院、建筑与城市规划学院&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;承办单位：大学生创业实践中心、校团委组织部、校学生会&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;四、活动形式与内容&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;（一）第二届“科技强国”大学生创意作品竞赛&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;本届“科技强国”大学生创意作品竞赛是“青创+”系列成长活动培养成果的重要展示平台&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;旨在鼓励学生发现问题并结合专业知识和生活感悟&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;聚焦科技进步、美丽中国、人民生活、全民健康、校园发展等主题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;创作一批创新性强、实用性佳、落地性好的创意作品&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;实现以赛促学、以赛促研、以赛促创&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;为拔尖创新人才培养奠定坚实基础&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;1.面向对象&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;华中科技大学本科2021级（四年制）或2020级（五年制）及以下学生均可参与&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;团队成员不超过6人&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;其中本科一年级人数不低于50%&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;指导老师不超过2人&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;每人仅限报名1支团队&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;允许跨院系组队&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;参赛均从队长所在院系提交报名材料&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;2.作品分类&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;聚焦科技进步&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;包括但不限于人工智能、智能制造、工业设计、工艺优化、产业升级、新材料、大数据、金融科技、数字经济、国家安全等领域&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;聚焦美丽中国&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;包括但不限于污染治理、生态保护、低碳产业发展、可持续资源开发、清洁能源应用、资源化利用、绿色生活、碳计量等领域&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;聚焦人民生活&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;包括但不限于智能家居、交通出行、物流服务、建筑设计、家政服务、养老服务、旅游休闲、法律服务及援助、餐饮服务、服饰设计等领域&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;聚焦全民健康&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;包括但不限于现代医疗技术、智能医疗设备、新药开发、健康康养、食药保健、智能医学、生物技术、生物材料、中医药现代化等领域&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;聚焦校园发展&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;包括但不限于校园文创、校园生活、校园设施、校园景观、数字校园等领域&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;3.作品要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;强调创意本身&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;作品形式包括但不限于概念、设计、软件、模型、产品等&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;参赛资格以报名表提交为准&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;重点介绍基本情况、创意来源、特色亮点等&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;同时辅以PPT补充介绍&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;如有必要可提交其他有助于创意展示的支撑材料&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;在“挑战杯”“互联网+”“创青春”及各类学科竞赛获得省级及以上荣誉的项目不可报名参赛&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;如发现不符合以上要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;或存在剽窃、盗用、提供虚假材料或违反相关法律法规的&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;一经发现将取消报名资格和比赛成绩&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;并自行承担一切法律责任&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;4.评审方式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;初赛采用材料评审的方式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;决赛安排另行通知&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;5.奖项设置&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[106,107]},&quot;v&quot;:&quot;组委会将根据初赛评审、决赛展示答辩选出金、银、铜奖作品和优秀奖作品&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[108,109]},&quot;v&quot;:&quot;为获奖团队颁发获奖证书与奖品&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[110,111]},&quot;v&quot;:&quot;同等条件下&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[112,113]},&quot;v&quot;:&quot;获奖团队成员将优先录取为我校青创营学员&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[114,115]},&quot;v&quot;:&quot;根据院（系）团委、基层团支部的赛事组织情况&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[116,117]},&quot;v&quot;:&quot;将评选出优秀组织奖若干&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[118,119]},&quot;v&quot;:&quot;并纳入院（系）团务工作开展情况考评指标&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[120,121]},&quot;v&quot;:&quot;6.参与方式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[122,123]},&quot;v&quot;:&quot;请参赛团队填写附件1《华中科技大学第二届“科技强国”大学生创意作品竞赛报名表》及附件2《华中科技大学第二届“科技强国”大学生创意作品竞赛报名汇总表》&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[124,125]},&quot;v&quot;:&quot;并附作品PPT（不超过20页）及其他有助于作品展示的材料提交至院（系）团委&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[126,127]},&quot;v&quot;:&quot;请各院（系）团委审核作品参赛资格并汇总&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[128,129]},&quot;v&quot;:&quot;将电子版及扫描件发送至hustdc121@163.com&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[130,131]},&quot;v&quot;:&quot;团队材料文件夹命名为“作品类别-院系名称-团队名称”&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[132,133]},&quot;v&quot;:&quot;暂不需要纸质版报名材料&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[134,135]},&quot;v&quot;:&quot;院系汇总并提交参赛作品的截止时间为12月14日17:30&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[136,137]},&quot;v&quot;:&quot;（二）“青创+”系列成长活动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[138,139]},&quot;v&quot;:&quot;“青创+”系列成长活动以“用科技点亮创意梦想”为目标&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[140,141]},&quot;v&quot;:&quot;旨在为学生提供进一步了解学校创新创业活动的渠道和学习创新创业经验的平台&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[142,143]},&quot;v&quot;:&quot;同时针对大学生创意作品竞赛的参赛队员所需所盼开设一系列内容丰富、形式多样的创新创业活动&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[144,145]},&quot;v&quot;:&quot;包含：“青创+新生团课”“青创+科技前沿”“青创+创新实践”“青创+技能培训”等&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[146,147]},&quot;v&quot;:&quot;从而激发学生创意灵感&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[148,149]},&quot;v&quot;:&quot;引导学生踊跃投身科技创新活动&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[150,151]},&quot;v&quot;:&quot;同时建立参学、参课的激励机制&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[152,153]},&quot;v&quot;:&quot;相关活动记录计入学生的“第二课堂”学时&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[154,155]},&quot;v&quot;:&quot;1.“青创+新生团课”&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[156,157]},&quot;v&quot;:&quot;校团委组织部即将开展2023-2024学年新生团课&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[158,159]},&quot;v&quot;:&quot;计划将新生团课第四讲的主题定为学校共青团服务青年创新创业工作介绍及相关竞赛宣传动员&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[160,161]},&quot;v&quot;:&quot;面向全体2023级新生团员青年&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[162,163]},&quot;v&quot;:&quot;广泛宣传我校创新创业工作成果&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[164,165]},&quot;v&quot;:&quot;鼓励新生团员青年积极参与各类创新创业赛事、活动等&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[166,167]},&quot;v&quot;:&quot;2.“青创+科技前沿”&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[168,169]},&quot;v&quot;:&quot;为&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[170,171]},&quot;v&quot;:&quot;启发学生创意灵感&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[172,173]},&quot;v&quot;:&quot;开阔学生科技视野&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[174,175]},&quot;v&quot;:&quot;鼓励学生发现问题并结合专业知识和生活感悟、提出创意想法&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[176,177]},&quot;v&quot;:&quot;计划开展一系列“青创+科技前沿”活动：“科技强国”大学生创意作品竞赛宣介会、“头脑风暴 创意启发”论坛、创意作品竞赛各赛道的科技前沿讲座、创意作品竞赛往届获奖团队及创业校友经验分享会等&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[178,179]},&quot;v&quot;:&quot;丰富多样的“创意+科技前沿”课程能够为学生了解创意作品竞赛中不同赛道的行业背景、发展现状、痛点问题等提供资源渠道&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[180,181]},&quot;v&quot;:&quot;使学生在学习体悟中寻找潜在的创意点和学科碰撞点&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[182,183]},&quot;v&quot;:&quot;辅助学生酝酿创意&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[184,185]},&quot;v&quot;:&quot;创作更高质量的参赛作品&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[186,187]},&quot;v&quot;:&quot;同时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[188,189]},&quot;v&quot;:&quot;“青创+科技前沿”课程能够有助于学生从创意作品竞赛出发&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[190,191]},&quot;v&quot;:&quot;感受“科技创新”的魅力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[192,193]},&quot;v&quot;:&quot;种下“科技强国”的种子&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[194,195]},&quot;v&quot;:&quot;3.“青创+创新实践”&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[196,197]},&quot;v&quot;:&quot;为&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[198,199]},&quot;v&quot;:&quot;培养学生的创新精神&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[200,201]},&quot;v&quot;:&quot;提高学生创意创新能力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[202,203]},&quot;v&quot;:&quot;学生提供近距离接触创新团队并实际参与创新创业过程的机会&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[204,205]},&quot;v&quot;:&quot;计划开展一系列“青创+创新实践”活动：工程实训、名企走访、研学交流、走进实验室实践活动、优秀创新团队面对面座谈会、“创意校园”茶话会等&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[206,207]},&quot;v&quot;:&quot;小规模、高质量的“青创+创新实践”活动能够帮助学生在创新实践中增长才干、在实景研讨中收获经验、在亲身体会中感悟精神&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[208,209]},&quot;v&quot;:&quot;进而能够让学生在提出“创意金点子”后&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[210,211]},&quot;v&quot;:&quot;有兴趣、有热情、有能力地将创意延伸到实际&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[212,213]},&quot;v&quot;:&quot;进一步提高创意作品的完成度&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[214,215]},&quot;v&quot;:&quot;同时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[216,217]},&quot;v&quot;:&quot;“青创+创新实践”活动能够有助于学生在创意作品竞赛的实践中发掘潜力、增强能力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[218,219]},&quot;v&quot;:&quot;树立“强国有我”的决心&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[220,221]},&quot;v&quot;:&quot;4.“青创+技能培训”&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[222,223]},&quot;v&quot;:&quot;为&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[224,225]},&quot;v&quot;:&quot;提高学生的专业素养&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[226,227]},&quot;v&quot;:&quot;增强学生的综合能力&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[228,229]},&quot;v&quot;:&quot;帮助学生将创意落到实处、将创新进行到底&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[230,231]},&quot;v&quot;:&quot;计划开展系列“青创+技能培训”活动：商业计划书撰写培训、PPT设计与制作指南、决赛答辩模拟培训会等&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[232,233]},&quot;v&quot;:&quot;针对性强、实用性高的“创意+技能培训”活动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[234,235]},&quot;v&quot;:&quot;让学生的创意作品不仅能“点子好”“规划好”“落地好”&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[236,237]},&quot;v&quot;:&quot;也能“包装好”“展示好”&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[238,239]},&quot;v&quot;:&quot;进一步提升学生的创新创业实操能力&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[240,241]},&quot;v&quot;:&quot;同时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[242,243]},&quot;v&quot;:&quot;“青创+技能培训”活动能够有助于学生在创意作品竞赛的展示中收获全方面的成长&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[244,245]},&quot;v&quot;:&quot;为拔尖创新人才培养奠定坚实基础&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[246,247]},&quot;v&quot;:&quot;通知&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[248,249]},&quot;v&quot;:&quot;组委会将及时发布每次活动的相关通知及报名方式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[250,251]},&quot;v&quot;:&quot;请及时关注“华中大理想青年”微信公众号、“华中科技大学学生会”微信公众号等通知渠道&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[252,253]},&quot;v&quot;:&quot;同时&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[254,255]},&quot;v&quot;:&quot;组委会建立“青创+创意赛”QQ群（549609405）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[256,257]},&quot;v&quot;:&quot;请有意参与大学生创意作品竞赛及“青创+”系列成长活动的同学加入QQ群&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[258,259]},&quot;v&quot;:&quot;后续竞赛、活动安排将在群内通知&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[260,261]},&quot;v&quot;:&quot;请各院（系）团委、团支部高度重视、广泛宣传、积极动员学生参与华中科技大学第二届“科技强国”大学生创意作品竞赛及“青创+”系列成长活动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[262,263]},&quot;v&quot;:&quot;并按时提交报名材料&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[264,265]},&quot;v&quot;:&quot;未尽事宜请联系：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[266,267]},&quot;v&quot;:&quot;校团委科创部 吴学兵15927533635&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[268,269]},&quot;v&quot;:&quot;校团委组织部 孙海洋18827615693&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:15,&quot;p&quot;:{&quot;lines&quot;:[270,271]},&quot;v&quot;:&quot;校学生会秘书处 叶涛18222453179&quot;}]}]}]}]}]}]}]}]}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>
# 【关于举办华中科技大学第二届“科技强国”大学生创意作品竞赛暨“青创+”系列成长活动的通知】

## 现决定举办华中科技大学第二届“科技强国”大学生创意作品竞赛暨“青创+”系列成长活动

## 有关事项通知

### 一、活动主题

- 科技强国 创意未来

### 二、活动时间

- 2023年11月——2024年4月

### 三、组织机构

- 主办单位：共青团华中科技大学委员会、启明学院、工程实践创新中心、华中科技大学科技园、华中科技大学企业孵化器、湖北青创园（光谷）示范园、华中科技大学启明星空创客空间、新闻与信息传播学院、建筑与城市规划学院

- 承办单位：大学生创业实践中心、校团委组织部、校学生会

### 四、活动形式与内容

- （一）第二届“科技强国”大学生创意作品竞赛

    - 本届“科技强国”大学生创意作品竞赛是“青创+”系列成长活动培养成果的重要展示平台

        - 旨在鼓励学生发现问题并结合专业知识和生活感悟

        - 聚焦科技进步、美丽中国、人民生活、全民健康、校园发展等主题

        - 创作一批创新性强、实用性佳、落地性好的创意作品

        - 实现以赛促学、以赛促研、以赛促创

        - 为拔尖创新人才培养奠定坚实基础

    - 1.面向对象

        - 华中科技大学本科2021级（四年制）或2020级（五年制）及以下学生均可参与

        - 团队成员不超过6人

            - 其中本科一年级人数不低于50%

            - 指导老师不超过2人

            - 每人仅限报名1支团队

            - 允许跨院系组队

            - 参赛均从队长所在院系提交报名材料

    - 2.作品分类

        - 聚焦科技进步

            - 包括但不限于人工智能、智能制造、工业设计、工艺优化、产业升级、新材料、大数据、金融科技、数字经济、国家安全等领域

        - 聚焦美丽中国

            - 包括但不限于污染治理、生态保护、低碳产业发展、可持续资源开发、清洁能源应用、资源化利用、绿色生活、碳计量等领域

        - 聚焦人民生活

            - 包括但不限于智能家居、交通出行、物流服务、建筑设计、家政服务、养老服务、旅游休闲、法律服务及援助、餐饮服务、服饰设计等领域

        - 聚焦全民健康

            - 包括但不限于现代医疗技术、智能医疗设备、新药开发、健康康养、食药保健、智能医学、生物技术、生物材料、中医药现代化等领域

        - 聚焦校园发展

            - 包括但不限于校园文创、校园生活、校园设施、校园景观、数字校园等领域

    - 3.作品要求

        - 强调创意本身

            - 作品形式包括但不限于概念、设计、软件、模型、产品等

        - 参赛资格以报名表提交为准

            - 重点介绍基本情况、创意来源、特色亮点等

            - 同时辅以PPT补充介绍

            - 如有必要可提交其他有助于创意展示的支撑材料

        - 在“挑战杯”“互联网+”“创青春”及各类学科竞赛获得省级及以上荣誉的项目不可报名参赛

        - 如发现不符合以上要求

            - 或存在剽窃、盗用、提供虚假材料或违反相关法律法规的

            - 一经发现将取消报名资格和比赛成绩

            - 并自行承担一切法律责任

    - 4.评审方式

        - 初赛采用材料评审的方式

            - 决赛安排另行通知

    - 5.奖项设置

        - 组委会将根据初赛评审、决赛展示答辩选出金、银、铜奖作品和优秀奖作品

            - 为获奖团队颁发获奖证书与奖品

        - 同等条件下

            - 获奖团队成员将优先录取为我校青创营学员

        - 根据院（系）团委、基层团支部的赛事组织情况

            - 将评选出优秀组织奖若干

            - 并纳入院（系）团务工作开展情况考评指标

    - 6.参与方式

        - 请参赛团队填写附件1《华中科技大学第二届“科技强国”大学生创意作品竞赛报名表》及附件2《华中科技大学第二届“科技强国”大学生创意作品竞赛报名汇总表》

            - 并附作品PPT（不超过20页）及其他有助于作品展示的材料提交至院（系）团委

        - 请各院（系）团委审核作品参赛资格并汇总

            - 将电子版及扫描件发送至hustdc121@163.com

            - 团队材料文件夹命名为“作品类别-院系名称-团队名称”

            - 暂不需要纸质版报名材料

        - 院系汇总并提交参赛作品的截止时间为12月14日17:30

- （二）“青创+”系列成长活动

    - “青创+”系列成长活动以“用科技点亮创意梦想”为目标

        - 旨在为学生提供进一步了解学校创新创业活动的渠道和学习创新创业经验的平台

        - 同时针对大学生创意作品竞赛的参赛队员所需所盼开设一系列内容丰富、形式多样的创新创业活动

        - 包含：“青创+新生团课”“青创+科技前沿”“青创+创新实践”“青创+技能培训”等

        - 从而激发学生创意灵感

        - 引导学生踊跃投身科技创新活动

    - 同时建立参学、参课的激励机制

        - 相关活动记录计入学生的“第二课堂”学时

    - 1.“青创+新生团课”

        - 校团委组织部即将开展2023-2024学年新生团课

            - 计划将新生团课第四讲的主题定为学校共青团服务青年创新创业工作介绍及相关竞赛宣传动员

            - 面向全体2023级新生团员青年

                - 广泛宣传我校创新创业工作成果

                - 鼓励新生团员青年积极参与各类创新创业赛事、活动等

    - 2.“青创+科技前沿”

        - 为

            - 启发学生创意灵感

            - 开阔学生科技视野

            - 鼓励学生发现问题并结合专业知识和生活感悟、提出创意想法

        - 计划开展一系列“青创+科技前沿”活动：“科技强国”大学生创意作品竞赛宣介会、“头脑风暴 创意启发”论坛、创意作品竞赛各赛道的科技前沿讲座、创意作品竞赛往届获奖团队及创业校友经验分享会等

            - 丰富多样的“创意+科技前沿”课程能够为学生了解创意作品竞赛中不同赛道的行业背景、发展现状、痛点问题等提供资源渠道

                - 使学生在学习体悟中寻找潜在的创意点和学科碰撞点

                - 辅助学生酝酿创意

                - 创作更高质量的参赛作品

        - 同时

            - “青创+科技前沿”课程能够有助于学生从创意作品竞赛出发

            - 感受“科技创新”的魅力

            - 种下“科技强国”的种子

    - 3.“青创+创新实践”

        - 为

            - 培养学生的创新精神

            - 提高学生创意创新能力

            - 学生提供近距离接触创新团队并实际参与创新创业过程的机会

        - 计划开展一系列“青创+创新实践”活动：工程实训、名企走访、研学交流、走进实验室实践活动、优秀创新团队面对面座谈会、“创意校园”茶话会等

            - 小规模、高质量的“青创+创新实践”活动能够帮助学生在创新实践中增长才干、在实景研讨中收获经验、在亲身体会中感悟精神

                - 进而能够让学生在提出“创意金点子”后

                - 有兴趣、有热情、有能力地将创意延伸到实际

                - 进一步提高创意作品的完成度

        - 同时

            - “青创+创新实践”活动能够有助于学生在创意作品竞赛的实践中发掘潜力、增强能力

            - 树立“强国有我”的决心

    - 4.“青创+技能培训”

        - 为

            - 提高学生的专业素养

            - 增强学生的综合能力

            - 帮助学生将创意落到实处、将创新进行到底

        - 计划开展系列“青创+技能培训”活动：商业计划书撰写培训、PPT设计与制作指南、决赛答辩模拟培训会等

            - 针对性强、实用性高的“创意+技能培训”活动

                - 让学生的创意作品不仅能“点子好”“规划好”“落地好”

                - 也能“包装好”“展示好”

                - 进一步提升学生的创新创业实操能力

        - 同时

            - “青创+技能培训”活动能够有助于学生在创意作品竞赛的展示中收获全方面的成长

            - 为拔尖创新人才培养奠定坚实基础

    - 通知

        - 组委会将及时发布每次活动的相关通知及报名方式

            - 请及时关注“华中大理想青年”微信公众号、“华中科技大学学生会”微信公众号等通知渠道

        - 同时

            - 组委会建立“青创+创意赛”QQ群（549609405）

            - 请有意参与大学生创意作品竞赛及“青创+”系列成长活动的同学加入QQ群

            - 后续竞赛、活动安排将在群内通知

            - 请各院（系）团委、团支部高度重视、广泛宣传、积极动员学生参与华中科技大学第二届“科技强国”大学生创意作品竞赛及“青创+”系列成长活动

                - 并按时提交报名材料

                - 未尽事宜请联系：

                    - 校团委科创部 吴学兵15927533635

                    - 校团委组织部 孙海洋18827615693

                    - 校学生会秘书处 叶涛18222453179


</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>新闻</tag>
      </tags>
  </entry>
  <entry>
    <title>关于购置新的电脑</title>
    <url>/2023/11/01/1.Archieve/%E5%85%B3%E4%BA%8E%E8%B4%AD%E7%BD%AE%E6%96%B0%E7%9A%84%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<p>[[<strong>_大学]]<br>[[_</strong>设备]]</p>
<p>自己筛选了一下然后又是问了问贴吧老哥们<br>最后还是犹豫不决😂</p>
<p>不过还好暂时还不急，我这电脑目前做一些外围的工作还是可以做的</p>
<h3 id="这个是自己捣鼓的配置："><a href="#这个是自己捣鼓的配置：" class="headerlink" title="这个是自己捣鼓的配置："></a>这个是自己捣鼓的配置：</h3><ul>
<li>i5-12490F 【1050】</li>
<li>微星 B760M DDR4 【720】</li>
<li>RTX 4060 GDDR6 8G【2450】</li>
<li>金百达 32G DDR4 3600【439】</li>
<li>1T PCIe4.0【309】</li>
<li>长城X650w电源【331】</li>
<li>散热和机箱随意￥400解决</li>
<li>键鼠￥100解决  </li>
<li>显示器￥600解决</li>
<li>一共6913￥</li>
</ul>
<span id="more"></span>
<h3 id="这个是贴吧老哥给的"><a href="#这个是贴吧老哥给的" class="headerlink" title="这个是贴吧老哥给的"></a>这个是贴吧老哥给的</h3><p><a href="https://markdown.com.cn">传送门</a></p>
<ul>
<li>CPU：13600kf散片【1750】多</li>
<li>主板：微星b660m迫击炮max wifi d4【770】多</li>
<li>内存：2*16g阿斯加特洛基3600c14三星bdie【640】鱼</li>
<li>散热：先马MW360无风扇【230】多</li>
<li>固态：1T固德佳gxf pro【300】多</li>
<li>显卡：三风扇2080ti魔改22g三星显存 300A核心 店保一年【2240】多</li>
<li>电源：矿龙1250w带模组线【130】鱼</li>
<li>机箱：大水牛拯救者【80】多</li>
<li>机箱风扇：5个无光风扇【20】多</li>
<li>水冷排风扇：3个鑫桂盟12025暴力风扇3000转定速大4D供电【40】多</li>
<li>主机总价：1750+770+640+230+300+2240+130+80+20+40=6200</li>
<li>显示器：杂牌27寸2k165hzIPS显示器【500】多</li>
<li>USB键鼠套装【15】多</li>
</ul>
<h3 id="对比："><a href="#对比：" class="headerlink" title="对比："></a>对比：</h3><p>总的来说，贴吧老哥给出了一个让我意外的选择，那就是选用了<strong>三风扇2080ti魔改22g三星显存</strong></p>
<p>确实，如果是用来炼丹的话这无疑是最高性价比的东西，但是除此之外，我还在忧虑的是质量的问题。</p>
<p>另外，老哥的这套配置属于是把钱用在了刀刃上，可以说是十分合理的选择。</p>
<p>那么其实就是基本上敲定了按照这套配置装，另外我再花个100请学长帮忙装电脑应该就差不多。</p>
]]></content>
      <tags>
        <tag>设备</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代-《帝国的边界》：利用人性中的怀疑与猜忌</title>
    <url>/2023/12/04/1.Archieve/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3-%E3%80%8A%E5%B8%9D%E5%9B%BD%E7%9A%84%E8%BE%B9%E7%95%8C%E3%80%8B%EF%BC%9A%E5%88%A9%E7%94%A8%E4%BA%BA%E6%80%A7%E4%B8%AD%E7%9A%84%E6%80%80%E7%96%91%E4%B8%8E%E7%8C%9C%E5%BF%8C/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">人性就是最复杂的决策问题</span><br></pre></td></tr></table></figure>
<p>[[<strong>_冰汽时代]]<br>[[_</strong>游戏设计]]</p>
<h3 id="在冰汽时代-《帝国的边界》中"><a href="#在冰汽时代-《帝国的边界》中" class="headerlink" title="在冰汽时代-《帝国的边界》中"></a>在冰汽时代-《帝国的边界》中</h3><p>在游戏 冰汽时代-《帝国的边界》中 游戏需要让玩家和 <code>自己腐败的母城、温泉村、儿童矿井、废船</code> 这四个其他的定居点进行贸易，或者进行影响。</p>
<h4 id="1-游戏中过于浅层的决策系统"><a href="#1-游戏中过于浅层的决策系统" class="headerlink" title="1.游戏中过于浅层的决策系统"></a>1.游戏中过于浅层的决策系统</h4><p>在游戏的后面，我发现整个系统根本就没有那么复杂：你跟他交换资源或者给予它帮助就可以增加互惠值，你只要向他们要求东西就会减低互惠值。</p>
<p>……互惠值其实就像是你能从他那里拿的资源的限额，其实根本不会影响之间的关系。</p>
<p>而你们之间还有一一个关系的值，则是由特殊事件决定的。比如说温泉村因为开发水泵把间歇泉搞爆发了，导致了温泉村的损失……然后你就选一个怪温泉还是怪自己。</p>
<ul>
<li>选择怪自己：自己居民的不满值增加，你和温泉村的关系变好</li>
<li>选择怪泉水：自己居民的不满值会上升，你和温泉村的关系会变差。</li>
</ul>
<p>就是这样的一个简单的决策，实际上这个选择对后面就没有别的影响了。我当时还以为这个水泵是关键决策……</p>
<p>说实话，这个决策的设计水平的前后关联度和其他的一系列东西，感觉都不如gal设计的复杂。</p>
<h4 id="2-如果给他们赋予复杂的人性……"><a href="#2-如果给他们赋予复杂的人性……" class="headerlink" title="2.如果给他们赋予复杂的人性……"></a>2.如果给他们赋予复杂的人性……</h4><p>如果给他们赋予复杂的人性，增加你们之间的相互影响程度，游戏可以变得更加有意思。</p>
<p>是选择背叛欺骗最大化自己的利益，还是合作共赢？在这样艰苦的环境之中，我们无法不以最大的恶意来揣测对方的心理。</p>
<p>你需要花费事件了解对方，试探对方的底线……<br>对方也会试探你的底线……</p>
<p>如果能够这样，那么游戏将会变得十分有意思……</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">总的来说，帝国的边界很有创意地加入了外交系统</span><br><span class="line"></span><br><span class="line">但是整个外交系统构建得又过于简单了，如果能够复杂一点，那么整个游戏的可玩度将会大大提升。</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代：《帝国的边界》</title>
    <url>/2023/12/04/1.Archieve/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3%EF%BC%9A%E3%80%8A%E5%B8%9D%E5%9B%BD%E7%9A%84%E8%BE%B9%E7%95%8C%E3%80%8B/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**苍天已死，黄天当立**</span><br></pre></td></tr></table></figure>
<p>[[<strong>_冰汽时代]]<br>[[_</strong>游戏体验日记]]</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在这部dlc中，你将作为一支探险小队，接到命令的你将在前政府留下来的军火库中搜集资源，并且提交给新伦敦的政府。</p>
<p>但是政府腐败日益增长，你也因为伦敦长期不提供食物而关系破裂。</p>
<p>我们没有能源塔，在孤独无援，冰天雪地之中，我们需要找到其他的盟友并且打好关系，只有这样我们才能活下去。</p>
<p>在游戏的最后，新伦敦四分五裂，其中的人们向我们求助，救援？还是不救？面对昔日的母城。</p>
<span id="more"></span>
<h2 id="比较有意思的地方"><a href="#比较有意思的地方" class="headerlink" title="比较有意思的地方"></a>比较有意思的地方</h2><p>在这一dlc中，可以看作游戏将“探索”功能进行了进一步的改造，我们不仅能探索到资源和人口，还多了一种其他的定居点。我们需要和其他的定居点打好关系，交换物资，帮助他们发展。这是十分有趣的一环。</p>
<h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><h4 id="交易与忠诚"><a href="#交易与忠诚" class="headerlink" title="交易与忠诚"></a>交易与忠诚</h4><p>在这个dlc中，玩家并不能很好的获取木头/食物/人口等资源，而是<strong>需要与其他的定居点合作</strong>。</p>
<p>所以说游戏的主要矛盾除了来源于环境，还来源于其他的定居点。</p>
<p>为了和其他的定居点达成良好的合作，我们需要提供资源，提供人口和技术，来帮助他们发展，这样我们才能成为坚实的同盟，这些定居点也会在最后的时刻帮助我们。</p>
<p>在其他定居点对我们的资源的索取的阻力之外，不同定居点之间的价值观和政策会有所不同。如何解决意外事件也是玩家需要抉择的地方</p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代：中度游玩体验</title>
    <url>/2023/12/02/1.Archieve/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3%EF%BC%9A%E4%B8%AD%E5%BA%A6%E6%B8%B8%E7%8E%A9%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>[[<strong>_冰汽时代]]<br>[[_</strong>游戏体验日记]]</p>
<p>今天游玩通关了冰汽时代这款游戏，尤其是体验完了最后的秋天和帝国的边境，对于游戏有了更深的理解。</p>
<p>但是可以说，我的初次印象还是比较准确的，其中指出的问题仍然是关键的问题，但是尤其是在dlc中，游戏体现出了更加丰富的玩法以及十分有意思的设计。以至于我认为dlc对于游戏的体验来说至关重要。</p>
<span id="more"></span>
<p>首先聊聊<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![[冰汽时代：最后的秋天]]</span><br></pre></td></tr></table></figure></p>
<p>然后就是还有<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![[冰汽时代：《帝国的边界》]]</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代：最后的秋天</title>
    <url>/2023/12/02/1.Archieve/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3%EF%BC%9A%E6%9C%80%E5%90%8E%E7%9A%84%E7%A7%8B%E5%A4%A9/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**做个资本家压迫工人阶级**</span><br></pre></td></tr></table></figure>
<p>[[<strong>_游戏体验日记]]<br>[[_</strong>冰汽时代]]</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在在这部dlc中，时间定为了寒冬来临的最后一个秋天，你接到公司的命令，加急制造能源塔，以对抗即将到来的严寒。</p>
<p>在游戏中，你的游戏目标发生了变化，同时也会解锁新的建筑和法律、科技树……</p>
<span id="more"></span>
<h2 id="比较有意思的地方"><a href="#比较有意思的地方" class="headerlink" title="比较有意思的地方"></a>比较有意思的地方</h2><h3 id="一、玩家的目标和阻力以及实现路径"><a href="#一、玩家的目标和阻力以及实现路径" class="headerlink" title="一、玩家的目标和阻力以及实现路径"></a>一、玩家的目标和阻力以及实现路径</h3><p>游戏中需要给玩家较为明确的目标和较为明确的实现路径</p>
<h4 id="1-玩家的目标"><a href="#1-玩家的目标" class="headerlink" title="1. 玩家的目标"></a>1. 玩家的目标</h4><p>在这局游戏中，玩家的目标变成了在指定期间内完成一定的能源塔建造任务。</p>
<h4 id="2-阻力"><a href="#2-阻力" class="headerlink" title="2.阻力"></a>2.阻力</h4><p>游戏中，玩家实现目标的主要阻力来源为：</p>
<ul>
<li>十分紧迫的工期</li>
<li>工人罢工的可能</li>
<li>工地的危险等级</li>
</ul>
<p>除此之外还有：</p>
<ul>
<li>前期的资源问题(食物，木头……)</li>
<li>后期的环境问题(天气较冷)</li>
</ul>
<p>这个阻力十分的有意思，形成了一个三角型的矛盾结构：<br><a href="https://www.imagehub.cc/image/piyr2UP.1PycWr"><img src="https://s1.imagehub.cc/images/2023/12/05/60b4c8c9bc2cd5db236f4dee3f046d09.jpeg" alt="60b4c8c9bc2cd5db236f4dee3f046d09.jpeg"></a></p>
<p>不安全的环境除了会降低工人的积极性以外，还会增加意外事故的发生率。一旦发生了意外事故，实际上是十分得不偿失的。这也为玩家实现目标形成了一定的阻力。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">步步为营终不成事，急功近利适得其反</span><br></pre></td></tr></table></figure></p>
<h4 id="3-实现路径"><a href="#3-实现路径" class="headerlink" title="3.实现路径"></a>3.实现路径</h4><p>资源有限，你需要合理分配你的资源，将其运用到管理，安全，工厂上面，并且指定合适的政策，才能够完成最终的目标。</p>
<p>在这种压力之下，我被迫着选择了 招募 犯人进行工厂劳动、使用工程师对工人和犯人进行监管的路径，而最后，我则是给你个进更进一步，将工人阶级进行分化，顺从我的变为工程师，将忤逆我的变为犯人。</p>
<p>强制犯人劳动，毫不顾忌他们的生死……</p>
<p><strong>比较有意思的事情就是这个选择并不是游戏告诉我你需要怎么做怎么做，而是玩家在自行的判断之下自己做出的选择、自己推理出的实现路径</strong></p>
<h3 id="二、游戏的资源"><a href="#二、游戏的资源" class="headerlink" title="二、游戏的资源"></a>二、游戏的资源</h3><p>在这种类型的游戏中，游戏资源相当的重要。</p>
<h4 id="1-食物和人口"><a href="#1-食物和人口" class="headerlink" title="1.食物和人口"></a>1.食物和人口</h4><p>在原作中，食物由对应的生产设施生产而来，而人口只能靠着外出探索和靠着随机事件获取。</p>
<p>但是在这一dlc中，食物的获取变成了你需要派遣 侦察队 外出寻找动物出没的地点，然后建设打猎场，总而来说依靠探索获得食物。</p>
<p>而人口则是由 电报站，消耗资源配额，从远处运输过来。当然，探索中的意外事故也可能会让你可以获得人口。</p>
<p>使用电报站可以获得工人（2配额），工程师（4配额），蒸汽核心（20配额），配额每小时加1。后期签署使用犯人进行生产的法令会多一种犯人（1配额）。那么在这种新的资源获取方式之下，如何分配资源配额从而从远处运出回来合适的人口，成为了玩家需要决策的十分重要的点。</p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>冰汽时代：游玩初体验</title>
    <url>/2023/11/27/1.Archieve/%E5%86%B0%E6%B1%BD%E6%97%B6%E4%BB%A3%EF%BC%9A%E6%B8%B8%E7%8E%A9%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>[[<strong>_冰汽时代]]<br>[[_</strong>游戏体验日记]]</p>
<p>冰汽时代是一个模拟经营的策略性游戏，玩家需要子啊严寒、饥饿和物资匮乏的条件下带领玩家度过寒冬。</p>
<p>今天大概花了5h把游戏的第一章给打通关了，也有了一些想法和评价，下面我将我认为游戏中的亮点和缺点标记出来。<br><span id="more"></span></p>
<h3 id="一、游戏中的亮点"><a href="#一、游戏中的亮点" class="headerlink" title="一、游戏中的亮点"></a>一、游戏中的亮点</h3><h4 id="1-资源的设计上："><a href="#1-资源的设计上：" class="headerlink" title="1.资源的设计上："></a>1.资源的设计上：</h4><p>资源总共有四种：</p>
<ul>
<li>人口<ul>
<li>工程师</li>
<li>工人</li>
<li>小孩</li>
</ul>
</li>
<li>建筑用的土地</li>
<li>地图上的资源</li>
<li>已有的资源<ul>
<li>煤炭</li>
<li>木头</li>
<li>钢铁</li>
<li>生食物</li>
<li>口粮份数</li>
<li>蒸汽核心</li>
</ul>
</li>
</ul>
<p>总的来说其实除了“热量&amp;煤炭“这一点，与其他的模拟经营没有什么区别</p>
<h4 id="2-房屋的设计布局"><a href="#2-房屋的设计布局" class="headerlink" title="2.房屋的设计布局"></a>2.房屋的设计布局</h4><p>房屋按照换状环绕在能量塔周围，既符合背景设定，有体现出独特的设计美感。</p>
<p>在建设路径的时候，会按照环和直径的线给玩家指示，十分地直观。</p>
<h4 id="3-政策体系"><a href="#3-政策体系" class="headerlink" title="3.政策体系"></a>3.政策体系</h4><p>在游戏的进行过程中，玩家需要选择不同的政策进行实施，这一点还是十分有意思的。硬要说，其实也挺平庸，毕竟这种设计其实挺常见，单项选择的科技树其实和这个等效。</p>
<p>但是游戏中将这种技能树和”政策“的名称相结合就有点有意思的意味了。</p>
<h4 id="4-偶然事件体系"><a href="#4-偶然事件体系" class="headerlink" title="4.偶然事件体系"></a>4.偶然事件体系</h4><p>在游戏中，你将会面对一系列偶然事件，有的是好事情，有的是突发事故，有的是人们的抗议。给原本死板的游戏带来了一些调剂。</p>
<h4 id="5-远征体系"><a href="#5-远征体系" class="headerlink" title="5.远征体系"></a>5.远征体系</h4><p>在游戏中可以派遣远征队去探索别的地方，从而获取额外的物资或者人口。这也是游戏中人口的唯一获取方式。</p>
<p>远征体系在原本过于确定的策略之外，给了玩家一个触发惊喜感的途径，毕竟远征结果是未知的。</p>
<h3 id="二、依我拙见，游戏中可以改善的几个点。"><a href="#二、依我拙见，游戏中可以改善的几个点。" class="headerlink" title="二、依我拙见，游戏中可以改善的几个点。"></a>二、依我拙见，游戏中可以改善的几个点。</h3><h4 id="1-政策体系的ui系统不支持拖动，而只支持点击。"><a href="#1-政策体系的ui系统不支持拖动，而只支持点击。" class="headerlink" title="1.政策体系的ui系统不支持拖动，而只支持点击。"></a>1.政策体系的ui系统不支持拖动，而只支持点击。</h4><p>这样玩家无法很便捷地查看可以解锁的政策体系。</p>
<p>虽然说这样可以强调政策的先后递进顺序，但是我也没有看出来为什么需要强调政策的前后递进关系，而且这样的操作真的很别扭。</p>
<p>更好的做法是做成可以自由拖动的页面。</p>
<h4 id="2-政策系统还是过于单薄"><a href="#2-政策系统还是过于单薄" class="headerlink" title="2.政策系统还是过于单薄"></a>2.政策系统还是过于单薄</h4><p>政策系统里面其实就4个大方向，每个大方向下面有1~2个选项，总共选项就不多，加上选项进行选择了之后无法变更，以及政策之间无法发生联动，基本上只有比较单一的效果。最终的结果就是这个玩法没有深度。</p>
<p>如果将更多的政策细化添加进去，并且在不同的政策之间产生联动效果，那么将会有更多的可玩性以及趣味性。</p>
<p>不过这也意味着需要在这方面下大功夫，以及增加玩家的学习成本，但是我认为总的来说对于其的趣味性来说是值得的。</p>
<p>可以考虑[[灵感：一种另类的科技树设计]] 哈哈哈</p>
<h4 id="3-游戏的物资系统"><a href="#3-游戏的物资系统" class="headerlink" title="3.游戏的物资系统"></a>3.游戏的物资系统</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 有误差的评价</span><br><span class="line"></span><br><span class="line">#### 3.游戏的物资系统比较复杂，其中生食材完全可以省略</span><br><span class="line"></span><br><span class="line">本身就有：煤炭，木头，钢铁，生食物四种需要通过建造生产设备来获取的物资，其中的生食物还不可以直接食用，需要通过食堂加工之后才可以变成口粮。如果说这一步的加工只是为了方便玩家在后续解锁的煮粥/掺木屑进行选择的话我感觉好像没有什么必要。更好的解决办法可能是当玩家采集回来之后统一使用”口粮“来进行衡量，而使用何种食品类型可以直接由改变每名居民消耗的口粮数目来实现。</span><br></pre></td></tr></table></figure>
<p>来自中度游玩体验之后：</p>
<p>上面的评价有所偏差，游戏中的资源在食材这一物品上的设计是没有问题的。这样的设计增加了玩家利用食材的难度，而且作为唯一一个单一使用途径，需要两次处理才能正常使用的物资，在游戏中也有着特殊意义。</p>
<p>玩家需要合理规划生食材的获取和食物配额的合成，避免额外的产能造成的浪费。</p>
<h4 id="4-最优解化"><a href="#4-最优解化" class="headerlink" title="4.最优解化"></a>4.最优解化</h4><p>对于玩家来说，在经历了几局之后总是可以找到最优的解法。并且环境对于这样的最优解法的选择上的影响不大，游戏中唯一可以迫使玩家不去选择“最优解”的唯一办法就是把最优解给禁用。实际上这种设计是比较没有深度的，也使得游戏在决策上会显得有些肤浅。<br>举个例子，在游戏中，玩家有两种可以获得煤矿的方式，一种是使用挖矿机在煤矿上直接采集矿物，另外一种是使用采矿机器将随便一个地方冲出煤矿堆，然后在使用收集站对煤矿进行收集。在游戏中，除非迫不得已，一般直接选择后者。有下面几个原因：</p>
<ol>
<li>+产能更高</li>
<li>+人力成本ok，采集站可以使用儿童</li>
<li>+升级采集点数是前期本身就需要点的，加上采矿机不需要蒸汽核心，使用后者的研发成本更低。</li>
<li>-唯一的缺点：占地面积较大。</li>
</ol>
<p>还有比如说伐木机，和冰冻木头钻机，一般直接选择后者原因如下：</p>
<ol>
<li>伐木机的资源数量是有限的，最后没有木头可以采了还是得要钻机。</li>
<li>节约研究成本，只需要点一条路就可以了。</li>
<li>前期基本上有可以直接采集的木板，所以说只要升级采集速度基本上就ok</li>
</ol>
<p>还有供暖，基本上核心供暖+加热器&gt;小的加热站<br>反正游戏中挺多这种“最优解”的。这无疑会使得整体的决策变得较为无趣。</p>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>冰汽时代</tag>
      </tags>
  </entry>
  <entry>
    <title>英语口语测试</title>
    <url>/2023/12/18/1.Archieve/%E5%A4%A7%E4%B8%80%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 一</span><br><span class="line"></span><br><span class="line">Albert Einstein&#x27;s quote emphasizes the importance of personal growth and character development over material success. In my opinion, this statement is highly relevant in today&#x27;s society, where people often measure their worth based on their achievements and possessions.</span><br><span class="line"></span><br><span class="line">To become a man of value, one should focus on developing qualities such as integrity, empathy, and humility. These traits are essential for building strong relationships with others and contributing positively to society. For example, a person who values honesty will be more trustworthy and respected by their peers, which can lead to better opportunities in both personal and professional life.</span><br><span class="line"></span><br><span class="line">Another aspect of becoming a man of value is continuous learning and self-improvement. This can involve acquiring new skills, expanding knowledge, and challenging oneself to step out of their comfort zone. By doing so, individuals can grow as individuals and make meaningful contributions to the world around them.</span><br><span class="line"></span><br><span class="line">In conclusion, Albert Einstein&#x27;s advice to focus on becoming a man of value rather than just a successful one is a timeless reminder that true success comes from within. By cultivating important qualities like integrity, empathy, and humility, and continuously striving for self-improvement, individuals can lead fulfilling lives and make a positive impact on those around them.</span><br></pre></td></tr></table></figure>
<p>Student A: Hey, have you ever come across that quote by Albert Einstein about personal growth and character development?</p>
<p>Student B: Yeah, I think I remember it. He said something like, “Try not to become a man of success, but rather try to become a man of value.”</p>
<p>Student A: Exactly! I’ve been thinking a lot about that lately, especially in today’s society where people often judge themselves and others based on achievements and possessions.</p>
<p>Student B: That’s true. It’s easy to get caught up in the materialistic side of things and forget about the importance of personal qualities.</p>
<p>Student A: Definitely. To me, being a person of value means having traits like integrity, empathy, and humility. These are the qualities that help us build strong relationships with others and contribute positively to society.</p>
<p>Student B: I couldn’t agree more. For instance, honesty is a crucial aspect of integrity. If someone values honesty, they’re more likely to be trusted and respected by their peers, which can lead to better opportunities in both their personal and professional life.</p>
<p>Student A: Absolutely. And another important aspect of becoming a person of value is continuous learning and self-improvement. This could involve acquiring new skills, expanding our knowledge, and stepping out of our comfort zones.</p>
<p>Student B: Yes, by doing so, we can grow as individuals and make meaningful contributions to the world around us. It’s not just about what we have or what we’ve achieved, but who we are as people and how we can impact others positively.</p>
<p>Student A: In conclusion, I believe that Albert Einstein’s advice is still very relevant today. True success comes from within, and by cultivating important qualities like integrity, empathy, and humility, and continuously striving for self-improvement, we can lead fulfilling lives and make a positive impact on those around us.</p>
<p>Student B: Well said. It’s a great reminder that our character and personal growth are just as important, if not more so, than any external success we may achieve.</p>
<p>二<br>       Emotional intelligence, or EQ (Emotional Quotient), refers to the ability to Emotional intelligence, or EQ (Emotional Quotient), refers to the ability to recognize, understand, and manage one’s own emotions, as well as the emotions of others. It involves being aware of how emotions influence thoughts, behaviors, and relationships, and using this awareness to navigate social situations effectively.</p>
<p>Being emotionally intelligent is indeed important for several reasons:</p>
<ol>
<li>Better Relationships: Emotionally intelligent individuals are more empathetic and can better understand the feelings of others. This helps them build stronger connections with people around them, leading to healthier and more fulfilling relationships.         </li>
</ol>
<p>Example: A manager who is emotionally intelligent can sense when an employee is feeling stressed or overwhelmed and offer support or resources to help them cope. This not only improves the employee’s well-being but also increases their loyalty and productivity.</p>
<ol>
<li>Improved Communication: Emotionally intelligent people are skilled at expressing their thoughts and feelings in a clear and concise manner, which makes communication more effective. They also listen actively and respond appropriately to others, fostering open and honest dialogue.</li>
</ol>
<p>Example: In a family setting, a child who is emotionally intelligent might express their frustration about a task in a calm and respectful manner, making it easier for their parents to understand their needs and provide guidance.</p>
<ol>
<li>Better Decision Making: Emotional intelligence allows individuals to make decisions based on both logic and emotion, ensuring that they consider the potential impact on themselves and others. This leads to more balanced and thoughtful choices.</li>
</ol>
<p>Example: A student who is emotionally intelligent might choose a college major not only based on its academic reputation but also on their personal interests and values, leading to greater satisfaction in their chosen field.</p>
<ol>
<li>Reduced Stress and Anxiety: Emotionally intelligent individuals are better equipped to manage stress and anxiety, as they can identify their emotional triggers and develop coping strategies to deal with them.</li>
</ol>
<p>Example: A person who is emotionally intelligent might practice mindfulness or engage in physical activity as a way to manage stress during a busy workday, rather than relying on unhealthy coping mechanisms like overeating or substance abuse.</p>
<ol>
<li>Increased Success: Emotional intelligence has been linked to various aspects of success, including career advancement, leadership skills, and overall life satisfaction. People with high EQ are often more adaptable, resilient, and able to navigate challenges effectively.</li>
</ol>
<p>Example: A CEO who is emotionally intelligent can inspire and motivate their employees, fostering a positive work environment that leads to increased productivity and innovation.</p>
<p>三</p>
<pre><code>   Friends are an integral part of our lives, providing us with emotional support. Friends are an integral part of our lives, providing us with emotional support, companionship, and a sense of belonging. They play a crucial role in shaping our personalities, values, and beliefs. Friendship benefits people in numerous ways, both emotionally and socially.
</code></pre><p>Firstly, friends provide emotional support during difficult times. When we face challenges or hardships, having someone to confide in can make all the difference. For example, when I was going through a tough breakup, my best friend listened to me vent and offered words of encouragement. Her support helped me get through that difficult period and move on with my life.</p>
<p>Secondly, friends help us develop social skills and expand our horizons. Through friendships, we learn how to communicate effectively, resolve conflicts, and empathize with others. For instance, I have a friend who is from a different cultural background than me. Spending time with her has taught me about her culture and traditions, and it has broadened my perspective on the world.</p>
<p>Thirdly, friends contribute to our overall well-being and happiness. Studies have shown that people with strong social connections tend to live longer, healthier lives. Having friends to share experiences with can also increase our feelings of happiness and fulfillment. For example, I recently went on a trip with some close friends, and the memories we made together have brought me joy even months later.</p>
<p>Fourthly, friends can serve as mentors or role models, inspiring us to grow and achieve our goals. They can offer advice, guidance, and support as we navigate our personal and professional lives. For instance, I have a friend who is a successful entrepreneur. She has shared her experiences and insights with me, which have motivated me to pursue my own business ventures.</p>
<p>In conclusion, friends play a vital role in our lives by providing emotional support, helping us develop social skills, contributing to our well-being and happiness, and serving as mentors or role models. The benefits of friendship are immeasurable, and it is essential to nurture and cherish these relationships throughout our lives.</p>
<p>四</p>
<p>One scientific discovery that has had a huge impact on how we live today is the invention of the Internet. The Internet has revolutionized the way we communicate, access information, and conduct business.</p>
<p>Before the Internet, people relied on traditional forms of communication such as letters, phone calls, and face-to-face meetings to stay in touch with others and gather information. With the advent of the Internet, these methods have become outdated. Today, we can connect with anyone in the world instantly through email, social media, and video conferencing. This has made it easier for people to maintain relationships and collaborate on projects regardless of their physical location.</p>
<p>In terms of accessing information, the Internet has also transformed the way we learn and research. In the past, people had to rely on books, encyclopedias, and other printed materials to find answers to their questions. Now, with just a few clicks, we can access a vast amount of information on any topic from anywhere in the world. This has made education more accessible and allowed people to stay informed about current events and trends.</p>
<p>Finally, the Internet has had a significant impact on the business world. Online shopping has become increasingly popular, allowing consumers to purchase goods and services from the comfort of their own homes. Additionally, many businesses have shifted their operations online to reach a wider audience and reduce costs. This has led to the rise of e-commerce and digital marketing, which have become essential components of modern commerce.</p>
<p>Overall, the invention of the Internet has had a profound impact on how we live today by changing the way we communicate, access information, and conduct business.</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>大学</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>制作一个可以将文本处理成Xmind格式的小程序</title>
    <url>/2023/11/03/1.Archieve/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E5%B0%86%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E6%88%90Xmind%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>[[___编程]]</p>
<h3 id="总而来说失败了。。"><a href="#总而来说失败了。。" class="headerlink" title="总而来说失败了。。"></a>总而来说失败了。。</h3><p>&emsp;&emsp;我本来是想做一个自动将文本处理成xmind格式的小程序。<br>&emsp;&emsp;但是我不知道为什么一对字符进行处理就会出现乱码。。。</p>
<h3 id="收获："><a href="#收获：" class="headerlink" title="收获："></a>收获：</h3><h4 id="1-regex的使用"><a href="#1-regex的使用" class="headerlink" title="1.regex的使用"></a>1.regex的使用</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;regex&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//通过这个设定 正则表达式</span></span><br><span class="line"><span class="function">regex <span class="title">pattern0</span><span class="params">(<span class="string">&quot;([,，]+)&quot;</span>)</span></span>;</span><br><span class="line"><span class="comment">//通过这个进行替换</span></span><br><span class="line"><span class="built_in">regex_replace</span>(原来的字符串,正则表达式,替换字符串);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h4 id="2-有关于中文字符"><a href="#2-有关于中文字符" class="headerlink" title="2.有关于中文字符"></a>2.有关于中文字符</h4><p>&emsp;&emsp;中文字符占两个字符位置，所以不可以用<code>&#39;我&#39;</code>，而是tm要用<code>&quot;我&quot;</code>。所以说所有基础原理是操作char类型的都需要重写。<br>&emsp;&emsp;只能说是最不爱国的一集……</p>
<h4 id="3-string的相关操作"><a href="#3-string的相关操作" class="headerlink" title="3.string的相关操作"></a>3.string的相关操作</h4><ul>
<li>其实在开头和结尾的插入可以直接用加法减法写</li>
</ul>
<h4 id="4-使用自定义输入输出流输入-输出txt"><a href="#4-使用自定义输入输出流输入-输出txt" class="headerlink" title="4.使用自定义输入输出流输入/输出txt"></a>4.使用自定义输入输出流输入/输出txt</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;input.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">ofstream <span class="title">out</span><span class="params">(<span class="string">&quot;output.txt&quot;</span>)</span></span>;</span><br><span class="line">in&gt;&gt;……;</span><br><span class="line">out&lt;&lt;……;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>大学：大一下英语分数计算</title>
    <url>/2024/02/26/1.Archieve/%E5%A4%A7%E5%AD%A6%EF%BC%9A%E5%A4%A7%E4%B8%80%E4%B8%8B%E8%8B%B1%E8%AF%AD%E5%88%86%E6%95%B0%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p>[[<strong>_大学]]<br>[[_</strong>英语]]</p>
<p>分数构成如下：</p>
<ol>
<li>考试 <strong>15分</strong>（大学英语词汇5-8单元<em>不检查</em>）</li>
<li>好策-课本任务完成 <strong>5分</strong>（可以使用网页端刷完3.11开放）7h1分，正确率80%4分</li>
<li>小说阅读 <strong>10分</strong> 3.18-5.26 每周完成阅读任务 在6.2之前完成阅读</li>
<li>口语对话 <strong>10分</strong></li>
</ol>
<p>一共40分，最后按比例折算为绩点。</p>
<hr>
<p>其实最主要的是需要考虑是否能够转变观念，将课堂要求的任务不在看做任务而是自主完成学习提升的途径。<br>[[___未完成]]</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>未完成</tag>
        <tag>大学</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>GTD时间管理法</title>
    <url>/2023/11/20/1.Archieve/%E5%AF%B9%E4%BA%8EGTD%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E6%B3%95%E7%9A%84%E7%9C%8B%E6%B3%95/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>效率工具]]</p>
<h1 id="GTD时间管理法"><a href="#GTD时间管理法" class="headerlink" title="GTD时间管理法"></a>GTD时间管理法</h1><p>GTD时间管理法，全称为“go to done”今天学习了GTD时间管理法的原理应用等等等等，总而言之，感觉不是很好用。</p>
<span id="more"></span>
<h3 id="一、GTD时间管理法是什么？"><a href="#一、GTD时间管理法是什么？" class="headerlink" title="一、GTD时间管理法是什么？"></a>一、GTD时间管理法是什么？</h3><p>关于这个可以参考up主 topbook 的相关视频<br><a href="https://www.bilibili.com/video/BV1wE411176Q/">GTD 自我管理、时间管理教程</a>，<br>也可去查看我后续可能会放在reference里面的 [[GTD时间管理]]</p>
<h3 id="二、GTD时间管理法哪里不好用"><a href="#二、GTD时间管理法哪里不好用" class="headerlink" title="二、GTD时间管理法哪里不好用"></a>二、GTD时间管理法哪里不好用</h3><h4 id="1-复杂的结构"><a href="#1-复杂的结构" class="headerlink" title="1.复杂的结构"></a>1.复杂的结构</h4><p>GTD时间管理法将所有的事项进行拆解分析排序之后形成了7个事项栏：</p>
<ul>
<li>参考资料（Reference）</li>
<li>可能清单（Someday/maybe）</li>
<li>回收箱（Trash）</li>
<li>项目清单（“Plan project“ plan）</li>
<li>立即做</li>
<li>等待清单（”Waiting for“ task）</li>
<li>执行清单（”@Context” task“）</li>
</ul>
<p>而后再按照一定的逻辑顺序将事项进行排序。<br>相比之下，或许我现在的任务处理方式更简洁明了并具有实际意义。</p>
<h4 id="2-体系的构建较为复杂"><a href="#2-体系的构建较为复杂" class="headerlink" title="2.体系的构建较为复杂"></a>2.体系的构建较为复杂</h4><p>因为结构复杂，所以说最后涉及的体现形式会十分复杂，最显著的一点比如说：处理一个事情可能要跨越好几个应用，这对于使用者是十分不友好的。</p>
<h3 id="三、我从中学到了什么"><a href="#三、我从中学到了什么" class="headerlink" title="三、我从中学到了什么"></a>三、我从中学到了什么</h3><h4 id="1-“go-to-done”使用的是done"><a href="#1-“go-to-done”使用的是done" class="headerlink" title="1. “go to done”使用的是done"></a>1. “go to <strong>done</strong>”使用的是done</h4><p>“go to <strong>done</strong>”使用的是done这个字眼，实际上我们在完成任务清单的时候，需要抓住的是<strong>本质上有价值的结果</strong>，而并非是事项本身。</p>
<h4 id="2-将“飞项”纳入我的时间管理体系"><a href="#2-将“飞项”纳入我的时间管理体系" class="headerlink" title="2. 将“飞项”纳入我的时间管理体系"></a>2. 将“飞项”纳入我的时间管理体系</h4><p>在GTD中，立即能做的事情会被放入立即做之中，这启发了我事项的规划和事项的具体执行可以进行链接并且形成一个更好的体系。</p>
<p>在xmind中剖析完之后的小任务，完全可以将其丢到“飞项”里面，然后再在“飞项”里面规定时间等等</p>
<h4 id="3-时长预估"><a href="#3-时长预估" class="headerlink" title="3. 时长预估"></a>3. 时长预估</h4><p>在使用飞项的时候我就注意到了，如果我体现在指定事项的时候给它预估一个时间，那么我会更有计划，更乐意的去完成这个事情。个人感觉原因有两个：</p>
<ol>
<li>确定性：确定了的任务会让人更有信心，也更方便于规划</li>
<li>限时性：我只要确保我在这段时间之内没有事情就可以了，我只要保证在这段时间之内是保持专注的就可以了。这样可以让我们能够更好的把握任务的难度，也无疑可以促使我们去完成这些事项。</li>
</ol>
<p>那么，实际上这种时长预估完全可以在事项分析的阶段就规划出来，相信它在那里也会发挥相同的作用。</p>
<h4 id="4-番茄闹钟"><a href="#4-番茄闹钟" class="headerlink" title="4. 番茄闹钟"></a>4. 番茄闹钟</h4><p>高中的时候我就有每次定一个九分钟的计时器并且要求我自己将其当成十分钟的习惯，这样一方面可以给我自己施加压力促使我加快速度，另外一方面，它可以让我直到我目前已经花了多少时间。</p>
<p>所以说后面可能会考虑继续使用这种方法。</p>
<h4 id="5-可能清单的解释"><a href="#5-可能清单的解释" class="headerlink" title="5. 可能清单的解释"></a>5. 可能清单的解释</h4><p>可能清单的英文是Someday/maybe，在四象限分类法里面大概算是“不重要也不紧迫”，那么实际上这就启发了我管理这一个分类的灵感：下次就休息/闲的没事干的时候去做做这些事情就好了~</p>
<h3 id="四、我的暂行时间管理法"><a href="#四、我的暂行时间管理法" class="headerlink" title="四、我的暂行时间管理法"></a>四、我的暂行时间管理法</h3><p>我的时间管理法是以四象限管理法为基础的方法，<br>具体内容我会再写一篇post记录。</p>
<p>[[4-4时间管理法]]</p>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>效率工具</tag>
        <tag>杂谈</tag>
        <tag>bilibili归档</tag>
      </tags>
  </entry>
  <entry>
    <title>学习使用飞项</title>
    <url>/2023/11/08/1.Archieve/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8%E9%A3%9E%E9%A1%B9/</url>
    <content><![CDATA[<p>[[___效率工具]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;学习使用飞项&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;事项&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;属性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;标签&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;归类到项目&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;沉淀&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;使用的是Xmind&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;复杂事项的创建&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;可以通过子事项拆解来实现&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;脉络图&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;视图&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;今日视图&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;四象限视图&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;项目&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;项目概览&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;背景信息、协作成员、动态进展清晰明了&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;项目关键数据、项目成员排行榜快速掌握&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;信息&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;项目&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;背景&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;概要&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;数据&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;排行&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[50,52]},&quot;v&quot;:&quot;&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;目标&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;分层规划&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;目标层&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;策略层&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;执行层&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;拆解维度&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;学习WBS理论&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;含义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;工作任务&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;分解任务&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;结构化组织&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;如何使用OKR进行管理？&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;OKR管理&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;O&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;目标&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;K&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;O的制定&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;优先级高、是驱动成功的绝对必要因素&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;要是可以导向好的结果的&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;方向明确，有挑战却能够鼓舞人心！&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;O是我们想要实现的目标，它通常是定性的，鼓舞人心的，要求通俗易懂&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;描述O时常以动词开头，实现、打造、推出……&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;KR的指定&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;，它通常是，要求。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;KR是我们为了达成O所需要完成的关键结果&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;符合SMART原则&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[108,109]},&quot;v&quot;:&quot;要求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[110,111]},&quot;v&quot;:&quot;O最多不超过5个，每个O下的KR最多4个；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[112,113]},&quot;v&quot;:&quot;如果你只用5分钟写出了一个OKR，那么它通常不会是一个好OKR，请重写；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[114,115]},&quot;v&quot;:&quot;如果你的O超过2行，它很可能就是不清晰的；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[116,117]},&quot;v&quot;:&quot;拒绝行业黑话，把你的OKR拿给其他部门同事看，如果看不懂，请重新编辑&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[118,119]},&quot;v&quot;:&quot;使用真实日期，如果所有的KR的截至日期都是季度的最后一天，你制定的计划就很可能是有问题的；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[120,121]},&quot;v&quot;:&quot;确保你的KR是可度量的，或是描述过程的；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[122,123]},&quot;v&quot;:&quot;确保度量指标是清晰的；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[124,125]},&quot;v&quot;:&quot;将工作中的重要活动或者重要活动的相当一部分工作量包含到OKR中；&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[126,127]},&quot;v&quot;:&quot;确保那些需要横向协同的OKR在每个支撑团队都已制定相应的KR在支撑&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[128,129]},&quot;v&quot;:&quot;OKR的构建过程&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[130,131]},&quot;v&quot;:&quot;三、OKR的制定流程&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[132,133]},&quot;v&quot;:&quot;1、OKR的制定周期，由大到小：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[134,135]},&quot;v&quot;:&quot;以公司级OKR来举例，需要先设定好年度OKR，再设定一个小周期的OKR，如季度OKR或双月OKR。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[136,137]},&quot;v&quot;:&quot;2、OKR的制定层级，由高到低：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[138,139]},&quot;v&quot;:&quot;3、OKR的制定会议：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[140,141]},&quot;v&quot;:&quot;我们通过“咪厅”板块中的“圆桌会”和“共识会”来制定OKR。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[142,143]},&quot;v&quot;:&quot;在我们倡导的四会驱动中，圆桌会是第一个环节，也是让所有团队成员都对目标以及和自己工作的关系有深刻理解的一个会议，这个环节非常关键。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[144,145]},&quot;v&quot;:&quot;OKR除了是一个目标管理工具外，更是一个沟通工具，而它的沟通作用就体现在OKR共识会中了，能够让大家拉齐认知，能站在彼此的角度理解问题，最终确定出OKR的目标。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[146,147]},&quot;v&quot;:&quot;开好共识会可以通过两种方式：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[148,149]},&quot;v&quot;:&quot;自上而下公示传达：确定好公司的OKR之后，接下来需要公示给全体员工形成共识，让所有人明确公司在下一阶段最重要的目标是什么，并了解决策的背景和逻辑。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[150,151]},&quot;v&quot;:&quot;自下而上对齐一致：部门管理者和员工再根据公司的OKR主动向上对齐，制定部门级和个人级OKR，并上下达成共识，保证全员在一个方向上。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[152,153]},&quot;v&quot;:&quot;圆桌会&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[154,155]},&quot;v&quot;:&quot;确定OKR成员：如对中小企业，除了高管外，应该下沉到中层管理，包括专业决策环节的专家型员工，以及有意培养和提拔的潜力人才&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[156,157]},&quot;v&quot;:&quot;三两结对，小会起草：分组预讨论公司当下的主要问题和瓶颈，为了获得更多开放性和批判性思考，通过小型会议的方式来起草第一个版本的OKR。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[158,159]},&quot;v&quot;:&quot;成员会议确认OKR：在小组讨论之后，会产生若干组不同的OKR，再通过所有成员的聚合对每组草拟的OKR进行讨论分析，取精华、去糟粕、聚重点，最终形成最合理正确的OKR。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[160,161]},&quot;v&quot;:&quot;共识会&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[162,163]},&quot;v&quot;:&quot;自上而下公示传达：确定好公司的OKR之后，接下来需要公示给全体员工形成共识。让所有人明确公司在下一阶段最重要的目标是什么，并了解决策的背景和逻辑。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[164,165]},&quot;v&quot;:&quot;自下而上对齐一致：部门管理者和员工再根据公司的OKR主动向上对齐，制定部门级和个人级OKR，并上下达成共识，保证全员在一个方向上。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[166,167]},&quot;v&quot;:&quot;自此，一个完美的OKR制定流程就完成啦！&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[168,169]},&quot;v&quot;:&quot;四、OKR如何落地&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[170,171]},&quot;v&quot;:&quot;既要仰望星空，更要脚踏实地。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[172,173]},&quot;v&quot;:&quot;想要OKR用出效果，后面的执行落地非常重要，否则制定再好的OKR也只是飘在空中。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[174,175]},&quot;v&quot;:&quot;我们前面已经讲到通过“圆桌会”“共识会”来完成OKR的制定，那么OKR的执行落地就要依赖“推进会”和“复盘会”了。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[176,177]},&quot;v&quot;:&quot;关于推进会和复盘会的具体流程和步骤，要根据企业的业务情况和当下OKR实际进度进行灵活运用，源目标在帮助数百家企业落地OKR的过程中，也根据不同行业和业务属性整理了20套企业落地全流程案例，需要的话可以点击下方自行下载。需要的话可以点击下方链接，可以免费试用体验~&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[178,179]},&quot;v&quot;:&quot;存在的问题&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[180,181]},&quot;v&quot;:&quot;就目前而言，这种方法与我现在在用的另外一套体系有所冲突&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[182,183]},&quot;v&quot;:&quot;我认为我的个人计划以及目标规划应该是在Xmind中进行规划分析更加的自由&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[184,185]},&quot;v&quot;:&quot;不过飞项的这种任务管理的模式让我受益匪浅&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[186,187]},&quot;v&quot;:&quot;关于目标制定&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[188,189]},&quot;v&quot;:&quot;·&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[190,192]},&quot;v&quot;:&quot;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[192,193]},&quot;v&quot;:&quot;优点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[194,195]},&quot;v&quot;:&quot;看起来很好看&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[196,197]},&quot;v&quot;:&quot;而且多平台互通&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[198,199]},&quot;v&quot;:&quot;可以通过KR自动算出目标进度&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[200,201]},&quot;v&quot;:&quot;而且通过对于目标的对齐设置可以实现链状的管理&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[202,203]},&quot;v&quot;:&quot;实现这样的效果&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[204,205]},&quot;v&quot;:&quot;缺点&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[206,207]},&quot;v&quot;:&quot;和事项的关系并不大&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[208,209]},&quot;v&quot;:&quot;事项只能作为辅助判断的依据&quot;}]}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[210,211]},&quot;v&quot;:&quot;我现在考虑的事情&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[212,213]},&quot;v&quot;:&quot;是否以后可以在xmind上面完成事项的拆解和归档&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[214,215]},&quot;v&quot;:&quot;而事项的执行层放在飞项&quot;}]}]}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>
# 学习使用飞项

## 事项

### 属性

- 标签

- 归类到项目

- 沉淀

    - 使用的是Xmind

###  

### 复杂事项的创建

- 可以通过子事项拆解来实现

    - 脉络图

        -  

## 视图

### 今日视图

### 四象限视图

## 项目

### 项目概览

- 背景信息、协作成员、动态进展清晰明了

- 项目关键数据、项目成员排行榜快速掌握

- 信息

    - 项目

    - 背景

    - 概要

    - 数据

    - 排行

-  

## 目标

### 分层规划

- 目标层

- 策略层

- 执行层

    - 拆解维度

        - 学习WBS理论

            - 含义

                - 工作任务

                - 分解任务

                - 结构化组织

### 如何使用OKR进行管理？

## OKR管理

### 定义

- O

    - 目标

- K

### O的制定

- 优先级高、是驱动成功的绝对必要因素

    - 要是可以导向好的结果的

- 方向明确，有挑战却能够鼓舞人心！

    - O是我们想要实现的目标，它通常是定性的，鼓舞人心的，要求通俗易懂

        - 描述O时常以动词开头，实现、打造、推出……

### KR的指定

- ，它通常是，要求。

- KR是我们为了达成O所需要完成的关键结果

- 符合SMART原则

    -  

### 要求

- O最多不超过5个，每个O下的KR最多4个；

- 如果你只用5分钟写出了一个OKR，那么它通常不会是一个好OKR，请重写；

- 如果你的O超过2行，它很可能就是不清晰的；

- 拒绝行业黑话，把你的OKR拿给其他部门同事看，如果看不懂，请重新编辑

- 使用真实日期，如果所有的KR的截至日期都是季度的最后一天，你制定的计划就很可能是有问题的；

- 确保你的KR是可度量的，或是描述过程的；

- 确保度量指标是清晰的；

- 将工作中的重要活动或者重要活动的相当一部分工作量包含到OKR中；

- 确保那些需要横向协同的OKR在每个支撑团队都已制定相应的KR在支撑

### OKR的构建过程

- 三、OKR的制定流程

- 1、OKR的制定周期，由大到小：

- 以公司级OKR来举例，需要先设定好年度OKR，再设定一个小周期的OKR，如季度OKR或双月OKR。

- 2、OKR的制定层级，由高到低：

- 3、OKR的制定会议：

- 我们通过“咪厅”板块中的“圆桌会”和“共识会”来制定OKR。

- 在我们倡导的四会驱动中，圆桌会是第一个环节，也是让所有团队成员都对目标以及和自己工作的关系有深刻理解的一个会议，这个环节非常关键。

- OKR除了是一个目标管理工具外，更是一个沟通工具，而它的沟通作用就体现在OKR共识会中了，能够让大家拉齐认知，能站在彼此的角度理解问题，最终确定出OKR的目标。

- 开好共识会可以通过两种方式：

- 自上而下公示传达：确定好公司的OKR之后，接下来需要公示给全体员工形成共识，让所有人明确公司在下一阶段最重要的目标是什么，并了解决策的背景和逻辑。

- 自下而上对齐一致：部门管理者和员工再根据公司的OKR主动向上对齐，制定部门级和个人级OKR，并上下达成共识，保证全员在一个方向上。

- 圆桌会

- 确定OKR成员：如对中小企业，除了高管外，应该下沉到中层管理，包括专业决策环节的专家型员工，以及有意培养和提拔的潜力人才

- 三两结对，小会起草：分组预讨论公司当下的主要问题和瓶颈，为了获得更多开放性和批判性思考，通过小型会议的方式来起草第一个版本的OKR。

- 成员会议确认OKR：在小组讨论之后，会产生若干组不同的OKR，再通过所有成员的聚合对每组草拟的OKR进行讨论分析，取精华、去糟粕、聚重点，最终形成最合理正确的OKR。

- 共识会

- 自上而下公示传达：确定好公司的OKR之后，接下来需要公示给全体员工形成共识。让所有人明确公司在下一阶段最重要的目标是什么，并了解决策的背景和逻辑。

- 自下而上对齐一致：部门管理者和员工再根据公司的OKR主动向上对齐，制定部门级和个人级OKR，并上下达成共识，保证全员在一个方向上。

- 自此，一个完美的OKR制定流程就完成啦！

- 四、OKR如何落地

- 既要仰望星空，更要脚踏实地。

- 想要OKR用出效果，后面的执行落地非常重要，否则制定再好的OKR也只是飘在空中。

- 我们前面已经讲到通过“圆桌会”“共识会”来完成OKR的制定，那么OKR的执行落地就要依赖“推进会”和“复盘会”了。

- 关于推进会和复盘会的具体流程和步骤，要根据企业的业务情况和当下OKR实际进度进行灵活运用，源目标在帮助数百家企业落地OKR的过程中，也根据不同行业和业务属性整理了20套企业落地全流程案例，需要的话可以点击下方自行下载。需要的话可以点击下方链接，可以免费试用体验~

## 存在的问题

### 就目前而言，这种方法与我现在在用的另外一套体系有所冲突

### 我认为我的个人计划以及目标规划应该是在Xmind中进行规划分析更加的自由

### 不过飞项的这种任务管理的模式让我受益匪浅

### 关于目标制定

- ·

    -  

    - 优点

        - 看起来很好看

        - 而且多平台互通

        - 可以通过KR自动算出目标进度

        - 而且通过对于目标的对齐设置可以实现链状的管理

            - 实现这样的效果

    - 缺点

        - 和事项的关系并不大

            - 事项只能作为辅助判断的依据

## 我现在考虑的事情

### 是否以后可以在xmind上面完成事项的拆解和归档

### 而事项的执行层放在飞项


</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>将游戏的属性精简化</title>
    <url>/2023/12/04/1.Archieve/%E5%B0%86%E6%B8%B8%E6%88%8F%E7%9A%84%E5%B1%9E%E6%80%A7%E7%B2%BE%E7%AE%80%E5%8C%96/</url>
    <content><![CDATA[<h3 id="将游戏的属性精简化"><a href="#将游戏的属性精简化" class="headerlink" title="将游戏的属性精简化"></a>将游戏的属性精简化</h3><span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏设计</tag>
      </tags>
  </entry>
  <entry>
    <title>工创实践-鞋架制作</title>
    <url>/2023/11/20/1.Archieve/%E5%B7%A5%E5%88%9B%E5%AE%9E%E8%B7%B5-%E9%9E%8B%E6%9E%B6%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<p>[[___工创实践]]</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;工创实践 鞋架制作&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;布面&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;布料的裁切&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;用剪刀裁切&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;小技巧&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;可以直接用两片刀刃之间的狭口往前推&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;布料的缝纫&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;缝纫机的操作指南&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;基本结构&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;反转扳手&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;手轮&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;踏板&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;缝纫用料&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;上线&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;上线按照标注的走线进行布置并最后穿入针孔&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;底线&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[33,34]},&quot;v&quot;:&quot;底线的绕线&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[35,36]},&quot;v&quot;:&quot;底线轮的装配&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;对准凹槽&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;按下即可&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[41,42]},&quot;v&quot;:&quot;底线的装配&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[43,44]},&quot;v&quot;:&quot;使用手轮摇一圈&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:13,&quot;p&quot;:{&quot;lines&quot;:[45,46]},&quot;v&quot;:&quot;然后拉扯上线把底线拉出&quot;}]}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[47,48]},&quot;v&quot;:&quot;缝纫&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[49,50]},&quot;v&quot;:&quot;将压板扳下&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[51,52]},&quot;v&quot;:&quot;踩下压板&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[53,54]},&quot;v&quot;:&quot;注意开头结尾来回缝纫几遍&quot;}]}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[55,56]},&quot;v&quot;:&quot;钢管切割&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[57,58]},&quot;v&quot;:&quot;刻线&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[59,60]},&quot;v&quot;:&quot;用来标记是需要切割哪里&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[61,62]},&quot;v&quot;:&quot;固定&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[63,64]},&quot;v&quot;:&quot;准备刀片&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[65,66]},&quot;v&quot;:&quot;尖角朝前&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[67,68]},&quot;v&quot;:&quot;也就是把手的反方向&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[69,70]},&quot;v&quot;:&quot;拉出凹槽&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[71,72]},&quot;v&quot;:&quot;避免后续切割切歪&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[73,74]},&quot;v&quot;:&quot;切割&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[75,76]},&quot;v&quot;:&quot;切不动的时候转一下&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[77,78]},&quot;v&quot;:&quot;自动车床&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[79,80]},&quot;v&quot;:&quot;固定材料&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[81,82]},&quot;v&quot;:&quot;三抓转盘&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[83,84]},&quot;v&quot;:&quot;用一个扳手配合钢管增加力臂进行扭紧&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[85,86]},&quot;v&quot;:&quot;移动材料&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[87,88]},&quot;v&quot;:&quot;使用手轮模式&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[89,90]},&quot;v&quot;:&quot;注意速度&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[91,92]},&quot;v&quot;:&quot;靠近/切割的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[93,94]},&quot;v&quot;:&quot;25%&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[95,96]},&quot;v&quot;:&quot;移开的时候&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[97,98]},&quot;v&quot;:&quot;75%&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[99,100]},&quot;v&quot;:&quot;试切&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[101,102]},&quot;v&quot;:&quot;通过x，z的试切校准中心点&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[103,104]},&quot;v&quot;:&quot;程序&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[105,106]},&quot;v&quot;:&quot;没学&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[107,108]},&quot;v&quot;:&quot;跑程序&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[109,110]},&quot;v&quot;:&quot;检验程序&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[111,112]},&quot;v&quot;:&quot;选择程序&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[113,114]},&quot;v&quot;:&quot;启动&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[115,116]},&quot;v&quot;:&quot;按绿色的按钮即可&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[117,118]},&quot;v&quot;:&quot;手动车床&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[119,120]},&quot;v&quot;:&quot;打孔&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[121,122]},&quot;v&quot;:&quot;要打一个定位孔&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[123,124]},&quot;v&quot;:&quot;然后再拿钻头打孔&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[125,126]},&quot;v&quot;:&quot;按下启动按钮&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[127,128]},&quot;v&quot;:&quot;之后要拉一下把手&quot;}]}]}]}]}"/>
</div>

<span id="more"></span>
<details>
<summary>查看原文</summary>
### 工创实践 鞋架制作

#### 布面

##### 布料的裁切

- 用剪刀裁切

    - 小技巧

        - 可以直接用两片刀刃之间的狭口往前推

##### 布料的缝纫

- 缝纫机的操作指南

    - 基本结构

        - 反转扳手

        - 手轮

        - 踏板

    - 缝纫用料

        - 上线

            - 上线按照标注的走线进行布置并最后穿入针孔

        - 底线

            - 底线的绕线

            - 底线轮的装配

                - 对准凹槽

                - 按下即可

            - 底线的装配

                - 使用手轮摇一圈

                - 然后拉扯上线把底线拉出

    - 缝纫

        - 将压板扳下

        - 踩下压板

        - 注意开头结尾来回缝纫几遍

#### 钢管切割

##### 刻线

- 用来标记是需要切割哪里

##### 固定

##### 准备刀片

- 尖角朝前

    - 也就是把手的反方向

##### 拉出凹槽

- 避免后续切割切歪

##### 切割

- 切不动的时候转一下

#### 自动车床

##### 固定材料

- 三抓转盘

    - 用一个扳手配合钢管增加力臂进行扭紧

##### 移动材料

- 使用手轮模式

- 注意速度

    - 靠近/切割的时候

        - 25%

    - 移开的时候

        - 75%

##### 试切

- 通过x，z的试切校准中心点

##### 程序

- 没学

##### 跑程序

- 检验程序

    - 选择程序

- 启动

    - 按绿色的按钮即可

#### 手动车床

##### 打孔

- 要打一个定位孔

- 然后再拿钻头打孔

- 按下启动按钮

    - 之后要拉一下把手


</details>
]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>工创实践</tag>
      </tags>
  </entry>
  <entry>
    <title>星火英语四级通关</title>
    <url>/2023/11/03/1.Archieve/%E6%98%9F%E7%81%AB%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7%E9%80%9A%E5%85%B3/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="8b76e6eeadc4ede18f648cb60f36ebfbd039ca4459ba4489ae74172bea070bfb">1b693c4938223286468132b2f7068bf6ea271a9c6123a5bbbb270aaaf1eb999f8a6392a73fc7c94327eb9126bb2c9bbca0a057e4e3deaaa23668bace4351a660ed5c91bb905072644f3627eaa29da428a4b11a6d10d5277178329ff7a69bb7ebb78628ce57f9613a3f75a85674a91a58d18c313fb5c1e74342851479edacbdcac8f7dda3942dc73cc518ceb58b74317d752783b6bd98ba89d386685b334ade8c70b34e5c6b5a6df5a3adf95b6e6b4e2a99c736522655183e1169bfe3324faba3160d55573a57eacc19e91671505fe09528633580219cdc58a47139dac85e017b973fb142f58885f184bd71f24a4be0a5f673ad91aeb83ef4d386082bd0b9339e48cfdf4f07e48e11919fb17b2e736e12c3135825cbbcacdbd16b5d5922fb8ce4f5dd8bec1bbec203ce8f9b8a4f5975f177cc3db375d227f2fe780d3c083c2b6db7664f931fd5125140e5b82f5b0a63e71727a74cae5e0ca59a907bf31987226a35a0fdd6f5287cc1c5b76439636027749c38cf50cb3f60bd642780bc5892868a04ab780a104d23ad718ec1532bf613389c3349925f9d45b9081960e47d0c193312d13dca06a60e83a03d779021721b67faaf30535363acf8ae1cd8f53201b8069aa3a6e8bd65698781ee022003b8a09d43a603f37489687831d7f0966cb7212962d8f9d6148b76eff8f55fc600a0a7ffd39a0765e8e535ee4d4994cb6484d89634944f1f76319d2466a0ead2a2cc56d328e0c099f44f066b0e53e820b5dfda686f8aee5d8917f5dc2c49efbc2a6c7a12923a1888b69ea01f82187bccd3cc0e798fe14eecb34c8324cb8040e3d0d82f42d1f7e7d80d5710f53aaf6382f2d316c97e85b3da9af7c3df0549c0a01b6144f9d74ce5fa5127e2473348678d796cf1614b1629b00e1ba3c733b601c5e14d6c2d43fc4571cc149255b4d7ca087986fca082a6000f2d7aa01e5ae75dfe3322e603aa3f2a83e3117d424f1acaece292f1e4cb4de5b57e96800f1b7b3f05896e853808160f11f1924002216bd15301e57b385b003e3c01d3e7087aa3877aed6ace954b1c267441c605c8a41172e0cea15e5d789e62487267e4675895ff9a67543601ba6461aa4ff28296373ea429c11ad80f1d94b10f4dd079cb77840ce10a104d0dec9c96fbb32b7d2e9b64f1e76ca273c2c59962ed87a2a43475eaee6b96a057fe6c7ca073bc14ecb988faf5757ff9bcf9a74eab678b21c882e4d7c23558db3a44adbc9647053cf44af2af7b8ae7ec2404e56a6a91452cf467a746a055c0853067ad4a6413246e4662fea1126cb88f6b2b4a3a50be263633fdf2ef5e1c2ad716c77298e378798819e08ef4b3c536c2de5fa1b688968a9c31cee4b3996491220143b101b6eb4660095a5b45aa985267eb36e20e978d76bb61683216001858f2e17f9b107c5f24abb38725cdfa1f129159dabe3cdd90dddfa5074f68c0490fda2f5148bcf87dbc779caa0cf2609e43892c09574d7242866de8289265ef0f93e2e04235b0e18c05a6b66c1aadd4034e7be9438243a3738c1bda3236e56f1387a666136c0124cc2edd2ac21fbd84c86e530773167313092848e7d5e74ebcd3f5ea8fece76dde10d1973dc8958051ea50ca567329c52ed5011f1305376df0e8f558e0dd14777b4ea653ff258c5585452e9a90b26f7a001f945c474b2b63704c9df96cbdea83d0796ee721629a77a36366b8523b0d8eacc22b17fbcc210505f909b822ea1c048f372cb33b700742fb69e8bae6d3b0de3139bc182a462441a07de77e5e226d9cd322852ae34b104139177979fd3da8b5034329dbd9afe6bab3071a865d83122ad6b8ba95b7cd29c26644978dd3083b39ff9a99f6326897d19d2369b4a24c99a2d399542119181b125a8c470deb070164e49120600ce9b827e124d2f331eb8fe1755649a77d22b99dbf893d954f76778cdc4c300dba98cfb36ec1a0623e86be34fae602abb744e5bf40b25f046732adee767b3b2c2b3eab4c21ac473da8562978b3aa040db2aeabbb3fb7a2df063e2b14597a90d16ccda379d725c577b03187524bb3d530c831ec3451463412913e9e0e8363bcf19dda94b9b050e6749c7aad380d5a5cd999a27847a4b0028b24ec33c3caabd13327e0db08871d1fdd723c78f2e22bfdb98d18e38d3281d8c8d74b4ec5213c491c218d788fe35c28a2ac6b5fc456743d619ec00f5285e4348d169cc9cbc9fa303d412af3770c1277bf0f18d82b9d9f65f63b97e6fdc2e6cca352e0fad60655ff449d41f1e5df592be18ac3ef05508c67b8574360c9b3c09b074591aaff0504e8f4be6a769c7dcd924c1697b4f61ce02b61f6c02baf3588ab2db913c04c6bd30715093b3bf6fc8a55452849c23c02b687fbd9e3a526b249150183fc419bfaee0ad7f3c7561b0b5305e32f120d94809353b2d416af33a293caf219207a84f51f5abaec19711bffa512ef129e16928f2427f3a1d3a1c0b4320d5c73cbbcb53af84a8dfe2bdd09719f51c621992f8b958fda351ce708de4f7ad88c47b3ae7a897d47bc007b602ddbcc73e9e0d98b7b6fc07d78608384c8372728cb84188e84df606b85fb3c12fed7411700659acf6524f04b0c43fb1945e7327b973ba7b63900e6c5c465027218f18f16ca183c0b90d8f76d6b2ac9c6e16ccf1be6d9355f5f4c0a9811087cc7bf776d294f8ce5cc2994a43e2140acd25293b557be0652374b268dec6a998a26511a7ac796e385585902b87ebb68955cbe0ef5f0bc238d65acd3bb34bca630d0c6e8c492bfd9424fcead55fab61d813a3ac483ef7d13b39d3a2652364d39ccfa87eefc679f00d9259ab8bbccbce5ff8e705871fd8542e18a583f50192ffb62b6eb4864cec81af46138cbd99b9feae445cb6e0a44288e94fc074842629ca8c1b1e14eec1bc5d1b44fddaec907ef8bd8bc8cf5947e59098fb9ffa2d7c83218c207ecb9eb6a03a5bfb14b1b0f976bfedc367263c9f32379825f4b32bed78acdab9b6240285009be99e6cb38786cf6f9839bd70bf136e5c77d5648a7f93dedaf0b2e4878315ae3a57428767d47cd1ba7c42308844c459e0f9dbdeb9599e32f6db0468a902406d5b2604bb606f93c5ea0f7504d643bfd44b4e1b3db746d7d5d729ec53977b07ae6c0d3fbcf4170e9b1c39e0b426e144f6a93778ac745029016f8e5a5d5f9dacfe04788972f5cf8341ed0382b67eda59a9d5358d9ef25027129e9b39fdcf84d18e7a679fa3255fbb5955edd2bb4ee3cb2e511cf263d60eec3d50422a0f59e2762306f8f6bd134df1c7c993b17cc64f6fb5cd45b3b70767d08712eef6cbb89373beff761868c38c249ef870fcc0c1fbf658a740d09978f1cddd8dbbd0e60d274cce09822d365371b47b26d68223ea9ca889e59da17b4d57b08c51b85b3c04d433ecf68a82bce968eb7607b5f1776b4df5af6b0b28cf907875a224e2eca691e3160ab041a4cd55a59541b836e6873647cc19a3a9df2d23f50cf659d385d74637563ee2026e5cfc49320e579c78e8ef567673b71e8794357d089ce5231dd78ecf07e9ab7c33bf0aca5296f6e9f0e11ce4329297c2bdd53d058ad2b71a7fa68aee71c2e944763867e32a120bfbd763cfb007c1fdd2e8149b7ffcfaee5f35f5b870d1937a5333f66cdb069639a7451ed1a1ebeb9dada9663dbb1cf35122d2459c97e5a4e227a56f930e60b46813fd3cd3f5429ec413ef1140816d81dc94b3c43623d0d487288b784730b4a326935a60e093d2d104da93ce124ae8d0f65b2277f9fb98476ca711804918eac1bd23d0bfa191d93236e3bfe210e7d4fa731725b95e56588df262effbe6defd5b2f34d19028f5872e84c425d429864e42f7d154c096e36884331baac12beffc9475b0e9ab465455220b88a68eb3ad509c3c7698539646784082cc9b98c31d2361e22e50fd684d1e131c48b1fe52ce0ee4021d8b5de36fe8dbb917664c332efff059c1bb422283223bc9c081a3145f63695b5968f68533783c67056fad07ce62e7de1cda7519a9223339ce98d751796ce0ad27321018ab4512013a1c2ebb864e3a373b6adf9a5464d06d4d1c3505831dfa5ceb2eb8789c0c0f4767fd5247f65a50b98345666bf5793a8395a599b3a60326555dc263880141b8313710f7db658f2dd029c477e9b22e1f12034edbbd18acdd2f3727586950ecae6a93962c84795c652f80e17868171ac5629bc02d07248f1d6a88f84a3271715bc97d4f0ef0c84e4d94da78c38b3772cb1d3baf8583b215043aa3dec831dd49953bb1503779b6adcb3dfdd094daefc2544d92d8cd95b817e30082d664c40d4dcb3a47e368ed6c146c258a136b6b7b8dcbc1088647fd684407e14868360ff00f6a23172958c38889977cb9ae3210c4d82fd24cb50533b70ed485cae7d358d0ab1779687122d75b7e32f71cdbb95f9c9c8bd45b91e961824870816dd734d45b473ee08c25ce566e077c69556a9b674a2fc674194feeec96022310bdb00d5f702cd32813ebee703d507c357cb861e1635069bde1918a8f1f1c966b2e199f6da65795e0d7f349b1a81956e2b1a4b7faee870c88a7e8d30c532b1e99c0a89503578911de718db8a00f047dcc67fbcaf0913b6bdd457778dba6f096f989ed74153a4cb5b9d4cb4f6efdeb01ce9d54a954e46dd498aa1304fbb9b70f08d18a678b69cf98f2a02b9e9fea699be02f64abe9fbbbbac90465b783b4d30e4907706c7450012b68b8cc998243397448dde142e0fffe7205dca5aa7d68cdf7cc083d608a0f6224986de9a6e3019b6bd06d9fdc47f1f8f912d83e7a760d506ee73a56e60ba1e13348f20d1e756039d8b8a634296ecf04bdce67e806d777797c41943b3e5e83223e8f577</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好，这里需要密码。</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>大学</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>小小梦魇：游玩初体验：最好不要让我玩到最后仍然认为你是一坨大便</title>
    <url>/2023/12/15/1.Archieve/%E5%B0%8F%E5%B0%8F%E6%A2%A6%E9%AD%87%EF%BC%9A%E6%B8%B8%E7%8E%A9%E5%88%9D%E4%BD%93%E9%AA%8C%EF%BC%9A%E6%9C%80%E5%A5%BD%E4%B8%8D%E8%A6%81%E8%AE%A9%E6%88%91%E7%8E%A9%E5%88%B0%E6%9C%80%E5%90%8E%E4%BB%8D%E7%84%B6%E8%AE%A4%E4%B8%BA%E4%BD%A0%E6%98%AF%E4%B8%80%E5%9D%A8%E5%A4%A7%E4%BE%BF/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">最好不要让我玩到最后仍然认为你是一坨大便</span><br></pre></td></tr></table></figure>
<p>[[<strong>_游戏体验日记]] [[_</strong>小小梦魇]]</p>
<p>小小梦魇，一直都听说是一个不错的游戏，但是实际上我上手玩了一下之后，我深刻地意识到了这可能是我今年玩过的第一款大便。</p>
<p>实际上，这款游戏按照比较客观地评价来说，应该不算是烂，而算是中庸地一个设计，但是问题是，我给它的期望很高，但是这款游戏的操作手感……着实让人难受。</p>
<p>下面我会指出几个我认为游戏中做的比较好的和垃圾的几点：</p>
<h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><h3 id="电门-电线-开关"><a href="#电门-电线-开关" class="headerlink" title="电门-电线-开关"></a>电门-电线-开关</h3><p>这个结构确实是一个十分常见的解密元素的设计，电线作为一个线状的东西可以很好的引导玩家的视线，从而做到引导玩家进行解密。</p>
<p>但是在本作中，游戏巧妙地运用了<strong>拖动视野</strong>这个功能将这个解密设得十分精妙。</p>
<p>游戏的第一章中，有一关需要将电门断电，我以为是要对边上的一个配电箱进行操作，但是根本碰不到那个配电箱。过了一会儿，游戏提示我需要按住上下左右拖动视野。</p>
<p>不看不知道，一拖动视野，赫然看见从屋顶拉了根线，拉向我刚刚进来时打开的门的后面。再次将门关上，霍，原来是个开关，在这个门的后面。</p>
<p>或许 [[灵感：拖动你那受限的视野]] 可以作为一个独立游戏的核心机制设计？</p>
<h3 id="游戏的氛围渲染"><a href="#游戏的氛围渲染" class="headerlink" title="游戏的氛围渲染"></a>游戏的氛围渲染</h3><p>总体来说，游戏营造了一个孤独恐怖的氛围，这一点做的还不错。</p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>接下来我要骂骂咧咧地写下这个游戏的缺点了</p>
<h3 id="nt的引导设计"><a href="#nt的引导设计" class="headerlink" title="nt的引导设计"></a>nt的引导设计</h3><p>游戏中没有任何的初次引导，甚至连什么按钮对应什么功能都没告诉我。确实，我们一般推崇没有硬性引导的游戏，但是这并不代表游戏就应该直接把引导的部分删去。  </p>
<p>哪里能上去？哪里需要俯身？哪里可以进行攀爬？都没有告诉玩家。玩家需要自己摸索，只有在你两分钟还卡在一个位置，游戏才会告诉你啊，按什么按键有什么功能？</p>
<p>这丝毫不合理，所能带给玩家的只有挫败感，游戏在很多的时候都会有这这样的问题。</p>
<h3 id="不明确的引导设计"><a href="#不明确的引导设计" class="headerlink" title="不明确的引导设计"></a>不明确的引导设计</h3><p>游戏中没有明确的引导设计，你基本上不知道你需要干什么，或者是需要往哪里走。带给玩家的感受就是，哦，貌似我需要通过这扇门，而在更糟糕的情况下，玩家根本不知道需要做什么。</p>
<p>这个游戏又不像是 mc，或者是其他的没有明确的引导设计的游戏一样，那些游戏的答案没有定数，可以说是条条大路通罗马；或者说主线之外的东西带给了玩家十分丰富的探索体验。</p>
<p>在《小小梦魇》中，玩家能选择的只有一条路，这毕竟是解密类的游戏，这样的设计无可厚非，更多的额外地方，应该是作为彩蛋的。但是游戏中又并没有明显地将游戏的主要内容和彩蛋部分划分开来，甚至在彩蛋中添加了本身只应该存在在主要部分中的标志性烛灯和蘑菇人。</p>
<p>我tm在那个彩蛋的部分找了半天有没有前进的路，最后查攻略才知道这tm只是个彩蛋而已，而正确的路在上一个房间。</p>
<ul>
<li>玩家不知道这是彩蛋还是核心的关卡</li>
<li>玩家不知道正确的路应该是在哪里</li>
</ul>
<h3 id="不明确的操作反馈"><a href="#不明确的操作反馈" class="headerlink" title="不明确的操作反馈"></a>不明确的操作反馈</h3><p>在玩小小梦魇的时候，我一直在想，给这些东西是干什么用的。</p>
<p>具体而言：这个能爬吗？这个跳的上去吗？这个能被推动吗？这个地上的纸是有什么用吗？</p>
<p>然而如果有人拿着问我这个问题，我能回答的也只有是：试试之后才能知道。</p>
<p>“无意义的设计”游戏中有很多这种设计：不单是无意义，更多的还有是欺骗玩家的设计。</p>
<h4 id="抓取投掷功能"><a href="#抓取投掷功能" class="headerlink" title="抓取投掷功能"></a>抓取投掷功能</h4><p>在第一大关中，你丫的抓取抛掷功能只能用于触发彩蛋，那么请问，你tm地上设计那么多可以抓取的，可以抛掷的东西有什么用？</p>
<p>你说是为了营造氛围？那你就设计一个可以与主角产生物理效果不就行了，取消掉左键拾取谢谢。<br>你说是为了丰富游戏的内容？抱歉，仅仅是这样的东西并不能提高游戏的趣味性，它没有任何的功能，而且也并不有趣。</p>
<h4 id="跳跃功能"><a href="#跳跃功能" class="headerlink" title="跳跃功能"></a>跳跃功能</h4><p>首先，你并不能够通过一个物体的高度判断它能不能被爬上去，同样高度的物品有可能你能抓住并且爬上去，也有可能，你只能攀上去……</p>
<p>其次，就算是同一个物体，侧面爬不上去，但是欸，你给他换个位置又能爬上去了。</p>
<p>这对于玩家的感知判断具有极大的干扰性，并且给予了玩家极大的挫败感。</p>
<p>寻找一个攀爬点需要我寻找半天，之前从未告诉我过冰箱的隔层是可以当作梯子攀爬的，后面在需要攀爬网状格子的时候也从来网状的格子的笼子实际上是可以攀爬的。当我以为就这样的时候，游戏又让你卡在一个地方，直到你发现哦，锁链也是能够攀爬的。  </p>
<p>不确定，这是游戏给我最大的感受，什么东西能爬，什么东西不能。</p>
<h4 id="拖拽物品"><a href="#拖拽物品" class="headerlink" title="拖拽物品"></a>拖拽物品</h4><p>问一下玩这个游戏的人：什么物品可以被拖拽？抱歉我也不知道，我只知道当你认为不能拖动的时候往往它可以被拖动。</p>
<p>在游戏中的一关里，玩家需要拆除一个被钉上的木板，才能进入出口。同样的主角，能扯动钉了钉子的模板，拖不动一个木板。</p>
<p>这还不可笑吗吗？游戏中出现了十分明显的引导缺失。</p>
<p>实际上游戏中提示你冰箱可以被拉开的时候设计得就不错呀，在冰箱上面有一个黑手印，这样不就行了，在玩家见到拖拽的物品得时候全部给它打上黑手印……</p>
<p>举个例子：双人成行中，但凡是需要钉钉子的木板，都被涂上了鲜艳的黄色，玩家永远不会陷入：我的钉子到底要钉在哪里？ 的窘迫境地。</p>
<h3 id="视角模式与操作模式"><a href="#视角模式与操作模式" class="headerlink" title="视角模式与操作模式"></a>视角模式与操作模式</h3><p>简而言之就是 3d游戏，2d视角。</p>
<h4 id="游戏的x轴"><a href="#游戏的x轴" class="headerlink" title="游戏的x轴"></a>游戏的x轴</h4><p>游戏采用了2.5d中较为偏向于平面的一个视角，在这种视角下，<strong>游戏三维空间的“深度“并不能被很好的感知</strong>。但是游戏中却设计了许多需要对玩家所处的深度进行操作的场景。</p>
<p>在双人成行中，当视角切换为较为横板的视角的时候，一方面，玩家的操作方式会变为横板游戏的操作方式，另外一方面，游戏的x轴也会变得对于游戏而言不重要。</p>
<p>在这样的视角之下，跑酷、躲避水蛭……都变成了一件无比折磨的事情。</p>
<h4 id="冗余的宽容"><a href="#冗余的宽容" class="headerlink" title="冗余的宽容"></a>冗余的宽容</h4><p>在游戏中，玩家时常可以走到建筑的后面去，而这个时候，走到后面并没有什么作用，既不能带来丰富的体验，玩家判断自己的位置甚至都存在困难，那么这个时候，你设计一个可以建筑的后方有什么用呢？</p>
<p>在游戏的狗屎的操作手感+固定视角的加持之下，看不到主角在哪里成为了一个十分ex的体验。</p>
<p>在第一章的某一关中，我因为被一个小小的突起卡住了而无法前进，而且这个地方我看不见主角……</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>小小梦魇</tag>
      </tags>
  </entry>
  <entry>
    <title>显示器：颜色校准</title>
    <url>/2023/12/14/1.Archieve/%E6%98%BE%E7%A4%BA%E5%99%A8%EF%BC%9A%E9%A2%9C%E8%89%B2%E6%A0%A1%E5%87%86/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>设备]]</p>
<p>新买的显示器总是会或多或少有一些颜色的偏差，至于我的屏幕则在初始状态下发绿，在sRGB和DP-3模式下显得发红。</p>
<p>如何调整显示器的显示模式使其恢复到标准的显示模式成为了一个学问。</p>
<span id="more"></span>
<h2 id="调整显示器的颜色"><a href="#调整显示器的颜色" class="headerlink" title="调整显示器的颜色"></a>调整显示器的颜色</h2><p>首先是调整显示屏的白色，我们有两种较为常见的调整方式：</p>
<h3 id="使用ICC-ICM文件"><a href="#使用ICC-ICM文件" class="headerlink" title="使用ICC/ICM文件"></a>使用ICC/ICM文件</h3><p>icc、icm文件是windows的颜色校准文件，将这类文件配置到电脑上即可实现颜色校准功能。</p>
<p>一般来说常见的显示器型号都可以找的到对应的颜色配置文件，可以在官方的网站上面找到相关的配置文件，或者你可以尝试在这个网站里面寻找你的显示器的颜色配置文件：<a href="https://tftcentral.co.uk/articles/icc-profiles-and-monitor-calibration-settings-database">ICC Profiles and Monitor Calibration Settings Database - TFTCentral</a></p>
<p>但是对于笔记本或者国产的电脑显示屏幕，我们往往很难找到网络上有对应的icc文件，而即使拥有icc配置文件，我们也可能会发现颜色依旧是不准的。<br>这种时候就需要我们进一步对颜色进行调试了。</p>
<h3 id="按照实际情况对屏幕颜色进行校准"><a href="#按照实际情况对屏幕颜色进行校准" class="headerlink" title="按照实际情况对屏幕颜色进行校准"></a>按照实际情况对屏幕颜色进行校准</h3><p>就像是乐器会使用拾音器进行校准，校准屏幕的时候我们也会使用“拾音器”（除非你拥有绝对色感……）</p>
<p>最优的专业方式是租用专业的颜色校对设备对颜色进行校对以达到正确的显示效果。但是我们一般没有那么高的颜色显示要求，这个时候就可以选择使用肉眼进行校对。</p>
<p>你所需要的就是一个你认为颜色显示正确的其他设备，一般来说你的手机或者平板就是一个不错的选择，这些厂家在出厂的时候一般都会对颜色进行严格的校对，我们完全可以使用这些来作为我们校对颜色的基准。</p>
<p>我这里使用的是我的iqoo pad对我的sanc G7 proMax进行校对：<br><a href><img src="https://s1.imagehub.cc/images/2023/12/14/92649df1ac7f8976857612660eb748ba.png" alt="92649df1ac7f8976857612660eb748ba.png"></a></p>
<p>打开绘图软件，一般来说这是最白的，然后按照上面的描述进行调整。</p>
<p>将白色调到了预期的颜色之后，再调整灰色的，一步一步进行调整即可，</p>
<p>我现在调整的颜色参数大概为：r42，g43，b49<br>现在的显示效果总的来说还是不错的。（只能说我的pad的颜色太准了）</p>
<h2 id="调整显示器的其他参数"><a href="#调整显示器的其他参数" class="headerlink" title="调整显示器的其他参数"></a>调整显示器的其他参数</h2><h3 id="伽马值"><a href="#伽马值" class="headerlink" title="伽马值"></a>伽马值</h3><p>伽马值实际上具体体现出来就是灰色的显示状态。好的伽马值可以让颜色的显示不会过于泛白也不会过于发黑。</p>
<p>这个可以直接在设置里面的校准颜色里面调整</p>
<h3 id="调整显示器的对比度和锐度"><a href="#调整显示器的对比度和锐度" class="headerlink" title="调整显示器的对比度和锐度"></a>调整显示器的对比度和锐度</h3><p>设置里面的校准颜色功能也提供了校准这两项的功能，但是我认为其效果显示过于主观了。</p>
<p>可以看看这个网站：<a href="http://www.lagom.nl/lcd-test/contrast_ratio.php">Contrast ratio - Lagom LCD test</a></p>
<p>上面提供了检测多项数值的功能，十分地好用。</p>
<p>调整完上述功能之后你就可以获得一个完美显示的屏幕啦~</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.bilibili.com/video/BV1Qf4y1B7tA/">显示器校色入门指南丨零成本还原TN/ VA/ IPS色彩 [4种方法]_哔哩哔哩_bilibili</a></p>
<p>icc文件查询&amp;下载<a href="https://tftcentral.co.uk/articles/icc-profiles-and-monitor-calibration-settings-database">ICC Profiles and Monitor Calibration Settings Database - TFTCentral</a><br>屏幕显示测试<a href="http://www.lagom.nl/lcd-test/contrast_ratio.php">Contrast ratio - Lagom LCD test</a></p>
]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>设备</tag>
      </tags>
  </entry>
  <entry>
    <title>显示器初次选购</title>
    <url>/2023/12/11/1.Archieve/%E6%98%BE%E7%A4%BA%E5%99%A8%E5%88%9D%E6%AC%A1%E9%80%89%E8%B4%AD/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]] [[_</strong>设备]]</p>
<blockquote>
<p>这是我第一次购买显示器这一类电脑外设……总而言之也是挺折磨的一次购物体验……<br>或许是我个人的原因？反正我挑挑挑选选了半天才找到合适的电脑。<br>从了解电脑显示器的各种指标属性，再到收集数据，最后通过按照各种指标的重要性给其综合打分，并计算性价比……</p>
<p>我认为这样的一套选择方式是可以最大程度帮助我选择到自己心仪的产品的。</p>
</blockquote>
<span id="more"></span>
<h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2><p>电脑显示屏的几个指标属性</p>
<h3 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h3><h4 id="DPI和PPI"><a href="#DPI和PPI" class="headerlink" title="DPI和PPI"></a>DPI和PPI</h4><p>分辨率指的是屏幕中的像素比例。  </p>
<p>电脑输出图像的时候，实际上是按照像素格点进行输出的，这样就引出了一个问题，那就是像素密度越大，显示的内容越小，我们也就越难辨别文字的内容。</p>
<p>为了解决这个问题，系统会存在一个叫做显示缩放比的东西。其将原本的输出进行放大，并投射到显示屏幕上面。那么我们将打印机的标准像素密度DPI = 96 作为一个标准想要最终现实的效果与这个指标接近，所以有公式：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="16.443ex" height="1.738ex" role="img" focusable="false" viewbox="0 -686 7268 768"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"/></g><g data-mml-node="mi" transform="translate(828,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(1579,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"/></g><g data-mml-node="mo" transform="translate(2305.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3027.4,0)"><g data-mml-node="mi"><path data-c="1D40A" d="M400 0Q376 3 226 3Q75 3 51 0H39V62H147V624H39V686H51Q75 683 226 683Q376 683 400 686H412V624H304V338L472 483L634 624H565V686H576Q597 683 728 683Q814 683 829 686H836V624H730L614 524Q507 432 497 422Q496 422 498 418T514 395T553 342T627 241L759 63L805 62H852V0H842Q830 3 701 3Q550 3 526 0H513V62H549Q584 62 584 63Q583 65 486 196T388 328L304 256V62H412V0H400Z"/></g></g><g data-mml-node="mo" transform="translate(4206.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5262,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(6013,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(6764,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"/></g></g></g></svg></mjx-container> </p>
<p>其中的K就是系统的缩放比。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我的笔记本规格为1080p,15.6寸，缩放比为125%</span><br><span class="line">而我个人查看 DPI = 120的 放大的文本较为舒服</span><br><span class="line"></span><br><span class="line">所以说我的k为：141.21/120 = 1.25</span><br><span class="line"></span><br><span class="line">再举一个例子，我即将购买的2K 27寸显示屏的缩放比就应该为：</span><br><span class="line">$$\frac{108.79}{120} = 1.10 </span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">所以说我调整100%缩放比就刚好合适</span><br></pre></td></tr></table></figure>
<h4 id="缩放比例存在的问题"><a href="#缩放比例存在的问题" class="headerlink" title="缩放比例存在的问题"></a>缩放比例存在的问题</h4><p>另外，需要指出的是，调整缩放比仍然存在一定的问题。计算机使用插值算法来处理每一个像素，使得原本的图像被放大到指定的比率。在这一过程中，会出现显示模糊的问题。<br>为了解决这个问题，缩放比率最好要是整数。</p>
<p>而我的打算选择的2k 27寸刚好设置100%缩放就ok</p>
<h4 id="我的选择"><a href="#我的选择" class="headerlink" title="我的选择"></a>我的选择</h4><p>最终我决定购买2k的屏幕，一方面还有价格的因素，在这个分辨率往往是各家厂商的主力出货区间，竞争更加激烈，性价比较高。</p>
<h3 id="屏幕的尺寸"><a href="#屏幕的尺寸" class="headerlink" title="屏幕的尺寸"></a>屏幕的尺寸</h3><h4 id="屏幕规格"><a href="#屏幕规格" class="headerlink" title="屏幕规格"></a>屏幕规格</h4><p>屏幕规格大部分厂商都是16：9，虽然也有少部分厂家做其他比率的屏幕，但是，16：9是各家厂商的主力出货区间，竞争更加激烈，性价比较高。</p>
<h4 id="屏幕尺寸"><a href="#屏幕尺寸" class="headerlink" title="屏幕尺寸"></a>屏幕尺寸</h4><p>电脑屏幕的尺寸一般有24寸，27寸，32寸三个挡位。</p>
<p>但是考虑到我要将其放置在桌子上，32寸的显示器就有点过于大了。那么接下来就是需要比较24寸和27寸。</p>
<p>首先需要提到的是：根据前文的缩放比最好是整数的结论，实际上这两种配置都能做到100%缩放比率即可：</p>
<ul>
<li>24寸 1080p</li>
<li>27寸 2k</li>
</ul>
<p>但是显然我想要的是2k的屏幕。我现在使用的这个笔记本的分辨率是1080p的在先前的使用中总是感觉有像素感（虽然现在想起来其实是因为之前使用笔记本自带的键盘打字，屏幕不得不离眼睛较近，现在我购置了机械键盘之后，终于可以把屏幕方远来打字了。舒服了不少），所以说新的显示器我计划是一定要上2k。</p>
<h3 id="色彩"><a href="#色彩" class="headerlink" title="色彩"></a>色彩</h3><p>因为我是计划以后可能会使用显示器进行绘图或者一些需要色彩的配置较好的操作，所以说我希望显示器的色彩能够较好。</p>
<p>显示器的色彩主要有以下几个参数：</p>
<h4 id="位深"><a href="#位深" class="headerlink" title="位深"></a>位深</h4><p>位深指的是显示器用于处理颜色时使用的位数，一般会有8bit和10bit之分，但是需要注意的是，现在市面上存在宣传8抖10的显示器。</p>
<p>8抖10，指的是通过颜色参杂原理，显示出原来显示不出来的颜色，从而达到更好的显示效果，比如想要显示2.5这个颜色，只需要将2和3进行参杂即可。<br>但是需要注意的是，这种方式虽然提高了颜色显示的精细程度，但是本质上仍然是8bit的显示屏，是无论如何都无法与10bit相比的。</p>
<p>所以我的选择指标之一就是，显示器的位深是否为10bit</p>
<h4 id="色域"><a href="#色域" class="headerlink" title="色域"></a>色域</h4><p>因为发光材料的限制，所有的显示器都会有一个颜色的显示范围。根据1953年制定的sRGB标准可以对显示器的颜色显示进行度量，后面又有一个要求更高的DP3标准</p>
<p>标注超过100%的色域范围并没有意义，其往往指的是使用其他标准然后使用折算计算出来的等效百分比。</p>
<p>所以说在我的指标里面就有sRGB和DP3的百分比应该至少大于95%和93%</p>
<p>虽然说，最后我使用意愿+加权的数学建模的方法算出打分，那么最低显示效果并没有什么划线的必要，但是这对于后面设定权数有较大的影响。</p>
<h4 id="色准"><a href="#色准" class="headerlink" title="色准"></a>色准</h4><p>色准实际上指的就是显示器显示颜色的准确程度，为了满足我可能会有的绘画需求，色差自然是越小越好。<br>其中<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex;" xmlns="http://www.w3.org/2000/svg" width="7.761ex" height="1.71ex" role="img" focusable="false" viewbox="0 -716 3430.6 756"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"/></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g><g data-mml-node="mo" transform="translate(1874.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"/></g><g data-mml-node="mn" transform="translate(2930.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></svg></mjx-container> 自然是最好的选择。</p>
<p>但是其实一般而言只要<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex;" xmlns="http://www.w3.org/2000/svg" width="7.761ex" height="1.71ex" role="img" focusable="false" viewbox="0 -716 3430.6 756"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"/></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g><g data-mml-node="mo" transform="translate(1874.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"/></g><g data-mml-node="mn" transform="translate(2930.6,0)"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"/></g></g></g></svg></mjx-container> 就看不出什么区别了。</p>
<h4 id="对比度"><a href="#对比度" class="headerlink" title="对比度"></a>对比度</h4><p>在这个价位基本上大家的色差都在1000左右，也就是HDR400认证的水准。但是说实话，只有上到HDR600以上的对比度才能看出区别来，所以说实际上这个指标大家的水准基本上一致。</p>
<h4 id="亮度"><a href="#亮度" class="headerlink" title="亮度"></a>亮度</h4><p>屏幕更亮，在明亮的环境中的显色就越正常，而不会泛白。</p>
<p>所以说这也做为我考虑的指标之一。</p>
<h3 id="刷新率"><a href="#刷新率" class="headerlink" title="刷新率"></a>刷新率</h3><p>属性率是一个老生常谈的话题了。</p>
<p>这一次我计划是购买120hz以上即可<br>（虽然说最后买的那个居然有240hz的）</p>
<h3 id="面板"><a href="#面板" class="headerlink" title="面板"></a>面板</h3><p>传统的显示器由两部分构成，一部分是背后的背光层，另外一部分就是显示具体颜色的面板层。</p>
<h4 id="面板种类"><a href="#面板种类" class="headerlink" title="面板种类"></a>面板种类</h4><p>说实话，显示器的背光在我看来大同小异，漏光什么的其实我都不太在意。</p>
<p>我比较在意的实际上是可视角度，且最好为直面平。曲面虽然说有宣称的·沉浸感更强，但是实际上，曲面带来的扭曲是不可避免的，我认为尤其在处理文字工作以及绘画的时候会带来不小的影响。</p>
<p>所以说面板直接就是选择了 IPS的</p>
<h4 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h4><p>颜色的变化需要时间，但是实际上，感知不是很大，基本上就是0.几毫秒的差别。在游戏或者看电视的时候根本感知不强。</p>
<p>所以说我没有将这样一点纳入评分体系。</p>
<h2 id="二、搜集参数以及评分"><a href="#二、搜集参数以及评分" class="headerlink" title="二、搜集参数以及评分"></a>二、搜集参数以及评分</h2><p>我的评分公式如下：</p>
<script type="math/tex; mode=display">\begin{split}
\mathbf{W} =&\frac{分辨率}{2}*10+\\&\frac{颜色深度}{10}*30+\\
&\frac{(sRGB覆盖率-90)}{10}*40+\\&\frac{(DP3-90)}{10}*40-\\&\frac{色差}{6}*100+\\&HDR*20+\\&\frac{刷新率}{120}*30+\\&HDR对比度+\\&\frac{亮度}{400}*10 
\end{split}</script><p>反正最后评出来的排序顺序确实符合我的预期</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>品牌</th>
<th>型号</th>
<th>价格</th>
<th>尺寸</th>
<th>分辨率</th>
<th>色彩深度</th>
<th>色域sRGB</th>
<th>色域DP3</th>
<th>色准</th>
<th>HDR</th>
<th>刷新率</th>
<th>对比度</th>
<th>亮度</th>
<th>支架</th>
<th></th>
<th>评分</th>
<th>性价比</th>
</tr>
</thead>
<tbody>
<tr>
<td>sanc</td>
<td>G72</td>
<td>900</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>100</td>
<td>97</td>
<td>1.5</td>
<td>1</td>
<td>180</td>
<td>1</td>
<td>300</td>
<td>0</td>
<td></td>
<td>156.5</td>
<td>1.738889</td>
</tr>
<tr>
<td>sanc</td>
<td>G7e</td>
<td>900</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>100</td>
<td>95</td>
<td>1.5</td>
<td>1</td>
<td>165</td>
<td>1</td>
<td>250</td>
<td></td>
<td></td>
<td>143.5</td>
<td>1.594444</td>
</tr>
<tr>
<td>创维</td>
<td>F27G4Q Pro</td>
<td>900</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>99</td>
<td>96</td>
<td>2</td>
<td>1</td>
<td>170</td>
<td>1</td>
<td>350</td>
<td></td>
<td></td>
<td>138.9167</td>
<td>1.543519</td>
</tr>
<tr>
<td>sanc</td>
<td>G7C 2</td>
<td>1100</td>
<td>27</td>
<td>2</td>
<td>8.5</td>
<td>100</td>
<td>97</td>
<td>1.5</td>
<td>1</td>
<td>165</td>
<td>1</td>
<td>300</td>
<td></td>
<td></td>
<td>148.25</td>
<td>1.347727</td>
</tr>
<tr>
<td>sanc</td>
<td>G7proMax</td>
<td>1500</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>100</td>
<td>100</td>
<td>1.5</td>
<td>1</td>
<td>240</td>
<td>1</td>
<td>450</td>
<td>XLZ</td>
<td></td>
<td>187.25</td>
<td>1.248333</td>
</tr>
<tr>
<td>AOC</td>
<td>Q27G2S/D</td>
<td>1200</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>100</td>
<td>96</td>
<td>2</td>
<td>1</td>
<td>160</td>
<td>1</td>
<td>400</td>
<td></td>
<td></td>
<td>141.6667</td>
<td>1.180556</td>
</tr>
<tr>
<td>AOC</td>
<td>Q27G4</td>
<td>1300</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>99</td>
<td>93</td>
<td>2</td>
<td>2</td>
<td>180</td>
<td>2</td>
<td>450</td>
<td></td>
<td></td>
<td>152.9167</td>
<td>1.176282</td>
</tr>
<tr>
<td>创维</td>
<td>F27G52Q PRO</td>
<td>1350</td>
<td>27</td>
<td>2</td>
<td>8.5</td>
<td>100</td>
<td>98</td>
<td>2</td>
<td>1</td>
<td>180</td>
<td>1</td>
<td>400</td>
<td></td>
<td></td>
<td>150.1667</td>
<td>1.112346</td>
</tr>
<tr>
<td>小米</td>
<td>G27Q</td>
<td>1200</td>
<td>27</td>
<td>2</td>
<td>8</td>
<td>100</td>
<td>95</td>
<td>2</td>
<td>1</td>
<td>165</td>
<td>1</td>
<td>400</td>
<td>Y</td>
<td></td>
<td>132.9167</td>
<td>1.107639</td>
</tr>
<tr>
<td>AOC</td>
<td>Q27G3S</td>
<td>1100</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>100</td>
<td>95</td>
<td>3</td>
<td>1</td>
<td>170</td>
<td>1</td>
<td>300</td>
<td></td>
<td></td>
<td>121</td>
<td>1.1</td>
</tr>
<tr>
<td>创维</td>
<td>F27G51Q</td>
<td>1200</td>
<td>27</td>
<td>2</td>
<td>8.5</td>
<td>100</td>
<td>93</td>
<td>2</td>
<td>1</td>
<td>180</td>
<td>1</td>
<td>400</td>
<td></td>
<td></td>
<td>130.1667</td>
<td>1.084722</td>
</tr>
<tr>
<td>AOC</td>
<td>CQ27G3s</td>
<td>1100</td>
<td>27</td>
<td>2</td>
<td>8</td>
<td>99</td>
<td>90</td>
<td>2</td>
<td>1</td>
<td>165</td>
<td>1</td>
<td>350</td>
<td></td>
<td></td>
<td>107.6667</td>
<td>0.978788</td>
</tr>
<tr>
<td>AOC</td>
<td>Q27G3ze</td>
<td>1700</td>
<td>27</td>
<td>2</td>
<td>10</td>
<td>99</td>
<td>95</td>
<td>2</td>
<td>1</td>
<td>240</td>
<td>1</td>
<td>400</td>
<td></td>
<td></td>
<td>153.6667</td>
<td>0.903922</td>
</tr>
<tr>
<td>华硕</td>
<td>VG27AQL3A</td>
<td>1600</td>
<td>27</td>
<td>2</td>
<td>8</td>
<td>99</td>
<td>90</td>
<td>2</td>
<td>1</td>
<td>165</td>
<td>1</td>
<td>350</td>
<td></td>
<td></td>
<td>107.6667</td>
<td>0.672917</td>
</tr>
<tr>
<td>小米</td>
<td>redmi27pro</td>
<td>820</td>
<td>27</td>
<td>2</td>
<td>8</td>
<td>100</td>
<td>90</td>
<td>4</td>
<td>1</td>
<td>60</td>
<td>1</td>
<td>300</td>
<td>全能</td>
<td></td>
<td>50.83333</td>
<td>0.619919</td>
</tr>
<tr>
<td>微星</td>
<td>G274QRFW</td>
<td>1200</td>
<td>27</td>
<td>2</td>
<td>8.5</td>
<td>100</td>
<td>90</td>
<td>4</td>
<td>0</td>
<td>75</td>
<td>1</td>
<td>250</td>
<td></td>
<td></td>
<td>34.83333</td>
<td>0.290278</td>
</tr>
<tr>
<td>飞利浦</td>
<td>275E1S</td>
<td>1200</td>
<td>27</td>
<td>2</td>
<td>8</td>
<td>90</td>
<td>90</td>
<td>4</td>
<td>0</td>
<td>120</td>
<td>1</td>
<td>200</td>
<td></td>
<td></td>
<td>3.333333</td>
<td>0.027778</td>
</tr>
</tbody>
</table>
</div>
<h2 id="三、我的选择是："><a href="#三、我的选择是：" class="headerlink" title="三、我的选择是："></a>三、我的选择是：</h2><p><strong>sanc G7proMax</strong></p>
<ul>
<li>1500￥</li>
<li>10bit、全色域、低色差</li>
<li>2k    27寸    240Hz</li>
<li>最高亮度450</li>
</ul>
<p>我的评价是，很香啊</p>
<h2 id="四、最后想说的一些话"><a href="#四、最后想说的一些话" class="headerlink" title="四、最后想说的一些话"></a>四、最后想说的一些话</h2><p>每一次选购东西都需要消耗大量的精力。</p>
<p>这一次购买购买显示器，从了解基本参数到最后我将这次经历写成文稿大概用了一天半的时间……</p>
<p>有一说一，花的时间太多了……</p>
<p>但是能买到心仪的产品还是开心的……</p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>显示器基本属性：<br><a href="https://www.bilibili.com/video/BV1RG4y147DD/">百万光学实验数据，告诉你谁适合打游戏｜2022千元电竞显示器消费者报告_哔哩哔哩_bilibili</a></p>
<p><a href="https://www.bilibili.com/video/BV1Ug4y1X7KS/">【硬件科普】万能的显示器选购指南。帮你明白不同的用途，适合什么样的显示器。_哔哩哔哩_bilibili</a></p>
<p>PPI&amp;DPI以及缩放存在的问题：<br><a href="https://www.bilibili.com/video/BV1bw41117xL/">【硬件科普】换了更高分辨率的显示器，软件界面反而模糊-Windows缩放详解_哔哩哔哩_bilibili</a></p>
<p>品牌参考：<br><a href="https://www.zhihu.com/tardis/zm/art/110281051?source_id=1005">电脑显示器选购指南2023版 (8500字-推荐收藏) (zhihu.com)</a></p>
]]></content>
      <tags>
        <tag>杂谈</tag>
        <tag>设备</tag>
      </tags>
  </entry>
  <entry>
    <title>有关于文本读取和写入</title>
    <url>/2023/11/03/1.Archieve/%E6%9C%89%E5%85%B3%E4%BA%8E%E6%96%87%E6%9C%AC%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5/</url>
    <content><![CDATA[<p>[[___C++]]</p>
<h3 id="通过流式输入输出读取，代码如下："><a href="#通过流式输入输出读取，代码如下：" class="headerlink" title="通过流式输入输出读取，代码如下："></a>通过流式输入输出读取，代码如下：</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;input.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">ofstream <span class="title">out</span><span class="params">(<span class="string">&quot;output.txt&quot;</span>)</span></span>;</span><br><span class="line">in&gt;&gt;……;</span><br><span class="line">out&lt;&lt;……;</span><br><span class="line">in.<span class="built_in">close</span>();</span><br><span class="line">out.<span class="built_in">close</span>(); <span class="comment">//关闭文档以保存</span></span><br></pre></td></tr></table></figure>
<h3 id="通过-eof-来判断是否到达文本结尾。"><a href="#通过-eof-来判断是否到达文本结尾。" class="headerlink" title="通过.eof()来判断是否到达文本结尾。"></a>通过.eof()来判断是否到达文本结尾。</h3><p>&emsp;&emsp;返回值为bool，结合循环使用：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (!ifs.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">	ifs.<span class="built_in">get</span>(ch);</span><br><span class="line">	std::cout &lt;&lt; ch;</span><br><span class="line">	ch = <span class="string">&#x27; &#x27;</span>;				<span class="comment">//这句话可以避免最后一个字符重复被读取</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Cpp</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>本科生录取通知书</title>
    <url>/2023/10/30/1.Archieve/%E6%9C%AC%E7%A7%91%E7%94%9F%E5%BD%95%E5%8F%96%E9%80%9A%E7%9F%A5%E4%B9%A6/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="cd00850e5052717ee65544a64c5197d6a7fe279f6983fc7c19dec05b01e8c68b">e236de9be9a592a0152d0d7f6b18eec6bd2e02dee9dfc07d7a687148e1ed06d08ed5f857bc81c4c6498e32697614658aa45e1878d8fe4ea5ac87dc65d4ad50dd42caecbef2ca66a314c843031370bf449da4c31afa414c6efcabf280a6ce64dc4566926805d029867b97362893c63464fca713b30ebb6d80155bf2da04865dd8e5d6f29bf802cfc4de3ce38d474aab234c702aa8ad5c9ae3d4a840cabca9f6ea46c1a56741413bac6bb4353b86402fedca1297627a804f4c27f68808ac844e948d4c3cabf733871cd3728f222ac2766c668b7ac5cc5d010dd08eaf96ce7b52fe6420c8ceb09a6c8491862c878ddb005479e1182171f8898fa9da55fbb6386eff6edf0a5077757d82e2b27be2bf3f8a9c86218eb13e6cd2aac94296a864492dafe96ff7cf616565b1f914e075cda51756b90cf9020c2e79b1e8cdb2530b79f85014c7e545ebe45bd38d8d658bc9954629</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密�?.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>机械键盘初次选购</title>
    <url>/2023/12/05/1.Archieve/%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E5%88%9D%E6%AC%A1%E9%80%89%E8%B4%AD/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]] [[_</strong>键盘]]</p>
<blockquote>
<p>今天是我初次选购机械键盘，有一说一就算是选择了茶轴，结果还是很吵……</p>
<p>总的来说到手的键盘我很满意，手感、做工、rgb灯效都很棒</p>
<p>但是就是有一个问题，那就是这个空格的手感相较于其他的按键来说，会有点过于拉跨，就是也不是说会发生晃动什么的，就是这个手感要比其他的按钮要烂一点，尤其是它的回弹，每次一按下去我都感觉是在按一个又沉又厚重的东西……</p>
<p>其实也不是很难得出它这个样子的原因，实际上空格键因为加上了卫星轴的设计，加上本身的重量比较大，所以说会导致这样的问题。</p>
<p>可能比较好的办法就是换一个弹簧？反正这件事情暂时没有解决。</p>
</blockquote>
<p><strong>接下来，我来总结一下这次购买的经验。</strong></p>
<span id="more"></span>
<h3 id="一、选择我的平台"><a href="#一、选择我的平台" class="headerlink" title="一、选择我的平台"></a>一、选择我的平台</h3><p>本来是想在淘宝这种平台购买新的，电商平台上面有各种价位的和品种的键盘，查了查入门款大概是在200以上。</p>
<p>但是后面转念一想，似乎我也不需要十分新的键盘，而且同样的价格，买二手的可能可以买到原本价位在300+的产品呢。</p>
<p>于是最终我决定优先在咸鱼上进行选购。咸鱼作为一个二手平台，具有更高的性价比。</p>
<h3 id="二、查询相关的资料"><a href="#二、查询相关的资料" class="headerlink" title="二、查询相关的资料"></a>二、查询相关的资料</h3><p>仔细查了一下资料，机械键盘的主体其实是键轴，键轴也分为好几类，对于我这样的新手而言，讨论过多的键轴完全是在浪费时间。于是我开始了解了一下cherry的键轴。</p>
<p>cherry作为老牌的键轴，一直是行业的标杆，其有四种最主要的键轴，分别为：红黑青茶。<br>这些键轴按照以下进行分类：</p>
<ul>
<li>线性轴<ul>
<li>压力大-黑轴</li>
<li>压力小-红轴</li>
</ul>
</li>
<li>段落轴<ul>
<li>声音大-青轴</li>
<li>声音较小-茶轴</li>
</ul>
</li>
</ul>
<p>综合来说，茶轴既适合打游戏也适合码字，而且选购机械键盘而不是薄膜键盘的一个主要的原因也是我想体验一下机械键盘独特的段落手感。</p>
<h3 id="三、明确自己的要求"><a href="#三、明确自己的要求" class="headerlink" title="三、明确自己的要求"></a>三、明确自己的要求</h3><p>本来我的预估花的钱打算控制在150左右的，但是找来找去我也没能找到心仪的键盘：</p>
<p>当时仔细想了想是用于干什么的，基本上可能还是用来学习，所以说我不想搞那种很复杂的游戏电竞风格的键盘买最好是浅色系的，最次最次，就算是花里胡哨也尽量是向松石绿接近的颜色。</p>
<p>于是我终于明确了我的需求：分为以下几个层次</p>
<ol>
<li>108键，茶轴</li>
<li>配色简洁，支持三模（即可以有线也可以使用接收器也可以蓝牙连接，这样的话多设备同时使用或者外出什么的会好用一点）</li>
<li>RGB支持，热拔插</li>
</ol>
<p>左挑西选发现在100-200很难找到我心仪的产品。</p>
<p>后来我又仔细想了想：这个东西我到底是打算使用多久？答：两年是至少有的</p>
<p>于是我就将价位加到了250左右。</p>
<p>最后我挑选了一个先行者z108键盘，是一个位于武汉大学的同学出的（真巧，正好运的也快）</p>
<p>白色，茶轴，rgb，热拔插，三模，108键位。可以说是完美切中了我的需求（虽然就是我虽然是要配色简洁但是也不是代表没有呀，纯白色的awa）</p>
<p>最后又是发快递什么的有一点点波折，总而言之，是一个十分好的购物体验，从选购到拿到我的键盘一共耗时是两天~</p>
<h3 id="四、最后的总结"><a href="#四、最后的总结" class="headerlink" title="四、最后的总结"></a>四、最后的总结</h3><p>总的来说，这次在咸鱼上面的购物体验丰富了我的见识，也让我真正对于咸鱼有了信心。</p>
<p>在选购我们想要的商品的时候，两个元素十分地重要：需求，预算。</p>
<p>尤其是需求，只有明确自己的需求，才能更好的去实现你的目标</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：qq表情实现方式</title>
    <url>/2024/01/31/1.Archieve/%E6%9D%82%E8%B0%88%EF%BC%9Aqq%E8%A1%A8%E6%83%85%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最近qq搞了个龙年可以刷龙表情的小彩蛋，qq用户可以刷出五颜六色的龙，其中还有一个隐藏款。</p>
<p>hmmm然后就发现了一件比较有意思的事情</p>
<span id="more"></span>
<p>qq的表情的实现方式原理原来是两个个特殊的字符：<code>Ɗ</code><br>前者是一个控制字符，后者是特定序号对应的拉丁字母</p>
<p><a href="https://www.bilibili.com/read/cv27574558/">QQ隐藏表情代码？！ - 哔哩哔哩 (bilibili.com)</a></p>
<p>\u0014\u18a，比如说这个 就是大龙</p>
<h3 id="表情一览"><a href="#表情一览" class="headerlink" title="表情一览"></a>表情一览</h3><p>复制到qq里面即可正常显示<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> !&quot;#$%&amp;&#x27;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊ</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>机器人实践</title>
    <url>/2023/11/20/1.Archieve/%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<p>[[___工创实践]]</p>
<p>上次去了工创实践，学习了如何使用机械臂</p>
<span id="more"></span>
<h3 id="一、手动操控机械臂"><a href="#一、手动操控机械臂" class="headerlink" title="一、手动操控机械臂"></a>一、手动操控机械臂</h3><p>其实挺简单来着的，按照菜单页面进行操作，然后在手动移动机械臂的时候需要按下控制器背后的一个扳手。</p>
<p>扳手分为两档，不按时无法手动操控，一档是启动操控，再用力按会无法操控。</p>
<p>但是实际上人手动操作机械臂的运用场景还是少一些，实际情况肯定还是使用程序操控。</p>
<h3 id="二、使用程序操控机械臂"><a href="#二、使用程序操控机械臂" class="headerlink" title="二、使用程序操控机械臂"></a>二、使用程序操控机械臂</h3><p>其实主要是环境的配置，配置好之后导入预制好的模型进行处理即可</p>
<h4 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h4><p>环境配置在模拟仿真应用上跑</p>
<ol>
<li>配置机械臂的种类</li>
<li>为机械臂配置工具，这次我们是一支笔，注意需要调整绑定参数（已提供）</li>
</ol>
<h4 id="2-绘制采样"><a href="#2-绘制采样" class="headerlink" title="2. 绘制采样"></a>2. 绘制采样</h4><ol>
<li>导入模型文件</li>
<li>选择使用上表面进行操作</li>
<li>点采样，绘制轨迹</li>
<li>改变每一笔的方向<ol>
<li>如果不改的话，笔的正方向是默认沿着轨迹的切线方向。具体效果就是机械臂的“手腕”会发生转动</li>
<li>但是我们不希望它转动，所以说就需要将所有的笔画固定一个方向。</li>
</ol>
</li>
<li>生成轨迹</li>
</ol>
<h4 id="3-调整轨迹"><a href="#3-调整轨迹" class="headerlink" title="3. 调整轨迹"></a>3. 调整轨迹</h4><p>绘制图案的时候，需要进行提笔操作，不然在进行跳跃式的绘制的时候，中间会拉出来多余的线</p>
<p>开启工具跟随</p>
<ol>
<li>在每一笔之前添加点，将原有的坐标值z+10(一般来说都是mm为单位)</li>
<li>在每一笔之后添加点，将原有的坐标值z+10(一般来说都是mm为单位)</li>
</ol>
<p>这样就实现了一个提笔，落笔的操作。</p>
]]></content>
      <tags>
        <tag>工创实践</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：unicode的特殊控制字符</title>
    <url>/2024/02/29/1.Archieve/%E6%9D%82%E8%B0%88%EF%BC%9Aunicode%E7%9A%84%E7%89%B9%E6%AE%8A%E6%8E%A7%E5%88%B6%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>编程]]</p>
<p>unicode编码中从 \u0000 到 \u0020 是一些特殊的字符，用于控制字符格式或者一些特殊的东西，下面是一个表格，展示了那些字符：</p>
<p><strong>unicode字符编码</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>字符编号</th>
<th>字符代号</th>
<th>字符功能</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>0001</td>
<td>SOH</td>
<td>(start of handing)</td>
<td>标题开始</td>
</tr>
<tr>
<td>0002</td>
<td>STX</td>
<td>(start of text)</td>
<td>正文开始</td>
</tr>
<tr>
<td>0003</td>
<td>ETX</td>
<td>(end of text)</td>
<td>正文结束</td>
</tr>
<tr>
<td>0004</td>
<td>EOT</td>
<td>(end of transmission)</td>
<td>传输结束</td>
</tr>
<tr>
<td>0005</td>
<td>ENQ</td>
<td>(enquiry)</td>
<td>请求</td>
</tr>
<tr>
<td>0006</td>
<td>ACK</td>
<td>(acknowledge)</td>
<td>收到通知</td>
</tr>
<tr>
<td>0007</td>
<td>BEL</td>
<td>(bell)</td>
<td>响铃</td>
</tr>
<tr>
<td>0008</td>
<td>BS</td>
<td>(backspace)</td>
<td>退格</td>
</tr>
<tr>
<td>0009</td>
<td>HT</td>
<td>(horizontal tab)</td>
<td>水平制表符</td>
</tr>
<tr>
<td>000A</td>
<td>LF</td>
<td>(NL line feed, new line)</td>
<td>换行键</td>
</tr>
<tr>
<td>000B</td>
<td>VT</td>
<td>(vertical tab)</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>000C</td>
<td>FF</td>
<td>(NP form feed, new page)</td>
<td>换页键</td>
</tr>
<tr>
<td>000D</td>
<td>CR</td>
<td>(carriage return)</td>
<td>回车键</td>
</tr>
<tr>
<td>000E</td>
<td>SO</td>
<td>(shift out)</td>
<td>不用切换</td>
</tr>
<tr>
<td>000F</td>
<td>SI</td>
<td>(shift in)</td>
<td>启用切换</td>
</tr>
<tr>
<td>0010</td>
<td>DLE</td>
<td>(data link escape)</td>
<td>数据链路转义</td>
</tr>
<tr>
<td>0011</td>
<td>DC1</td>
<td>(device control 1)</td>
<td>设备控制1</td>
</tr>
<tr>
<td>0012</td>
<td>DC2</td>
<td>(device control 2)</td>
<td>设备控制2</td>
</tr>
<tr>
<td>0013</td>
<td>DC3</td>
<td>(device control 3)</td>
<td>设备控制3</td>
</tr>
<tr>
<td>0014</td>
<td>DC4</td>
<td>(device control 4)</td>
<td>设备控制4</td>
</tr>
<tr>
<td>0015</td>
<td>NAK</td>
<td>(negative acknowledge)</td>
<td>拒绝接收</td>
</tr>
<tr>
<td>0016</td>
<td>SYN</td>
<td>(synchronous idle)</td>
<td>同步空闲</td>
</tr>
<tr>
<td>0017</td>
<td>ETB</td>
<td>(end of trans. block)</td>
<td>传输块结束</td>
</tr>
<tr>
<td>0018</td>
<td>CAN</td>
<td>(cancel)</td>
<td>取消</td>
</tr>
<tr>
<td>0019</td>
<td>EM</td>
<td>(end of medium)</td>
<td>介质中断</td>
</tr>
<tr>
<td>001A</td>
<td>SUB</td>
<td>(substitute)</td>
<td>替补</td>
</tr>
<tr>
<td>001B</td>
<td>ESC</td>
<td>(escape)</td>
<td>溢出</td>
</tr>
<tr>
<td>001C</td>
<td>FS</td>
<td>(file separator)</td>
<td>文件分割符</td>
</tr>
<tr>
<td>001D</td>
<td>GS</td>
<td>(group separator)</td>
<td>分组符</td>
</tr>
<tr>
<td>001E</td>
<td>RS</td>
<td>(record separator)</td>
<td>记录分离符</td>
</tr>
<tr>
<td>001F</td>
<td>US</td>
<td>(unit separator)</td>
<td>单元分隔符</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>杂谈：游戏账号相关</title>
    <url>/2024/02/14/1.Archieve/%E6%9D%82%E8%B0%88%EF%BC%9A%E6%B8%B8%E6%88%8F%E8%B4%A6%E5%8F%B7%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]]<br>[[_</strong>游戏体验日记]]</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>除了制作十分精良的独立游戏和所谓的商业游戏之外，我常常也会游玩一些二次元游戏以达到我对于可爱妹子的摄入需求，那么为了开荒一款游戏，常常是需要十分大的时间成本的。<br>想要解决游玩游戏的时间成本，又想要获得良好的游戏体验（因为二次元游戏常常会包含或多或少的养成元素，养成程度会影响到游戏的体验），最好的选择就是花钱。  </p>
<p>同时对于那种可能只是想要玩一段时间的游戏，也可以考虑将账号卖出，从而使得自己花费的时间转化为金钱作为补偿。  </p>
<p>实际上，游戏账号交易已经是一个较为普遍的市场，甚至有人以此牟利。</p>
<h2 id="账号买卖注意事项"><a href="#账号买卖注意事项" class="headerlink" title="账号买卖注意事项"></a>账号买卖注意事项</h2><p>通常来说，为了体验自己抽和通关的乐趣，我们常常会选择购买初始号。</p>
<p>初始号指的是没有推剧情和代充，只是通过一些活动和通关一些基本的关卡来获得资源，且获得了一定的抽卡资源的账号。购买此类账号的时候需要注意以下几点：</p>
<h3 id="1-选择信用度高的商家"><a href="#1-选择信用度高的商家" class="headerlink" title="1. 选择信用度高的商家"></a>1. 选择信用度高的商家</h3><p>购买之前先确认商家是否可信，在较为小的性价比的提升之下并不需要去贪图那点蝇头小利。多花点钱在较为可信任的商家购买可以省下很多烦恼</p>
<h3 id="2-确认账号信息"><a href="#2-确认账号信息" class="headerlink" title="2. 确认账号信息"></a>2. 确认账号信息</h3><p>在购买之前，请务必核对账号信息，比如：</p>
<ol>
<li>账号是否已经首充？</li>
<li>账号是否可以更换绑定信息？</li>
<li>等等等等</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">账号一般分为活绑和死绑定两种，其中死绑指的是无法更换绑定的账号或者说是手机号（使用的是一次性的验证码注册的手机号）。</span><br><span class="line"></span><br><span class="line">死绑的账号无法更换密码，且较为容易被二次售卖，价格也相较来说更为便宜。一般只是作为抽卡找个乐子玩。</span><br></pre></td></tr></table></figure>
<h3 id="3-确认游戏是否存在找回方式"><a href="#3-确认游戏是否存在找回方式" class="headerlink" title="3.确认游戏是否存在找回方式"></a>3.确认游戏是否存在找回方式</h3><p>有一些游戏可以通过其他的手段来将账号找回，购买账号的时候需要注意是否存在其他的找回方式，并且加以防范。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title:案例</span><br><span class="line"></span><br><span class="line">碧蓝航线可以通过举报账号违规封号，然后使用实名认证的身份证来找回的方式。</span><br></pre></td></tr></table></figure>
<h3 id="4-确认是否划算"><a href="#4-确认是否划算" class="headerlink" title="4.确认是否划算"></a>4.确认是否划算</h3><p>理清楚自己的目标，检验是否划算。  </p>
<p>举个例子，我想要购买战双新出的皮肤，且实际上其他的东西对我的影响不大。如果使用我自己原本的号进行氪金购买的话，至少需要氪金250￥（算上首充的翻倍）。<br>但是如果我选择购买账号的话，可以获得一堆资源和部分限定道具（概率），还可以拥有足够抽出新皮肤的黑卡。而这样的账号才50￥  </p>
<h2 id="实际购买经验"><a href="#实际购买经验" class="headerlink" title="实际购买经验"></a>实际购买经验</h2><p>实际购买过一次战双的账号之后，就目前来说，体验良好。花费50获得了我期望中的东西，且剧本通关程度和我原本的账号相近，所以说体验剧情也是不会差太多的。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>awa</title>
    <url>/2023/10/27/1.Archieve/%E6%9D%82%E8%B0%88%EF%BC%9A%E6%88%91%E8%87%AA%E5%B7%B1blog%E7%9A%84%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
    <content><![CDATA[<p>[[___杂谈]]</p>
<p>这篇文章简单讲讲我自己的blog是如何构建的。</p>
<h2 id="一、了解如何搭建自己的blog"><a href="#一、了解如何搭建自己的blog" class="headerlink" title="一、了解如何搭建自己的blog"></a>一、了解如何搭建自己的blog</h2><p>搭建blog的方式无非两种，一种是本地构建，另外一种是云端构建。</p>
<p>本地构建指的是网页在本地渲染，然后提交到云端，云端不进行任何计算，只是负责将文件分发给接收者。</p>
<p>云端构建指的是云端上只存储原始的markdown文件，在分发时进行渲染，这就要求云端有一定的计算能力。</p>
<p>我并不打算花费金钱群购买服务器，但是同时我又想要尽可能个性化的blog页面，但是我又不太希望将其公之于众，那么这个时候github的github_page就十分合适了</p>
<p>githubpage的原理就是属于本地构建，服务器相当于提供下载功能，总而言之是一种相对方便与美观的构建方式</p>
<p>一般较为常见的方式是使用hexo搭建，但是同样也有使用huge搭建的方式，后者更加美观，但是我并不计较那些，hexo搭建的话有许多bug都可以直接找的到解决办法。详细的可以看[[关于hexo与hugo]]</p>
<p>之后，我选择了看起来简洁社群也相对较为的发达的hexo</p>
<h2 id="二、开始搭建"><a href="#二、开始搭建" class="headerlink" title="二、开始搭建"></a>二、开始搭建</h2><p>这里是有专门的教程的，直接跟着一步步做即可。我没有作过于深入的了解。</p>
<p>遇到的几个问题，我记得的有：</p>
<ul>
<li>git被拒绝了：有可能是因为你开了加速器，关掉就好了</li>
<li>localhost显示不正常：使用hexo clean之后重新生成试试看</li>
</ul>
<h2 id="三、编写自动化bat脚本"><a href="#三、编写自动化bat脚本" class="headerlink" title="三、编写自动化bat脚本"></a>三、编写自动化bat脚本</h2><p>每次想要构建都需要打开所在文件夹，点击open git bash here，这十分麻烦，于是我搜集了资料，自己编写了一个bat脚本来便于我一键生成~</p>
<p>再加上powertoys的powertoys run功能，使我只需要按下alt+space并且输入<code>&gt;</code>就可以开始键入命令调用bat脚本了</p>
<p>下面是我的bat脚本，bat的名称为myhexo：<br><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Echo</span> Off</span><br><span class="line"><span class="built_in">SetLocal</span></span><br><span class="line"><span class="built_in">set</span> p0=%<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> &quot;p1=defaultName&quot;</span><br><span class="line"><span class="built_in">set</span> p1=%<span class="number">2</span></span><br><span class="line"><span class="built_in">set</span> &quot;fileAddress=E:\HexoFile\source\_posts\<span class="variable">%p1%</span>.<span class="built_in">md</span>&quot;</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;&quot; (</span><br><span class="line">    <span class="built_in">start</span> E:\\Git\\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;r&quot; (</span><br><span class="line">    <span class="built_in">start</span> E:\\Git\\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo g &amp;&amp; hexo d &amp;&amp;hexo s;bash&quot;</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">) </span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;g&quot; (</span><br><span class="line">    <span class="built_in">start</span> E:\\Git\\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo clean &amp;&amp;hexo g &amp;&amp; hexo d &amp;&amp;hexo s;bash&quot;</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">) </span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;n&quot; (</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( explorer &quot;<span class="variable">%fileAddress%</span>&quot;  ) </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( <span class="keyword">Exit</span> ) </span><br><span class="line"></span><br><span class="line">    <span class="built_in">start</span> E:\Git\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo new post <span class="variable">%p1%</span>&amp;&amp;<span class="keyword">exit</span>&quot;</span><br><span class="line">    timeout /t <span class="number">8</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line">    <span class="built_in">cmd</span> /c &quot;myhexo n <span class="variable">%p1%</span>&quot;</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">) </span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;x&quot; (</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( explorer &quot;<span class="variable">%fileAddress%</span>&quot;  ) </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( <span class="keyword">Exit</span> ) </span><br><span class="line"></span><br><span class="line">    <span class="built_in">start</span> E:\Git\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo new xmind <span class="variable">%p1%</span>&amp;&amp;<span class="keyword">exit</span>&quot;</span><br><span class="line">    timeout /t <span class="number">8</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line">    <span class="built_in">cmd</span> /c &quot;myhexo x <span class="variable">%p1%</span>&quot;</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">) </span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%p0%</span>&quot;==&quot;b&quot; (</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( explorer &quot;<span class="variable">%fileAddress%</span>&quot;  ) </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%fileAddress%</span> ( <span class="keyword">Exit</span> ) </span><br><span class="line"></span><br><span class="line">    <span class="built_in">start</span> E:\Git\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo new bilibili <span class="variable">%p1%</span>&amp;&amp;<span class="keyword">exit</span>&quot;</span><br><span class="line">    timeout /t <span class="number">8</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line">    <span class="built_in">cmd</span> /c &quot;myhexo b <span class="variable">%p1%</span>&quot;</span><br><span class="line">    <span class="keyword">Exit</span></span><br><span class="line">) </span><br><span class="line"><span class="built_in">start</span> E:\\Git\\git-bash.exe --<span class="built_in">cd</span>=E:\HexoFile -c &quot;hexo <span class="variable">%p0%</span>;bash&quot;</span><br><span class="line"><span class="keyword">Exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>使用start调用git-bash，并cd进入指定目录</p>
<p>使用 -c附带执行的指令语句。</p>
<p>比如简单的生成就输入<code>myhexo r</code> ，这将会调用下面的指令：<code>start E:\\Git\\git-bash.exe --cd=E:\HexoFile -c &quot;hexo g &amp;&amp; hexo d &amp;&amp;hexo s;bash&quot;</code> 先generate生成网页，然后再develop提交给GitHub，最后再serve构建本地预览。</p>
<p>如果要清空再生成，就是<code>myhexo g</code>，这将会调用：<code>start E:\\Git\\git-bash.exe --cd=E:\HexoFile -c &quot;hexo clean &amp;&amp;hexo g &amp;&amp; hexo d &amp;&amp;hexo s;bash&quot;</code> </p>
<hr>
<p>自动化让生活更美好~</p>
<h2 id="四、后续"><a href="#四、后续" class="headerlink" title="四、后续"></a>四、后续</h2><p>我后面又联合obsidian和一个本机文件同步软件FreeFileSync还有一个 多设备的文件同步软件SyncTrazor进一步构建我的blog体系。</p>
<p>我使用obsidian构建知识库，然后使用FreeFileSync实时将其中部分公开内容同步到本地的hexo的_post文件夹内，同时也将文件通过SyncTrazor随时准备共享到其他设备上。</p>
]]></content>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>测试：在 Hexo 中使用思维导图</title>
    <url>/2023/11/03/1.Archieve/%E6%B5%8B%E8%AF%95%EF%BC%9A%E5%9C%A8%20Hexo%20%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</url>
    <content><![CDATA[<p>[[___hexo]]</p>
<h3 id="安装方式："><a href="#安装方式：" class="headerlink" title="安装方式："></a>安装方式：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-markmap --save</span><br></pre></td></tr></table></figure>
<h3 id="使用方式："><a href="#使用方式：" class="headerlink" title="使用方式："></a>使用方式：</h3><h4 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意这个换行是一定要加的。</span><br><span class="line">&#123;% markmap height [depth] %&#125;</span><br><span class="line">- markmap</span><br><span class="line">  - Demo</span><br><span class="line">    - links</span><br><span class="line">    - **inline** ~~text~~ *styles*</span><br><span class="line">    - multiline</span><br><span class="line">      content</span><br><span class="line">    - HTML code is quite long      </span><br><span class="line">  - Test</span><br><span class="line"></span><br><span class="line">&#123;% endmarkmap %&#125;</span><br><span class="line">注意这个换行是一定要加的。</span><br></pre></td></tr></table></figure>
<h4 id="显示效果：在列表页面无法查看，请点击详情页面查看："><a href="#显示效果：在列表页面无法查看，请点击详情页面查看：" class="headerlink" title="显示效果：在列表页面无法查看，请点击详情页面查看："></a>显示效果：在列表页面无法查看，请点击详情页面查看：</h4>
<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;markmap&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;Demo&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;links&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;&lt;strong&gt;inline&lt;/strong&gt; &lt;del&gt;text&lt;/del&gt; &lt;em&gt;styles&lt;/em&gt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,6]},&quot;v&quot;:&quot;multiline&lt;br&gt;\ncontent&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;HTML code is quite long&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Test&quot;}]}"/>
</div>

<span id="more"></span>
<h4 id="方式2："><a href="#方式2：" class="headerlink" title="方式2："></a>方式2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意这个换行是一定要加的。</span><br><span class="line">&#123;% markmap %&#125;</span><br><span class="line"># Soundfreaq</span><br><span class="line">## 国外市场</span><br><span class="line">### 地区经销商</span><br><span class="line">#### 连锁商超</span><br><span class="line">#### 数码店</span><br><span class="line">#### 星级酒店</span><br><span class="line">##### Four Seasons</span><br><span class="line">##### Ritz-Calton</span><br><span class="line">#### 线上渠道</span><br><span class="line">##### 美亚</span><br><span class="line">##### 英亚</span><br><span class="line">## 国内市场</span><br><span class="line">### 淘宝店（自营）</span><br><span class="line">### 京东旗舰店（筹备）</span><br><span class="line">### 国内经销商</span><br><span class="line">#### 酒店连锁</span><br><span class="line">##### Niccolo</span><br><span class="line">##### Hilton</span><br><span class="line">&#123;% endmarkmap %&#125; </span><br><span class="line">注意这个换行是一定要加的。</span><br></pre></td></tr></table></figure>

<div class="markmap-container" style="height:undefined">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;Soundfreaq&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;国外市场&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;地区经销商&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;连锁商超&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;数码店&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;星级酒店&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;Four Seasons&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;Ritz-Calton&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;线上渠道&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;美亚&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;英亚&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;国内市场&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;淘宝店（自营）&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;京东旗舰店（筹备）&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;国内经销商&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;酒店连锁&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;Niccolo&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;Hilton&quot;}]}]}]}]}"/>
</div>
 
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>闲聊：知识体系的构筑</title>
    <url>/2024/01/13/1.Archieve/%E6%9D%82%E8%B0%88%EF%BC%9A%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%9A%84%E6%9E%84%E7%AD%91/</url>
    <content><![CDATA[<p>[[<strong>_杂谈]][[_</strong>效率工具]]</p>
<p>为什么我会比较感兴趣类似的方法论的东西呢？实际上我认为这和我的个人特点有关，我比较喜欢找到一些比较巧妙的东西来增加我自己的效率。  </p>
<p>但是我同时认为我自己不是一个空谈者，我对于那些东西进行实践，并且结合自己的知识将他们转化为我自己的东西。  </p>
<h2 id="一、接触学习方法论的历程"><a href="#一、接触学习方法论的历程" class="headerlink" title="一、接触学习方法论的历程"></a>一、接触学习方法论的历程</h2><h3 id="1-初识"><a href="#1-初识" class="headerlink" title="1.初识"></a>1.初识</h3><p>带领我从一个较为专业的视角去看待学习这件事情的是yJango的学习观。当时我会在考差了之后断断续续地学习其中的知识。<a href="https://zhuanlan.zhihu.com/p/46841114">学习观01：好多人一辈子都没搞清什么是学习 - 知乎 (zhihu.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">但是说起来另外一件让我饶有兴趣的事情就是这个up主记忆宫殿宁梓亦：[记忆宫殿宁梓亦的个人(bilibili.com)](https://space.bilibili.com/129860965/)</span><br><span class="line"></span><br><span class="line">他后面开始反驳起来了yJango的观点，而后在现在看起来，我认为yJango的学习观的建立的模型有点过于简化了，但是从根本上是没有错的，而记忆宫殿宁梓亦的批评就显得有点吹毛求疵了。</span><br></pre></td></tr></table></figure>
<p>如果要说当时这个给我带来的最大的影响是什么，那就是对于学习就是压缩信息，总结方法的过程。这一观点我现在还在使用</p>
<p>另外，最重要的一点就是其让我知道了线性笔记 的劣势，我第一次知道了思维导图是什么。</p>
<h3 id="2-进一步认识"><a href="#2-进一步认识" class="headerlink" title="2.进一步认识"></a>2.进一步认识</h3><p>更进一步的认识则是后来实际的阅读相关的书籍，当时我拿着我的闲钱想买本书，然后这一系列书刚好激发了我的兴趣：博赞学习技巧系列。</p>
<p>怎么说呢，当时我本身对于相关的学习技巧之类的东西颇感兴趣。然后当时我本来打算是选购一本小说的，但是很可惜，没有我想要的书本。然后这系列书中有一本叫做思维导图的书吸引了我的兴趣，我知道线性笔记的劣势，同时知道思维导图可以很好地解决我的问题之后，便一直思考着想要变革我自己的笔记形式，但是苦于我拿到了手机的时候不可能再去学习了，我肯定是要玩游戏的，而且这种需要时间去实践的东西，使用不是很容易就能接触到的手机作为学习的对象来说不是十分的理想。</p>
<p>所以说我当即就想着要将其买下来看看，然后又得知这一本书才买7元的时候，我简直要高兴坏了，当即就将这一系列一并购买了下来。一本小说的价格也就30左右，而这一本学习之key却只要35，还是五本。</p>
<p>然后我就开始正式的阅读起了这几本书……虽然也是断断续续的读，但是我认为这几本书对于我现在的影响十分之大。</p>
<h3 id="3-初步实践"><a href="#3-初步实践" class="headerlink" title="3.初步实践"></a>3.初步实践</h3><p>光是学习理论是没有什么用处的，只有真正的践行，才能被称之为有效。</p>
<p>博赞在书中主要是介绍了以下几种观念：</p>
<ol>
<li>“学习整体”的思路，先通读书然后再追求细节</li>
<li>学习规律：主要强调的是学习时的整体观念和学习后的复习</li>
<li>快速阅读技术：通过一些技巧去有意识地提高自己的阅读速度</li>
<li>思维导图：思维导图是一种构建知识体系的东西</li>
<li>快速记忆：能够在几秒钟记忆下大量的信息</li>
</ol>
<p>虽然说我知道有这么多的理论知识，但是实际上，在那个时候我能加以实践并且对于我来说卓有成效的几乎没有。<br>在高中的那段时间里面，所需要学习的知识基本上属于是应试的内容，根本用不到这么多的技巧，beside，学习观给我带来的思维上的启示的意义反而更大一点。</p>
<p>学习整体的方式主要是因为所学习的内容的缘故所以说优点运用不来，但是其对于新的知识的获取确实十分有用<br>学习规律要求定时复习，这是有道理的，但是在高中基本上的东西就那么多，后面到了高二下之后又不怎么学习新的东西，所以说也不是十分适用。<br>快速阅读我一直没有学会……或许这需要专门的训练？<br>思维导图主要还是载体的限制性和长线生效的局限性，在高中的后半部分，我通过软件Xmind解决了载体形式上的局限性，但是同时仍然没有解决长期生效的问题，一部分可能还是因为高中时期的知识体系还是较为死板的。<br>而至于快速记忆，确实有用但是，但是怎么说呢，感觉用来记忆小板块的东西较为好用，而记忆体系较大的东西实际上没有那么好用。当然这也有我没有完全学会的原因。</p>
<h3 id="4-现在"><a href="#4-现在" class="headerlink" title="4.现在"></a>4.现在</h3><p>而后就是现在了，我仍然在探索较为高效的知识体系构建法，目前的想法是：</p>
<p>听课学懂——做题——整理错题以及想法《循环》</p>
<p>总而言之，还是需要实践，另外，我仍旧想实践一下博赞的学习技巧原理</p>
<p>另外，为了使自己更加深刻的理解《自控力》这本书，我打算再抽时间出来对其进行按部就班的实践，并且总结我的想法和体验。</p>
<span id="more"></span>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3>]]></content>
      <tags>
        <tag>效率工具</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>灵感：交警清路</title>
    <url>/2023/12/05/1.Archieve/%E7%81%B5%E6%84%9F%EF%BC%9A%E4%BA%A4%E8%AD%A6%E6%B8%85%E8%B7%AF/</url>
    <content><![CDATA[<p>[[___游戏设计]]</p>
<h2 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h2><p><a href="https://www.bilibili.com/video/BV11w411W7ZQ/">盘点那些专属于中国人的安全感_哔哩哔哩_bilibili</a></p>
<h2 id="我的想法"><a href="#我的想法" class="headerlink" title="我的想法"></a>我的想法</h2><p>即时性，策略性。</p>
<p>只能说灵感来源于生活。</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>游戏设计</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次使用MATLAB进行绘图</title>
    <url>/2023/11/07/1.Archieve/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8MATLAB%E8%BF%9B%E8%A1%8C%E7%BB%98%E5%9B%BE/</url>
    <content><![CDATA[<p>[[<strong>_数学建模]]<br>[[_</strong>matlab]]</p>
<p>&emsp;&ensp;第一次使用matlab成功绘图~,开心。<br>&emsp;&ensp;因为我什么都不会，所以说暂时只能用十分拙劣的方式去实现绘图的功能。</p>
<p>&emsp;&emsp;在填数据上，因为还不懂matlab的一些基层的东西，我选择使用c++将数据处理成和网上给出的示例代码一样的格式，然后直接对他的数据进行替换实现的。</p>
<p>&emsp;&emsp;题目背景：数模2023B题<br>&emsp;&emsp;代码如下：(没有matlab语言的高亮格式我就直接用的c++的)<br><em>（数据是有所省略的）</em><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[</span><br><span class="line"><span class="number">4.00</span>  <span class="number">4.92</span>  <span class="number">66.05</span> </span><br><span class="line"><span class="number">4.00</span>  <span class="number">4.94</span>  <span class="number">65.84</span> </span><br><span class="line"><span class="number">4.00</span>  <span class="number">4.96</span>  <span class="number">65.62</span> </span><br><span class="line"><span class="number">4.00</span>  <span class="number">4.98</span>  <span class="number">65.41</span> </span><br><span class="line"><span class="number">4.00</span>  <span class="number">5.00</span>  <span class="number">65.20</span> </span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">x=A(:,<span class="number">1</span>);y=A(:,<span class="number">2</span>);z=A(:,<span class="number">3</span>);</span><br><span class="line">scatter3(x,y,z)%散点图</span><br><span class="line">figure</span><br><span class="line">[X,Y,Z]=griddata(x,y,z,linspace(<span class="built_in">min</span>(x),<span class="built_in">max</span>(x))<span class="string">&#x27;,linspace(min(y),max(y)),&#x27;</span>linea<span class="string">r&#x27;);%插值，最后一个参数是插值模式</span></span><br><span class="line"><span class="string">%我这里使用的是linear，如果想要更好的效果可以使用v4（但是那样的话性能开销大）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">pcolor(X,Y,Z);shading interp%伪彩色图</span></span><br><span class="line"><span class="string">figure,contourf(X,Y,Z) %等高线图</span></span><br><span class="line"><span class="string">figure,surf(X,Y,Z);%三维曲面</span></span><br><span class="line"><span class="string">figure,meshc(X,Y,Z)%剖面图</span></span><br><span class="line"><span class="string">view(0,0); </span></span><br><span class="line"><span class="string">figure,meshc(X,Y,Z);%s三维曲面（浅色）+等高线</span></span><br><span class="line"><span class="string">hidden off;</span></span><br></pre></td></tr></table></figure></p>
<p>总而言之，很拙劣地实现了绘图的功能。嗯在此分享一下自己的快乐以及记录一下代码<br><a href="https://www.imagehub.cc/image/piygz7j.1PyRdG"><img src="https://s1.imagehub.cc/images/2023/12/05/1fbf243398c113c40da42d9836c98bdf.jpeg" alt="1fbf243398c113c40da42d9836c98bdf.jpeg"></a><br><a href="https://www.imagehub.cc/image/piygxBQ.1PyG9h"><img src="https://s1.imagehub.cc/images/2023/12/05/b28abaceb06fc5e06cf792ddeeff20d4.jpeg" alt="b28abaceb06fc5e06cf792ddeeff20d4.jpeg"></a><br><a href="https://www.imagehub.cc/image/piy29Nn.1PyEPI"><img src="https://s1.imagehub.cc/images/2023/12/05/7624d3eef008d29273a8cccdec59c95b.jpeg" alt="7624d3eef008d29273a8cccdec59c95b.jpeg"></a><br><a href="https://www.imagehub.cc/image/piy2pAs.1PyW8e"><img src="https://s1.imagehub.cc/images/2023/12/05/480d99df4808c49154ec1c705ef1d542.jpeg" alt="480d99df4808c49154ec1c705ef1d542.jpeg"></a></p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>数学建模</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>灵感：一种另类的科技树设计</title>
    <url>/2023/11/02/1.Archieve/%E7%81%B5%E6%84%9F%EF%BC%9A%E4%B8%80%E7%A7%8D%E5%8F%A6%E7%B1%BB%E7%9A%84%E7%A7%91%E6%8A%80%E6%A0%91%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>[[___游戏设计]]</p>
<h3 id="〇、概览："><a href="#〇、概览：" class="headerlink" title="〇、概览："></a>〇、概览：</h3><p>&emsp;&emsp;最大的特征是：</p>
<ol>
<li>将树状的科技树变为网状的</li>
<li>将玩家可以精确控制的加点变为玩家控制科技树的发展目标（比如说装备），从而促进科技树的发展</li>
<li>加入国家政策机制：玩家可以调整国家的政策，从而指定侧重哪一方面发展(会烧钱)</li>
<li>人才团队机制：玩家将会获得可以调控的人才团队用来配置研究方向，从而促进科技网的发展。</li>
</ol>
<h3 id="一、科技网"><a href="#一、科技网" class="headerlink" title="一、科技网"></a>一、科技网</h3><ul>
<li>各个科技点之间按照<strong>网状</strong>链接</li>
<li>科技点会<strong>受到周围的科技点的影响</strong>(有的时候甚至还会出现坏的科技点)</li>
<li>玩家可以看到的是<strong>已经点亮的科技点</strong>，以及其<strong>对应的可能的前沿研究方向</strong></li>
</ul>
<h3 id="二、加点方式"><a href="#二、加点方式" class="headerlink" title="二、加点方式"></a>二、加点方式</h3><h4 id="在常规的游戏中："><a href="#在常规的游戏中：" class="headerlink" title="在常规的游戏中："></a>在常规的游戏中：</h4><ul>
<li>科技树的加点十分的确定</li>
<li>科技需要固定时间去研发</li>
<li>科技对于装备的增益十分的直接</li>
</ul>
<span id="more"></span>
<h4 id="在这种新型的科技树系统中："><a href="#在这种新型的科技树系统中：" class="headerlink" title="在这种新型的科技树系统中："></a>在这种新型的科技树系统中：</h4><ul>
<li>玩家无法直接操纵加点，而是以研发目标为导向，从而促进科技点的解锁</li>
<li>科技所需的时间是随机的</li>
<li>科技作为一个个科技点作用到装备上面，科技点具有可以被重复利用的价值即<ul>
<li>科技点可能作为下一个科技点的“前置科技点” </li>
<li><blockquote>
<p>*尽管在网状的科技网当中并没有严格意义上的前置，因为实际上你绕路也可以获得相关的技术，或者随机也可能获得该技术（不过概率比较小）</p>
</blockquote>
</li>
<li>科技点可以作用到多个装备上，例如：</li>
<li><blockquote>
<p>当你 解锁 了电池的科技点之后，该电池可以作用于很多的装备之上，并不只是增益在某一种装备上的。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="三、国家政策机制"><a href="#三、国家政策机制" class="headerlink" title="三、国家政策机制"></a>三、国家政策机制</h3><p>&emsp;&emsp;我们引入国家政策机制，玩家可以通过改变国家政策来对某一领域进行投资，具体如下：</p>
<ul>
<li>玩家在科技网中圈画出一个区域，在这个区域内的科技提升的概率提升（需要花钱）</li>
<li>区域内的增益会随着时间而增加，而转换政策会将累计增益归零</li>
<li>画的数量越多，所需金额越大。</li>
</ul>
<h3 id="四、人才机制"><a href="#四、人才机制" class="headerlink" title="四、人才机制"></a>四、人才机制</h3><p>&emsp;&emsp;玩家在发展科技的时候，有概率会获得<strong>人才团队</strong>，人才团队可以在他所属的领域内移动，并且给所附着科技点提高解锁概率</p>
]]></content>
      <tags>
        <tag>游戏设计</tag>
      </tags>
  </entry>
  <entry>
    <title>网易游戏解包尝试</title>
    <url>/2023/12/19/1.Archieve/%E7%BD%91%E6%98%93%E6%B8%B8%E6%88%8F%E8%A7%A3%E5%8C%85%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<p>[[<strong>_杂项技术]]<br>[[_</strong>编程]]</p>
<p>我有在玩《非人学园》这款网易旗下的moba类游戏，然后看到了他们同人的mmd，下面写着模型是由非人学园文件里面提取出来的。<br>于是心生好奇，也想自己尝试解包试试看。</p>
<p>但是以前的话尝试了两次解包，但是很可惜，没能成功。</p>
<p>但是这次我终于是成功了，hh</p>
<p>现在我将整件事情记录下来，作为技术积累使用。</p>
<span id="more"></span>
<h3 id="一、copy应用信息"><a href="#一、copy应用信息" class="headerlink" title="一、copy应用信息"></a>一、copy应用信息</h3><p>apk包里面更多的是代码等内容，应用在进入的时候被要求联网更新，另外角色语言和模型都是在进入游戏之后才会下载的程序包，这些内容一般被保存在：<code>Android\data\com.netease.huawei.frxy\</code></p>
<p>我想要的是人物模型等信息，所以我将其拷贝了一份到电脑上，并对其进行研究。<br>下面是其的文件夹结构,以及我对其的分析：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">apk_version  </span><br><span class="line">\\校验apk版本，其内的内容：&#123;<span class="string">&quot;apk_ver&quot;</span>: <span class="string">&quot;4590023&quot;</span>&#125;</span><br><span class="line">Documents    </span><br><span class="line">\\文档存档位置</span><br><span class="line">filelist.txt</span><br><span class="line">\\列出了核心的（登入界面所需要的）文件的位置以及其对应的hash值</span><br><span class="line">init.bm</span><br><span class="line">\\初始化什么的不知名文件</span><br><span class="line">log.txt</span><br><span class="line">log_old_0.txt</span><br><span class="line">\\登入日志文件</span><br><span class="line">neox.xml</span><br><span class="line">\\一些基础的配置信息</span><br><span class="line">npk_version</span><br><span class="line">\\貌似是npk文件的hash值</span><br><span class="line">patch_check_info.txt</span><br><span class="line">\\校验脚本文件</span><br><span class="line">pushnotice.txt</span><br><span class="line">\\是否显示公告？</span><br><span class="line">script.npk_hash_list</span><br><span class="line">\\脚本的hash值</span><br><span class="line">user_data.xml</span><br><span class="line">\\客户端版本等信息</span><br></pre></td></tr></table></figure></p>
<p>其中单拿neox.xml分析：<br>这个XML文件描述了一个名为”ppg3d”的配置文件，其中包括以下几个主要部分：</p>
<ol>
<li><p><strong>modules</strong>：定义了项目使用的模块。</p>
<ul>
<li><code>python.dll</code>：Python模块。</li>
<li><code>collision.dll</code>：碰撞检测模块。</li>
<li><code>detour.dll</code>：路径寻找模块。</li>
</ul>
</li>
<li><p><strong>client</strong>：定义了客户端的相关设置。</p>
<ul>
<li><code>DumpPath</code>：错误日志的保存路径。</li>
<li><code>DumpType</code>：错误日志的类型。</li>
<li><code>FontPath</code>：字体文件的路径。</li>
<li><code>ForcedDisplay</code>、<code>InitSpinningIcon</code>、<code>InitViewBackground</code>等：初始化界面的显示设置。</li>
<li><code>UseCADisplayLink</code>、<code>WindowAutoSize</code>等：窗口和显示相关的设置。</li>
<li><code>uis</code>：包含了两个UI框架的设置，分别是<code>cocosui</code>和<code>pygame</code>。</li>
</ul>
</li>
<li><p><strong>filesystems</strong>：定义了文件系统的加载设置。</p>
<ul>
<li><code>res</code>和<code>script</code>是两个文件系统。</li>
<li>每个文件系统下包含多个<code>loader</code>元素，定义了不同深度和类型的文件加载方式，包括加载器名称、开启者、根目录等。</li>
</ul>
</li>
<li><p><strong>render</strong>：定义了渲染相关的设置。</p>
<ul>
<li><code>Depth</code>、<code>EnableDepthShadow</code>、<code>EnableESM</code>等：深度、阴影和抗锯齿等渲染效果的设置。</li>
</ul>
</li>
<li><p><strong>cocosui</strong>：定义了Cocos UI相关的设置。</p>
<ul>
<li><code>DisableRunTimelineWhenLoadCsb</code>、<code>EnableBatchOptimize</code>等：优化和加载相关设置。</li>
<li><code>FontNameMap</code>：定义了字体名称和文件路径的映射关系。</li>
</ul>
</li>
<li><p><strong>rsync</strong>：定义了数据同步相关的设置。</p>
</li>
<li><p><strong>world</strong>：定义了游戏世界的设置。</p>
<ul>
<li><code>GpuParticle</code>、<code>GpuSkinningEnable</code>、<code>HardwareInstancing</code>等：GPU粒子、骨骼动画和实例化等渲染技术的启用状态。</li>
</ul>
</li>
<li><strong>python</strong>：定义了Python脚本相关的设置，包括是否启用线程。</li>
</ol>
<hr>
<p>通过更改游戏文件，我们可以发现游戏校验的基本逻辑是从网站上获取文件应该有的目录和对应的一级文件的hash值，如果发现hash值不一样，则将文件强制覆盖。</p>
<p>然后这些一级文件中有的是记录对应的二级hash值的文件，然后程序再校验这些二级的文件内容是否正确。</p>
<p>这样就避免了每次校对都需要校对大量文件的问题，从而提高了文件校对速度，减轻了服务器资源的消耗。</p>
<h3 id="二、document-文件存档位置"><a href="#二、document-文件存档位置" class="headerlink" title="二、document 文件存档位置"></a>二、document 文件存档位置</h3><p>这个文件夹里面包含了所有角色的建模，贴图，音频……</p>
<h4 id="1-模型的获取"><a href="#1-模型的获取" class="headerlink" title="1.模型的获取"></a>1.模型的获取</h4><p>但是所有的文件都使用了npk进行加密，所以所需要对其进行解密：</p>
<p>或许你应该注意到了，为什么非人学园的配置文件使用的是neoX这个名字？<br>其实非人学园使用的是网易自研的neoX系统，所以说我以此为方向找到了大佬们写的工具：<a href="https://github.com/zhouhang95/neox_tools/tree/gltf">zhouhang95/neox_tools at gltf (github.com)</a></p>
<p>可以直接解码npk文件，并把其导出为mesh^<a href="mesh是一种3d文件格式">1</a> 文件。</p>
<h4 id="2-音频的获取"><a href="#2-音频的获取" class="headerlink" title="2.音频的获取"></a>2.音频的获取</h4><p>游戏中常使用bnk文件，将一个角色的多条语音合并在一起并进行压缩，我们想要解开bnk文件就得先将音频分离然后将其转码为MP3。</p>
<p>这里有另外一个大佬的工具：<a href="https://github.com/Vextil/Wwise-Unpacker">Vextil/Wwise-Unpacker: Unpack game audio Wwise files (pck, bnk) (github.com)</a><br>可以打开pck, bnk文件。</p>
<h3 id="三、尾声"><a href="#三、尾声" class="headerlink" title="三、尾声"></a>三、尾声</h3><p>至此问题已基本上解决了，有关于这些模型文件和音频如何使用则有是另外一件事了~</p>
<p>另外，这里解压出的是一些资源类文件，其中还有一部分内容使用的是Pyc^<a href="pyc文件是由.py文件经过编译后生成的字节码文件，其**加载速度相对于之前的.py文件有所提高**，而且还可以**实现源码隐藏**，以及**一定程度上的反编译**。因此，不同版本的python可能运行不了同一个pyc文件。这里的pyc是修改过opcode的，pyc文件加密后就是nxs文件，nxs文件会被打包到npk文件中。">2</a> ，Nxs文件，这一部分大多是代码文件，我个人感觉用不到，所以说没有研究如何解压。但是可以看看这篇文章：<br><a href="https://zhuanlan.zhihu.com/p/90915400">网易游戏的四种解密&amp;解包，附工具 - 知乎 (zhihu.com)</a></p>
<hr>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://github.com/Vextil/Wwise-Unpacker">Vextil/Wwise-Unpacker: Unpack game audio Wwise files (pck, bnk) (github.com)</a></p>
<p><a href="https://github.com/zhouhang95/neox_tools/tree/gltf">zhouhang95/neox_tools at gltf (github.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/90915400">网易游戏的四种解密&amp;解包，附工具 - 知乎 (zhihu.com)</a></p>
]]></content>
      <tags>
        <tag>编程</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>耻辱2：游玩初体验</title>
    <url>/2023/11/26/1.Archieve/%E8%80%BB%E8%BE%B12%EF%BC%9A%E6%B8%B8%E7%8E%A9%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<p>[[___耻辱2]]</p>
<p>[[___游戏体验日记]]</p>
<p>今天，初步体验了一下《耻辱2》这款游戏，总体给我的观感不错。</p>
<span id="more"></span>
<h3 id="一、游戏构成分析"><a href="#一、游戏构成分析" class="headerlink" title="一、游戏构成分析"></a>一、游戏构成分析</h3><p>按照常规的游戏构成，对游戏的基本构成进行分析</p>
<p>首先是非戏剧元素<sup><a href="#fn_1" id="reffn_1">1</a></sup></p>
<h4 id="1-非戏剧元素"><a href="#1-非戏剧元素" class="headerlink" title="1.非戏剧元素"></a>1.非戏剧元素</h4><h5 id="1-在玩家上着手的设计"><a href="#1-在玩家上着手的设计" class="headerlink" title="1. 在玩家上着手的设计"></a>1. 在玩家上着手的设计</h5><ol>
<li><p><strong>游戏的邀请：在这部游戏中体现的并不流畅，即并不是十分地沉浸，但是在使得玩家游戏开始的时候就定下了一个基本的游戏基调。</strong></p>
</li>
<li><p><strong>游戏的人数：单人</strong></p>
</li>
<li><p><strong>玩家的角色：单一角色</strong></p>
</li>
<li><p><strong>玩家的交互模式：人机对抗</strong></p>
</li>
</ol>
<h5 id="2-游戏的目标"><a href="#2-游戏的目标" class="headerlink" title="2. 游戏的目标"></a>2. 游戏的目标</h5><ol>
<li><p><strong>追捕：游戏主要是以潜行为核心，需要玩家在尽可能不要被敌人发现的前提之下达成目标。</strong></p>
</li>
<li><p><strong>探索：游戏中有着围绕着背景的丰富的可探索元素，比如可以进入的房间、房间内的虫瘿、npc的对话、跟npc的交互……总而言之，对于背景的刻画相当优秀。<br>游戏中有两种可以为主角带来提升的探索元素，一种是收集点数以解锁技能和给技能加点，另外一种有点类似护符槽的设计，玩家需要在自己收集到的几种饰品中选择合适的以给予自己更好的增益效果。</strong></p>
</li>
<li><p><strong>掠夺</strong></p>
</li>
<li><p><strong>营救/逃脱</strong></p>
</li>
</ol>
<h5 id="3-程序："><a href="#3-程序：" class="headerlink" title="3. 程序："></a>3. 程序：</h5><p>游戏中基本上是以任务清单的形式引导玩家进行行动，但是具体的行动路径需要玩家自己探索。<br>除了游戏中提供的常规的方式之外，游戏还为我们设计了许多条需要额外探索才可以发现的方式。比如同样是为了打开【光门】可以选择断电或者修改光门的接线两种常规方式，但是同时你可以去打探小道消息通过渠道混过去，也可以寻找较为隐蔽的小路，比如通过原本封闭的。<br>因为实际上是属于潜行类游戏，刺杀思路基本上有一个基本的规范<sup><a href="#fn_2" id="reffn_2">2</a></sup>，让玩家玩起来有自己的思考同时也不会过于单调，游戏在一次次小的决策下推进，十分让人着迷。</p>
<h5 id="4-规则和边界："><a href="#4-规则和边界：" class="headerlink" title="4. 规则和边界："></a>4. 规则和边界：</h5><p>十分写实的游戏，基本上没有什么规则，很多东西都符合第一印象。我认为这种设计很好，让人有代入感……这可能是仿真游戏热门的原因之一吧……<br>规则定义的原则就是越简单越好，而最接近现实的规则就是最不需要解释的规则。</p>
<h5 id="5-资源：游戏中有十分多种资源类型，可以分为四类："><a href="#5-资源：游戏中有十分多种资源类型，可以分为四类：" class="headerlink" title="5. 资源：游戏中有十分多种资源类型，可以分为四类："></a>5. 资源：游戏中有十分多种资源类型，可以分为四类：</h5><ol>
<li><p><strong>血量和蓝条：影响你的战斗和魔法的使用，可以通过道具回复</strong></p>
<ol>
<li><p>血量：血量过低死亡，简单模式脱战一定时间后回复至半血。</p>
</li>
<li><p>![[耻辱2：蓝条设计]]</p>
</li>
</ol>
</li>
<li><p><strong>道具：属于消耗品，用一次少一次，分为一下几种：</strong></p>
<ol>
<li><p>攻击类：直接攻击敌人的道具，可以更快的击杀，或者可以破坏木门等场景。</p>
</li>
<li><p>陷阱类：配合刺杀思路使用，间接造成伤害</p>
</li>
<li><p>恢复类：回复血或者蓝。</p>
</li>
<li><p>技能点数：技能点数只能被有限的分配到各个项目上去，所以说合理的分配点数成为了玩家需要考虑的一件事情。</p>
</li>
</ol>
</li>
<li><p><strong>冲突：玩家和人机的冲突，人机作为守卫而玩家需要绕开/打破防守来达成目的。</strong></p>
</li>
<li><p><strong>结果：达成目的然后回到船上，即可达成获胜。</strong></p>
</li>
</ol>
<h4 id="2-戏剧元素"><a href="#2-戏剧元素" class="headerlink" title="2.戏剧元素"></a>2.戏剧元素</h4><h5 id="1-挑战"><a href="#1-挑战" class="headerlink" title="1. 挑战"></a>1. 挑战</h5><ol>
<li><p><strong>挑战因人而异</strong></p>
<ol>
<li><p>可以选择难度</p>
</li>
<li><p>可以选择是否使用魔法</p>
</li>
</ol>
</li>
<li><p><strong>挑战是动态的</strong></p>
<ol>
<li>游戏中的难度随着游戏的推进不断变难，从敌人类型的变多变强，再到敌人数目的变多，分布变得更刁钻。</li>
</ol>
</li>
<li><p><strong>挑战的设计优秀：</strong></p>
<ol>
<li>这是一个需要技巧的挑战性的活动<ol>
<li>目标引导：达成某项任务</li>
<li>有规则限制：需要尽量不被发现</li>
<li>需要一定技巧：有一定的技巧</li>
</ol>
</li>
<li>人们将自己所有的技能都投入，来达到他们的目的：游戏中设计的每一部分都有它的作用，而不会出现无用的设计；玩家通过游戏学习到的东西可以被随时运用</li>
</ol>
</li>
<li><strong>- 专注于目前正在做的任务：</strong><ol>
<li>在游戏中，玩家较容易专注于当前的短期任务，比如进入某个房间……</li>
<li>但是在游戏中，玩家却比较不能专注于游戏在这一点似乎存在着一些问题，按照目标指向为核心往往只能找到常规的解决办法，而其他的方法则需要探索获得。又由于地图较为复杂，按照核心目标为导向往往会让你迷路，而且花费大功夫然后发现原来有其他的路可以过去，这种感觉带来的挫败感是无法避免的。这种设计无疑是有很大的有点的，但是也不可避免的有着一些缺点。<br><strong>那么如何解决这个问题呢？</strong></li>
</ol>
</li>
<li><strong>个人决策在游戏中的地位</strong><ol>
<li>个人决策在游戏中起到了关键性的作用，整个游戏都是在玩家的决策影响下推进的。包括可见视野等等信息都是玩家可以获得的星系，玩家通过这些信息做出决策，并选择最佳的策略。</li>
<li>个人决策下的偶然性：个人决策与结果强相关，但是其中仍然存在十分充分的随机元素。<ol>
<li>首先对于玩家来说，这个区域本身就是说未知的，玩家对于探索的结果会存在“好奇”。</li>
<li>其次，游戏中，敌人的行为有一定的范式，但是并不是固定的，而是相对随机的，这给玩家带来了每一关都有不一样的挑战的体验。</li>
</ol>
</li>
</ol>
</li>
<li><strong>失去自我意识</strong><ol>
<li>玩家不必为了自我评价或者是什么干扰自己的游玩体验。游戏的目标相对宽松，达成目标的途径有多种，基本上只要完成某个关键结果就行了。在这种设计的影响下，玩家其实不太需要注意自己的具体行为到底如何。</li>
</ol>
</li>
<li><strong>玩的潜力<sup><a href="#fn_3" id="reffn_3">3</a></sup></strong><ol>
<li>玩是一种思维的状态，而这种玩法的基本范式属于“带入类”</li>
<li>玩家的类型：竞争型，收集型。</li>
<li>参与度：是否可以引起一个人内在的思考？<strong>不能</strong><ol>
<li>如何设计才能引起屏幕外面的人的共鸣？使其代入角色？</li>
</ol>
</li>
</ol>
</li>
<li><strong>故事</strong><ol>
<li>故事预设：<ol>
<li>背景：中世纪，魔法、剑、机械交织存在的世界，被血蝇所侵袭。</li>
<li>角色：还行，<strong>目前没有什么感想</strong><ol>
<li>角色受玩家的操控，角色是玩家在游戏中的媒介。</li>
</ol>
</li>
</ol>
</li>
<li>世界观：<ol>
<li>世界观较为复杂。多个国家、多个地区、以及多个人，将整个事件编织成一个大网。</li>
<li>世界观较为庞大。从细致入微的各个城市的特点的塑造，再到对于关键人物的谜团的解开……总之十分的引人入胜。</li>
</ol>
</li>
</ol>
</li>
<li><strong>情节发展</strong><ol>
<li>冲突：玩家与游戏系统中发生冲突。其根本实际上存在两个核心的冲突，主角团和策反的人之间的冲突，以及人与自然（血蝇，鼠疫）之间的冲突。游戏中还埋下了界外魔的设定。</li>
<li>情节发展十分有意思。</li>
<li>游戏结局：<strong>我还没玩完呢哈哈哈哈</strong></li>
</ol>
</li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. 即较为传统的游戏元素，注意和戏剧元素区分开来<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 即偷偷靠近，想办法不让人发现地刺杀，处理尸体<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. 玩的潜力的定义：在规则框架内的自由，以及紧凑体验和自我表达的机会<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>游戏体验日记</tag>
        <tag>耻辱2</tag>
      </tags>
  </entry>
  <entry>
    <title>考研数学是什么？</title>
    <url>/2023/11/20/1.Archieve/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p>[[___未完成]]</p>
<p>考研数学是指在中国大陆地区研究生入学考试中的一种专业课程考试科目，其目的是测试考生在数学方面的基本理论知识、基本技能和运用能力。它包含高等数学、线性代数、概率论和数理统计四个部分。</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>好奇心</tag>
      </tags>
  </entry>
  <entry>
    <title>耻辱2：给玩家一个家的港湾</title>
    <url>/2023/11/30/1.Archieve/%E8%80%BB%E8%BE%B12%EF%BC%9A%E7%BB%99%E7%8E%A9%E5%AE%B6%E4%B8%80%E4%B8%AA%E5%AE%B6%E7%9A%84%E6%B8%AF%E6%B9%BE/</url>
    <content><![CDATA[<p>[[<strong>_耻辱2]]<br>[[_</strong>游戏设计]]</p>
<p>在耻辱2中，每次一个新的任务开始的时候，玩家总是会回到“鞭痕号”，并在这里承接推进剧情，给予玩家一个休息的空间。一般这种场景需要有以下的特质：</p>
<ol>
<li><strong>相同的场景</strong> ：相同，或者至少相似，玩家不会因为不同而感到陌生，而是熟悉。</li>
<li><strong>温和的环境</strong> ：这个“港湾”对于玩家来说是一个较为温和的存在，玩家的精神在这里得到放松。对于游戏而言，可以最为一个进度的指标或者说是里程碑，使得玩家可以明显地感受到游戏的推进，同时，也是用于调整游戏整体下来的紧绷/宽松的一个较为好用的工具。</li>
<li><strong>有所变化而不是一成不变</strong> ：在以上的两个要求的基础上如果可以随着游戏情节的推进而发生对应的变化会更好，这样可以让玩家更加明显的体验到剧情的推进以及为带来的变化而感到欣喜。同时也可以使得玩家期待接下来会发生的变化</li>
</ol>
<span id="more"></span>
]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>耻辱2</tag>
      </tags>
  </entry>
  <entry>
    <title>自律的万能公式</title>
    <url>/2023/11/14/1.Archieve/%E8%87%AA%E5%BE%8B%E7%9A%84%E4%B8%87%E8%83%BD%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f718d143a1684451247583b36b913a30fd8ff640b3841e0cef02e84ed67fe739"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密�?.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>效率工具</tag>
        <tag>bilibili归档</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>耻辱2：蓝条设计</title>
    <url>/2023/11/27/1.Archieve/%E8%80%BB%E8%BE%B12%EF%BC%9A%E8%93%9D%E6%9D%A1%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>[[<strong>_耻辱2]]<br>[[_</strong>游戏设计]]</p>
<p>这个设计比较有意思，使用技能会消耗蓝量，蓝量会在使用技能一段时间后恢复至当前数值+固定数值。相当于多次连续使用技能不仅会耗蓝，还会消耗蓝量的当前的上限。只有通过使用道具才能将蓝量拉回来。</p>
<p>这种设计在不过分限制蓝条的使用的前提下，对过于依赖魔法做出了惩罚：即下一次能透支的连续使用魔法的次数会变少，我认为这是值得借鉴的一点。</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>游戏设计</tag>
        <tag>耻辱2</tag>
      </tags>
  </entry>
  <entry>
    <title>转专业</title>
    <url>/2023/10/31/1.Archieve/%E8%BD%AC%E4%B8%93%E4%B8%9A/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太�?, 请再试试." data-whm="抱歉, 这个文章不能被校�?, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5d8594f60b158e7ffc3c5c89e1eb8096dc920bbe417f7c54de08a5e95f06b41f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密�?.</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Xmind归档</tag>
        <tag>XLXZ</tag>
      </tags>
  </entry>
  <entry>
    <title>自制英雄——爱哭鬼（改编）</title>
    <url>/2024/02/07/1.Archieve/%E8%87%AA%E5%88%B6%E8%8B%B1%E9%9B%84%E2%80%94%E2%80%94%E7%88%B1%E5%93%AD%E9%AC%BC%EF%BC%88%E6%94%B9%E7%BC%96%EF%BC%89/</url>
    <content><![CDATA[<p>[[<strong>_游戏策划]]<br>[[_</strong>灵感]]<br>原文来自于</p>
<p><a href="https://www.bilibili.com/read/cv15975040/">【非人学园/第五人格】自制联动英雄——爱哭鬼|-|哔哩哔哩|(bilibili.com)</a></p>
<p>本篇在其基础上改了些东西，以达到本人的审美水准</p>
<span id="more"></span>
<p>本篇为『非人×第五』系列的第四个自制联动英雄——爱哭鬼罗比，他将化身为一个拥有高机动性和强大控场能力的刺客。</p>
<h2 id="角色基本介绍"><a href="#角色基本介绍" class="headerlink" title="角色基本介绍"></a>角色基本介绍</h2><p>姓名:罗比</p>
<p>定位:突袭</p>
<p>特长:冲刺/回复</p>
<p>分路:野区</p>
<p>操作难度:⭐⭐⭐⭐⭐</p>
<h2 id="技能介绍"><a href="#技能介绍" class="headerlink" title="技能介绍"></a>技能介绍</h2><h3 id="被动-『爱哭鬼』"><a href="#被动-『爱哭鬼』" class="headerlink" title="被动:『爱哭鬼』"></a>被动:『爱哭鬼』</h3><blockquote>
<p>罗比的技能会对地方造成【恐惧】效果，最多5/7/9/12层，每层使其减速3%，并降低其3%双抗。</p>
<p>罗比普攻对非英雄单位额外造成20%的伤害，每移动100码距离获得一次强化普攻的机会，使下次普攻冲向敌人，用斧头重劈，对锁定目标及附近小范围内的敌人造成100（+120%物理加成）+英雄等级×10点物理伤害，命中时回复自己80（+25%物理加成）点生命值，若罗比位于腐朽领域内，重劈攻击会附带0.2秒眩晕，罗比可储存至多3次强化普攻机会。罗比位于安息之路上移速持续增加，3秒内加速比例达到最大150%，罗比在安息之路上每停留4秒获得一次强化普攻机会</p>
</blockquote>
<h3 id="一技能-安息松-CD-2s-蓝耗-60"><a href="#一技能-安息松-CD-2s-蓝耗-60" class="headerlink" title="一技能:安息松     CD:2s     蓝耗:60"></a>一技能:安息松     CD:2s     蓝耗:60</h3><blockquote>
<p>罗比消耗一根树枝并在指定位置种下一颗面向自己的树苗(敌方不可见)，树枝会在触碰到敌方角色后迅速长成【安息松】，对周围角色造成200（+10%物理加成）物理伤害并将其击飞0.3s后向朝向的方向抛掷40码的距离，然后在1s内扩大根系形成半径120码的【腐朽领域】。</p>
<p>【安息松】拥有 20%自身最大生命值的生命值并继承罗比的双抗，被摧毁时与之相关的安息之路会消失，同时留下树枝，罗比接触树枝时可拾取树枝，最多存在60s，【腐蚀领域】会在安息松被破坏后的2s消失</p>
<p>【腐蚀领域】每0.5秒会对在其范围内的目标造成50（+5%安息松当前生命值）法术伤害，同时给予其【恐惧】</p>
<p>不同安息松的腐朽领域接壤时将在两颗安息松之间形成一条安息之路。</p>
</blockquote>
<p>被动:罗比开局拥有8根树枝，全场至多存在6棵安息松，达到上限值后，新种下的安息松会取代最先种的安息松</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>Lv1</th>
<th>Lv2</th>
<th>Lv3</th>
<th>Lv4</th>
<th>Lv5</th>
<th>Lv6</th>
</tr>
</thead>
<tbody>
<tr>
<td>双抗削减</td>
<td>15</td>
<td>17</td>
<td>19</td>
<td>21</td>
<td>23</td>
<td>25</td>
</tr>
<tr>
<td>固定双抗</td>
<td>100</td>
<td>130</td>
<td>160</td>
<td>190</td>
<td>220</td>
<td>250</td>
</tr>
<tr>
<td>存在时间</td>
<td>60</td>
<td>65</td>
<td>70</td>
<td>75</td>
<td>80</td>
<td>85</td>
</tr>
</tbody>
</table>
</div>
<h3 id="二技能-安息之路-CD-15-蓝耗-120"><a href="#二技能-安息之路-CD-15-蓝耗-120" class="headerlink" title="二技能:安息之路     CD:15     蓝耗:120"></a>二技能:安息之路     CD:15     蓝耗:120</h3><p>罗比向指定方向位移，对路径上的敌人造成450（+120%物理加成）点物理伤害并形成安息之路，树根进入腐朽领域时会额外延伸一条较窄的安息之路支路通向该领域附属的安息松。召唤树根时罗比无法移动，处于霸体状态，再次使用该技能或安息之路达到200码的极限距离时停止召唤。若罗比当前拥有树枝，还会让树根携带树枝生长，并且在停止召唤后在终点处种下一棵安息松。使用该技能时召唤的安息之路持续30秒。</p>
<h3 id="三技能-除怨-CD-12s-蓝耗-200"><a href="#三技能-除怨-CD-12s-蓝耗-200" class="headerlink" title="三技能:除怨    CD:12s    蓝耗:200"></a>三技能:除怨    CD:12s    蓝耗:200</h3><p>罗比快速向指定位置进行滑铲，对路径上的敌人造成150（+80%物理加成）点物理伤害，命中时回复自己75（+60%额外物理加成）点生命值，若位移的终点位于安息之路，则会立马刷新该技能并获得【除怨-二】</p>
<h3 id="三技能-除怨-二-CD-0s-蓝耗-0"><a href="#三技能-除怨-二-CD-0s-蓝耗-0" class="headerlink" title="三技能:除怨-二    CD:0s    蓝耗:0"></a>三技能:除怨-二    CD:0s    蓝耗:0</h3><p>指定当前所在安息之路对应的安息松，罗比将自己拉至目标并将该安息松摧毁，对路径上的敌人造成150（+80%物理加成）点物理伤害和0.5s禁锢，并引爆【腐蚀领域】和与之链接的【腐蚀领域】对在其中的角色造成1000（+70%物理加成）的物理伤害</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>罗比的核心就是种树，然后把树拆了，就是这样</p>
]]></content>
      <tags>
        <tag>游戏策划</tag>
      </tags>
  </entry>
  <entry>
    <title>！方便使用的基本模板</title>
    <url>/2023/11/05/1.Archieve/%EF%BC%81%E6%96%B9%E4%BE%BF%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p>[[___hexo]]</p>
<h3 id="〇、本blog书写规范要求："><a href="#〇、本blog书写规范要求：" class="headerlink" title="〇、本blog书写规范要求："></a>〇、本blog书写规范要求：</h3><ul>
<li>缩进尽量只使用<code>###</code>和<code>####</code>，更大的标题尽量少使用，更小的标题请使用<code>-</code>或者<code>1.</code>创建列表。</li>
<li>在不打断文档结构的前提之下，在blog的第20左右行处加入<code>&lt;!-- more --&gt;</code><br>  使用可以在主页面显示一个read more，避免长blog在文档里面占用太大的位置</li>
</ul>
<span id="more"></span>
<h3 id="一、markdown支持的写法"><a href="#一、markdown支持的写法" class="headerlink" title="一、markdown支持的写法"></a>一、markdown支持的写法</h3><ul>
<li><h4 id="插入图片（但是只有在mark预览中可以看到）"><a href="#插入图片（但是只有在mark预览中可以看到）" class="headerlink" title="插入图片（但是只有在mark预览中可以看到）"></a>插入图片（但是只有在mark预览中可以看到）</h4><ul>
<li>建议使用图床，这样的话在网站上和这里都能够成功查看，唯一的缺点就是不知道会不会跑路……</li>
<li>所以说要本地存储一份，再在网站上copy一份<br>网站限制图片最大不超过10mb，但是实际上一些小的截图也并不会超过10mb</li>
</ul>
</li>
</ul>
<p>我目前使用的图床：<a href="https://www.imagehub.cc/xlxz">来自 Xlxz 的 图片 (xlxz) - ImageHub - 图仓</a> 还算是好用的。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 已弃用的网站[Xlxz (xlxz) - 路过图床 (imgse.com)](https://imgse.com/xlxz)</span><br><span class="line"></span><br><span class="line">这个网站免费每小时限制8张，每天限制16张，更高额度要每年120￥</span><br><span class="line"></span><br><span class="line">新的网站免费每分钟限制上传 50 张图片，每小时限制上传 200 张图片，每天限制上传 800 张图片，每周限制上传 2000 张图片，每月限制上传 5000 张图片。超过限额的图片会上传失败。（但是没有升级入口）</span><br><span class="line"></span><br><span class="line">你说我选谁</span><br></pre></td></tr></table></figure><br>使用方式：在图床上上传了之后获取链接，链接copy到这里就ok了，比如<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">![e9c9c91cb7593ad0aacde6bdc098b7d3.png</span>](<span class="link">https://s1.imagehub.cc/images/2023/12/05/e9c9c91cb7593ad0aacde6bdc098b7d3.png</span>)](<span class="link">https://www.imagehub.cc/image/1Py4Is</span>)</span><br></pre></td></tr></table></figure></p>
<p><a href="https://www.imagehub.cc/image/1Py4Is"><img src="https://s1.imagehub.cc/images/2023/12/05/e9c9c91cb7593ad0aacde6bdc098b7d3.png" alt="e9c9c91cb7593ad0aacde6bdc098b7d3.png"></a></p>
<p>hmmm,还是十分好用的。</p>
<p>输入错误的链接/图片被删除了会显示警告图片：<br><a href="https://www.imagehub.cc/image/1Py4Is">![<img src="https://s1.imagehub.cc/images/2023/12/05/e9c9c91cb7593ad0aa6bdc098b7d3.png" alt="e9c9c91cb7593ad0aacde6bdc098b7d3.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 已经弃用的方法</span><br><span class="line"></span><br><span class="line">- 基本语法：(以现在这个blog为例)</span><br><span class="line">`![这里填图片现实的名字，填就是不显示](/！方便使用的基本模板/xxxx.png &quot;xxxx&quot;)`</span><br><span class="line"></span><br><span class="line">- 建议和hexo显示图片相结合：即`style=&quot;display:none&quot;`中使用markdown支持的写法，方便在书写的时候进行预览</span><br><span class="line"></span><br><span class="line">    ```html</span><br><span class="line">    &lt;p style=&quot;display:none&quot;&gt; </span><br><span class="line"></span><br><span class="line">    ![](/！方便使用的基本模板/xxxx.png &quot;xxxx&quot;)</span><br><span class="line">    &lt;/p&gt;</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这里运用了一个特性，在markdowm渲染器中，没有不显示这一种渲染方式，所以可以实现在markdown编辑器中实现预览。</p>
<p>&emsp;&emsp;而在网页端,下方代码内部的文本将不会被显示。可以避免出现一个碎掉的图片影响感官。</p>

<p style="display:none"> 

![](/3.Source/img/next.png)
</p>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- #### 首行缩进</span><br><span class="line">    &amp;emsp;&amp;emsp;在markdowm中空格会被忽略而tab键是用来设置文本的缩进的。</span><br><span class="line">    &amp;emsp;&amp;emsp;故需要使用`&amp;emsp;&amp;emsp;`来代替实现首行缩进。比如这段文本：</span><br><span class="line"></span><br><span class="line">    ```markdown</span><br><span class="line">    &amp;emsp;&amp;emsp;在markdowm中空格会被忽略而tab键是用来设置文本的缩进的。</span><br><span class="line">    &amp;emsp;&amp;emsp;故需要使用`&amp;emsp;&amp;emsp;`来代替实现首行缩进。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="有关于markdown的一些其他的基础写法可以查看官网："><a href="#有关于markdown的一些其他的基础写法可以查看官网：" class="headerlink" title="有关于markdown的一些其他的基础写法可以查看官网："></a>有关于markdown的一些其他的基础写法可以查看官网：</h4>  <a href="https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88">markdown官网手册</a></li>
</ul>
<h3 id="二、hexo支持的写法"><a href="#二、hexo支持的写法" class="headerlink" title="二、hexo支持的写法"></a>二、hexo支持的写法</h3><p>&emsp;&emsp;实际上使用markdown就已经可以实现大多数的功能，但是下面的几个功能我认为是比较重要且只能使用hexo实现的。</p>
<ul>
<li><h4 id="显示资源里面的图片"><a href="#显示资源里面的图片" class="headerlink" title="显示资源里面的图片"></a>显示资源里面的图片</h4><p>将图片放到和blog相同名称的文件夹内，然后使用<br><code>&#123;% asset_img XXXX.png "XXXX" %&#125;</code><br>就可以在网站中显示图片了（但是在markdown中不显示）</p>
</li>
<li><h4 id="xmind显示插件"><a href="#xmind显示插件" class="headerlink" title="xmind显示插件"></a>xmind显示插件</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这里一定要空一行</span><br><span class="line">&#123;% markmap height [depth] %&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">### 使用和markdown一样的语法</span></span><br><span class="line"><span class="section">#### 还可以实现子分叉</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 还有分条列点</span><br><span class="line"><span class="bullet">-</span> 1</span><br><span class="line"><span class="bullet">-</span> 2</span><br><span class="line"><span class="bullet">    -</span> 2.1</span><br><span class="line"><span class="bullet">    -</span> 2.2</span><br><span class="line"><span class="bullet">        -</span> 2.2.1</span><br><span class="line"><span class="bullet">        -</span> 2.2.2</span><br><span class="line"></span><br><span class="line">&#123;% endmarkmap %&#125;</span><br><span class="line">这里一定要空一行</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>显示效果如下：</p>

<div class="markmap-container" style="height:height">
  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;使用和markdown一样的语法&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;还可以实现子分叉&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;还有分条列点&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;1&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;2&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;2.1&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;2.2&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;2.2.1&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:8,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;2.2.2&quot;}]}]}]}]}"/>
</div>

<p>建议配合下拉菜单显示原文使用，方便检索和查看原文</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">summary</span>&gt;</span>显示原文<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<details>
<summary>显示原文</summary>

### 使用和markdown一样的语法
#### 还可以实现子分叉

- 还有分条列点
- 1
- 2
    - 2.1
    - 2.2
        - 2.2.1
        - 2.2.2
</details>

<h3 id="三、html支持的写法"><a href="#三、html支持的写法" class="headerlink" title="三、html支持的写法"></a>三、html支持的写法</h3><ul>
<li><h4 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h4></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">summary</span>&gt;</span>下拉菜单<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure>
<details>
<summary>下拉菜单</summary>

</details>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% markmap height [depth] %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endmarkmap %&#125;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">summary</span>&gt;</span></span>下拉菜单<span class="language-xml"><span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>2023-B题</title>
    <url>/2023/12/05/2.Reference/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%9B%BD%E8%B5%9B/2023-B%E9%A2%98/</url>
    <content><![CDATA[<p>[[___数学建模题目]]</p>
<p><img src="https://s1.imagehub.cc/images/2023/12/05/b82d1a248d6642d01fb0acfa1f932a46.png" alt="b82d1a248d6642d01fb0acfa1f932a46.png"></p>
<span id="more"></span>
<p><img src="https://s1.imagehub.cc/images/2023/12/05/6e566018e777b23d9261513530ba09ae.png" alt="6e566018e777b23d9261513530ba09ae.png"><br><img src="https://s1.imagehub.cc/images/2023/12/05/ca9404b1164559f140900327fffb1901.png" alt="ca9404b1164559f140900327fffb1901.png"></p>
]]></content>
      <tags>
        <tag>数学建模题目</tag>
      </tags>
  </entry>
</search>
